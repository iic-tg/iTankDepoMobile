Imports Microsoft.VisualBasic
Imports iInterchange.iTankDepo.Data
Imports iInterchange.iTankDepo.Entities
Imports iInterchange.iTankDepo.GatewayFramework

#Region "RepairCompletions"
Public Class RepairCompletions
#Region "Declaration Part.. "
    Dim objData As DataObjects
    Private Const ActivityStatusPendingSelectQuery As String = "SELECT ACTVTY_STTS_ID,CSTMR_ID,CSTMR_CD,EQPMNT_NO,EQPMNT_TYP_ID,EQPMNT_TYP_CD,EQPMNT_CD_ID,EQPMNT_CD_CD,GTN_DT,EQPMNT_STTS_ID,EQPMNT_STTS_CD,ACTVTY_NAM,ACTVTY_DT,GI_TRNSCTN_NO,DPT_ID,DPT_CD,DPT_NAM,YRD_LCTN FROM V_ACTIVITY_STATUS WHERE  EQPMNT_STTS_ID IN (SELECT PENDING_STATUS FROM WF_ACTIVITY WHERE WF_ACTIVITY_NAME='Repair Completion' AND DPT_ID=@DPT_ID)"

    'Private Const RepairCompletionPendingQuery As String = "SELECT ACTVTY_NM,RPR_ESTMT_ID,RPR_ESTMT_NO,RVSN_NO,GI_TRNSCTN_NO,RPR_ESTMT_DT,EQPMNT_NO,EQPMNT_STTS_ID,(SELECT EQPMNT_TYP_CD FROM V_ACTIVITY_STATUS WHERE EQPMNT_NO=V_REPAIR_ESTIMATE.EQPMNT_NO AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO) AS EQPMNT_TYP_CD,(SELECT EQPMNT_CD_CD FROM V_ACTIVITY_STATUS WHERE EQPMNT_NO=V_REPAIR_ESTIMATE.EQPMNT_NO AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO) AS EQPMNT_CD_CD,(SELECT YRD_LCTN FROM V_ACTIVITY_STATUS WHERE EQPMNT_NO=V_REPAIR_ESTIMATE.EQPMNT_NO AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO) AS YRD_LCTN,(SELECT GTN_DT FROM V_ACTIVITY_STATUS WHERE EQPMNT_NO=V_REPAIR_ESTIMATE.EQPMNT_NO AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO) AS GTN_DT,EQPMNT_STTS_CD,CSTMR_ID,CSTMR_CD,CSTMR_NAM,DPT_ID,DPT_CD,DPT_NAM,ACTVTY_DT,LBR_RT_NC,RPR_TYP_ID,RPR_TYP_CD,CRT_OF_CLNLNSS_BT,INVCNG_PRTY_ID,INVCNG_PRTY_CD,INVCNG_PRTY_NM,ORGNL_ESTMN_DT,ESTMTN_TTL_NC,CSTMR_CRRNCY_ID,INVCNG_PRTY_ID,INVCNG_PRTY_CD, NULL AS RPR_CMPLTN_DT,(SELECT SUM(LBR_HRS) FROM REPAIR_ESTIMATE_DETAIL WHERE  RPR_ESTMT_ID=V_REPAIR_ESTIMATE.RPR_ESTMT_ID) AS ESTMTD_LBR_HRS,ACTL_MN_HR_NC,LBR_RT_NC,APPRVL_AMNT_NC,ORGNL_ESTMTN_AMNT_NC,CSTMR_ESTMTN_TTL_NC,CSTMR_APPRVL_AMNT_NC,INVCNG_PRTY_CRRNCY_ID,DPT_CRRNCY_ID,CSTMR_EXCHANGE_RATE_NC,OWNR_APPRVL_RF,PRTY_APPRVL_RF  FROM V_REPAIR_ESTIMATE WHERE EXISTS (SELECT GI_TRNSCTN_NO FROM ACTIVITY_STATUS WHERE ACTVTY_NAM in('Repair Approval','Leak Test') AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO AND EQPMNT_STTS_ID IN (SELECT PENDING_STATUS FROM WF_ACTIVITY WHERE WF_ACTIVITY_NAME ='Repair Completion' AND DPT_ID=@DPT_ID)) AND DPT_ID=@DPT_ID  AND ACTVTY_NM = 'Repair Approval' AND RPR_ESTMT_NO NOT IN (SELECT RPR_ESTMT_NO FROM REPAIR_ESTIMATE WHERE EQPMNT_STTS_ID IN (SELECT DEFAULT_STATUS_ID FROM WF_ACTIVITY WHERE WF_ACTIVITY_NAME ='Repair Completion' AND DPT_ID=V_REPAIR_ESTIMATE.DPT_ID)) ORDER BY RPR_ESTMT_DT"
    'Addtional Cleaning
    'Private Const RepairCompletionPendingQuery As String = "SELECT ACTVTY_NM,RPR_ESTMT_ID,RPR_ESTMT_NO,RVSN_NO,GI_TRNSCTN_NO,RPR_ESTMT_DT,EQPMNT_NO,EQPMNT_STTS_ID,(SELECT EQPMNT_TYP_CD FROM V_ACTIVITY_STATUS WHERE EQPMNT_NO=V_REPAIR_ESTIMATE.EQPMNT_NO AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO) AS EQPMNT_TYP_CD,(SELECT EQPMNT_CD_CD FROM V_ACTIVITY_STATUS WHERE EQPMNT_NO=V_REPAIR_ESTIMATE.EQPMNT_NO AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO) AS EQPMNT_CD_CD,(SELECT YRD_LCTN FROM V_ACTIVITY_STATUS WHERE EQPMNT_NO=V_REPAIR_ESTIMATE.EQPMNT_NO AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO) AS YRD_LCTN,(SELECT GTN_DT FROM V_ACTIVITY_STATUS WHERE EQPMNT_NO=V_REPAIR_ESTIMATE.EQPMNT_NO AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO) AS GTN_DT,EQPMNT_STTS_CD,CSTMR_ID,CSTMR_CD,CSTMR_NAM,DPT_ID,DPT_CD,DPT_NAM,ACTVTY_DT,LBR_RT_NC,RPR_TYP_ID,RPR_TYP_CD,CRT_OF_CLNLNSS_BT,INVCNG_PRTY_NM,ORGNL_ESTMN_DT,ESTMTN_TTL_NC,CSTMR_CRRNCY_ID,INVCNG_PRTY_ID,INVCNG_PRTY_CD, NULL AS RPR_CMPLTN_DT,(SELECT SUM(LBR_HRS) FROM REPAIR_ESTIMATE_DETAIL WHERE  RPR_ESTMT_ID=V_REPAIR_ESTIMATE.RPR_ESTMT_ID) AS ESTMTD_LBR_HRS,ACTL_MN_HR_NC,APPRVL_AMNT_NC, ORGNL_ESTMTN_AMNT_NC,CSTMR_ESTMTN_TTL_NC,CSTMR_APPRVL_AMNT_NC, INVCNG_PRTY_CRRNCY_ID,DPT_CRRNCY_ID, CSTMR_EXCHANGE_RATE_NC,OWNR_APPRVL_RF,PRTY_APPRVL_RF,ADDTNL_CLNNG_BT,ADDTNL_CLNNG_FLG  FROM V_REPAIR_ESTIMATE WHERE EXISTS (SELECT GI_TRNSCTN_NO FROM ACTIVITY_STATUS WHERE ACTVTY_NAM IN('REPAIR APPROVAL','LEAK TEST','INSPECTION') AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO AND EQPMNT_STTS_ID IN (10,6) AND ACTVTY_NM = 'REPAIR APPROVAL' AND RPR_ESTMT_NO NOT IN (SELECT RPR_ESTMT_NO FROM REPAIR_ESTIMATE WHERE EQPMNT_STTS_ID IN (11) AND DPT_ID=V_REPAIR_ESTIMATE.DPT_ID)) AND DPT_ID=@DPT_ID AND ADDTNL_CLNNG_BT=0 ORDER BY RPR_ESTMT_DT"
    Private Const RepairCompletionPendingQueryJTS As String = "SELECT ACTVTY_NM,RPR_ESTMT_ID,RPR_ESTMT_NO,RVSN_NO,GI_TRNSCTN_NO,RPR_ESTMT_DT,EQPMNT_NO,EQPMNT_STTS_ID,(SELECT EQPMNT_TYP_CD FROM V_ACTIVITY_STATUS WHERE EQPMNT_NO=V_REPAIR_ESTIMATE.EQPMNT_NO AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO) AS EQPMNT_TYP_CD,(SELECT EQPMNT_CD_CD FROM V_ACTIVITY_STATUS WHERE EQPMNT_NO=V_REPAIR_ESTIMATE.EQPMNT_NO AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO) AS EQPMNT_CD_CD,(SELECT YRD_LCTN FROM V_ACTIVITY_STATUS WHERE EQPMNT_NO=V_REPAIR_ESTIMATE.EQPMNT_NO AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO) AS YRD_LCTN,(SELECT GTN_DT FROM V_ACTIVITY_STATUS WHERE EQPMNT_NO=V_REPAIR_ESTIMATE.EQPMNT_NO AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO) AS GTN_DT,EQPMNT_STTS_CD,CSTMR_ID,CSTMR_CD,CSTMR_NAM,DPT_ID,DPT_CD,DPT_NAM,ACTVTY_DT,LBR_RT_NC,RPR_TYP_ID,RPR_TYP_CD,CRT_OF_CLNLNSS_BT,INVCNG_PRTY_NM,ORGNL_ESTMN_DT,ESTMTN_TTL_NC,CSTMR_CRRNCY_ID,INVCNG_PRTY_ID,INVCNG_PRTY_CD, NULL AS RPR_CMPLTN_DT,(SELECT SUM(LBR_HRS) FROM REPAIR_ESTIMATE_DETAIL WHERE  RPR_ESTMT_ID=V_REPAIR_ESTIMATE.RPR_ESTMT_ID) AS ESTMTD_LBR_HRS,ACTL_MN_HR_NC,APPRVL_AMNT_NC, ORGNL_ESTMTN_AMNT_NC,CSTMR_ESTMTN_TTL_NC,CSTMR_APPRVL_AMNT_NC, INVCNG_PRTY_CRRNCY_ID,DPT_CRRNCY_ID, CSTMR_EXCHANGE_RATE_NC,OWNR_APPRVL_RF,PRTY_APPRVL_RF,ADDTNL_CLNNG_BT,ADDTNL_CLNNG_FLG,COUNT_ATTACH,BLL_CD,BLL_TO,AGNT_ID,AGNT_CD  FROM V_REPAIR_ESTIMATE WHERE EXISTS (SELECT GI_TRNSCTN_NO FROM ACTIVITY_STATUS WHERE ACTVTY_NAM IN('REPAIR APPROVAL','LEAK TEST','INSPECTION') AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO AND EQPMNT_STTS_ID IN (10,6) AND ACTVTY_NM = 'REPAIR APPROVAL' AND RPR_ESTMT_NO NOT IN (SELECT RPR_ESTMT_NO FROM REPAIR_ESTIMATE WHERE EQPMNT_STTS_ID IN (11) AND DPT_ID=V_REPAIR_ESTIMATE.DPT_ID)) AND DPT_ID=@DPT_ID AND ADDTNL_CLNNG_BT=0 ORDER BY RPR_ESTMT_DT"
    Private Const RepairCompletionPendingQuery As String = "SELECT ACTVTY_NM,RPR_ESTMT_ID,RPR_ESTMT_NO,RVSN_NO,GI_TRNSCTN_NO,RPR_ESTMT_DT,EQPMNT_NO,EQPMNT_STTS_ID,(SELECT EQPMNT_TYP_CD FROM V_ACTIVITY_STATUS WHERE EQPMNT_NO=V_REPAIR_ESTIMATE.EQPMNT_NO AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO) AS EQPMNT_TYP_CD,(SELECT EQPMNT_CD_CD FROM V_ACTIVITY_STATUS WHERE EQPMNT_NO=V_REPAIR_ESTIMATE.EQPMNT_NO AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO) AS EQPMNT_CD_CD,(SELECT YRD_LCTN FROM V_ACTIVITY_STATUS WHERE EQPMNT_NO=V_REPAIR_ESTIMATE.EQPMNT_NO AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO) AS YRD_LCTN,(SELECT GTN_DT FROM V_ACTIVITY_STATUS WHERE EQPMNT_NO=V_REPAIR_ESTIMATE.EQPMNT_NO AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO) AS GTN_DT,EQPMNT_STTS_CD,CSTMR_ID,CSTMR_CD,CSTMR_NAM,DPT_ID,DPT_CD,DPT_NAM,ACTVTY_DT,LBR_RT_NC,RPR_TYP_ID,RPR_TYP_CD,CRT_OF_CLNLNSS_BT,INVCNG_PRTY_NM,ORGNL_ESTMN_DT,ESTMTN_TTL_NC,CSTMR_CRRNCY_ID,INVCNG_PRTY_ID,INVCNG_PRTY_CD, NULL AS RPR_CMPLTN_DT,(SELECT SUM(LBR_HRS) FROM REPAIR_ESTIMATE_DETAIL WHERE  RPR_ESTMT_ID=V_REPAIR_ESTIMATE.RPR_ESTMT_ID and CHK_BT=1 ) AS ESTMTD_LBR_HRS,ACTL_MN_HR_NC,(SELECT SUM(TTL_CST_NC) FROM REPAIR_ESTIMATE_DETAIL WHERE  RPR_ESTMT_ID=V_REPAIR_ESTIMATE.RPR_ESTMT_ID and CHK_BT=1 ) as APPRVL_AMNT_NC, ORGNL_ESTMTN_AMNT_NC,CSTMR_ESTMTN_TTL_NC,CSTMR_APPRVL_AMNT_NC, INVCNG_PRTY_CRRNCY_ID,DPT_CRRNCY_ID, CSTMR_EXCHANGE_RATE_NC,OWNR_APPRVL_RF,PRTY_APPRVL_RF,ADDTNL_CLNNG_BT,ADDTNL_CLNNG_FLG,COUNT_ATTACH,BLL_CD,BLL_TO,AGNT_ID,AGNT_CD  FROM V_REPAIR_ESTIMATE WHERE EXISTS (SELECT GI_TRNSCTN_NO FROM ACTIVITY_STATUS WHERE ACTVTY_NAM IN('REPAIR APPROVAL','LEAK TEST','INSPECTION') AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO AND EQPMNT_STTS_ID IN (10,6) AND ACTVTY_NM = 'REPAIR APPROVAL' AND RPR_ESTMT_NO NOT IN (SELECT RPR_ESTMT_NO FROM REPAIR_ESTIMATE WHERE EQPMNT_STTS_ID IN (11) AND DPT_ID=V_REPAIR_ESTIMATE.DPT_ID)) AND DPT_ID=1 AND ADDTNL_CLNNG_BT=0 ORDER BY RPR_ESTMT_DT"
    Private Const RepairCompletionMySubmitQuery As String = "SELECT REPLACE(CONVERT(VARCHAR(11),ACTVTY_DT,106),' ','-') AS [RPR_CMPLTN_DT], CONVERT(VARCHAR(5) ,ACTVTY_DT,108) AS [RPR_CMPLTN_TM],RPR_ESTMT_ID,RPR_ESTMT_NO,RVSN_NO,ACTVTY_DT,GI_TRNSCTN_NO,RPR_ESTMT_DT,EQPMNT_NO,EQPMNT_STTS_ID,(SELECT RMRKS_VC FROM V_ACTIVITY_STATUS WHERE EQPMNT_NO=V_REPAIR_ESTIMATE.EQPMNT_NO AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO) AS RMRKS_VC,(SELECT YRD_LCTN FROM ACTIVITY_STATUS WHERE EQPMNT_NO=V_REPAIR_ESTIMATE.EQPMNT_NO AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO) AS YRD_LCTN,(SELECT EQPMNT_TYP_CD FROM V_ACTIVITY_STATUS WHERE EQPMNT_NO=V_REPAIR_ESTIMATE.EQPMNT_NO AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO) AS EQPMNT_TYP_CD,(SELECT EQPMNT_CD_CD FROM V_ACTIVITY_STATUS WHERE EQPMNT_NO=V_REPAIR_ESTIMATE.EQPMNT_NO AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO) AS EQPMNT_CD_CD,EQPMNT_STTS_CD,CSTMR_ID,CSTMR_CD,CSTMR_NAM,DPT_ID,DPT_CD,DPT_NAM,LBR_RT_NC,RPR_TYP_ID,RPR_TYP_CD,CRT_OF_CLNLNSS_BT,INVCNG_PRTY_ID,INVCNG_PRTY_CD,INVCNG_PRTY_NM,ORGNL_ESTMN_DT,ESTMTN_TTL_NC,CSTMR_CRRNCY_ID,INVCNG_PRTY_ID,INVCNG_PRTY_CD, NULL AS RPR_CMPLTN_DT,ORGNL_ESTMTN_AMNT_NC,(SELECT SUM(LBR_HRS) FROM REPAIR_ESTIMATE_DETAIL WHERE RPR_ESTMT_ID=(SELECT TOP 1 RPR_ESTMT_ID FROM REPAIR_ESTIMATE WHERE EQPMNT_NO=V_REPAIR_ESTIMATE.EQPMNT_NO AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO AND ACTVTY_NM='Repair Approval' ORDER BY RPR_ESTMT_ID DESC) AND CHK_BT=1) AS ESTMTD_LBR_HRS,ACTL_MN_HR_NC,LBR_RT_NC,APPRVL_AMNT_NC,CSTMR_ESTMTN_TTL_NC,CSTMR_APPRVL_AMNT_NC,(CASE WHEN(SELECT TOP 1 BLLNG_FLG FROM REPAIR_CHARGE WHERE RPR_ESTMT_ID=V_REPAIR_ESTIMATE.RPR_ESTMT_ID)='B' THEN 1 ELSE 0 END) AS BLLNG_FLG,INVCNG_PRTY_CRRNCY_ID,DPT_CRRNCY_ID,COUNT_ATTACH,OWNR_APPRVL_RF,PRTY_APPRVL_RF,BLL_CD,BLL_TO,AGNT_ID,AGNT_CD FROM V_REPAIR_ESTIMATE WHERE GI_TRNSCTN_NO IN (SELECT GI_TRNSCTN_NO FROM ACTIVITY_STATUS WHERE EQPMNT_STTS_ID IN (SELECT DEFAULT_STATUS_ID FROM WF_ACTIVITY WHERE WF_ACTIVITY_NAME ='Repair Completion' AND DPT_ID=V_REPAIR_ESTIMATE.DPT_ID)) AND DPT_ID=@DPT_ID AND ACTVTY_NM='Repair Completion' AND RPR_ESTMT_ID IN (SELECT MAX(RPR_ESTMT_ID) FROM REPAIR_ESTIMATE WHERE ACTVTY_NM='Repair Completion' AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO AND DPT_ID=V_REPAIR_ESTIMATE.DPT_ID) ORDER BY RPR_ESTMT_DT"
    Private Const RepairCompletionMySubmitQueryJTS As String = "SELECT REPLACE(CONVERT(VARCHAR(11),ACTVTY_DT,106),' ','-') AS [RPR_CMPLTN_DT], CONVERT(VARCHAR(5) ,ACTVTY_DT,108) AS [RPR_CMPLTN_TM],RPR_ESTMT_ID,RPR_ESTMT_NO,RVSN_NO,ACTVTY_DT,GI_TRNSCTN_NO,RPR_ESTMT_DT,EQPMNT_NO,EQPMNT_STTS_ID,(SELECT RMRKS_VC FROM V_ACTIVITY_STATUS WHERE EQPMNT_NO=V_REPAIR_ESTIMATE.EQPMNT_NO AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO) AS RMRKS_VC,(SELECT YRD_LCTN FROM ACTIVITY_STATUS WHERE EQPMNT_NO=V_REPAIR_ESTIMATE.EQPMNT_NO AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO) AS YRD_LCTN,(SELECT EQPMNT_TYP_CD FROM V_ACTIVITY_STATUS WHERE EQPMNT_NO=V_REPAIR_ESTIMATE.EQPMNT_NO AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO) AS EQPMNT_TYP_CD,(SELECT EQPMNT_CD_CD FROM V_ACTIVITY_STATUS WHERE EQPMNT_NO=V_REPAIR_ESTIMATE.EQPMNT_NO AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO) AS EQPMNT_CD_CD,EQPMNT_STTS_CD,CSTMR_ID,CSTMR_CD,CSTMR_NAM,DPT_ID,DPT_CD,DPT_NAM,LBR_RT_NC,RPR_TYP_ID,RPR_TYP_CD,CRT_OF_CLNLNSS_BT,INVCNG_PRTY_ID,INVCNG_PRTY_CD,INVCNG_PRTY_NM,ORGNL_ESTMN_DT,ESTMTN_TTL_NC,CSTMR_CRRNCY_ID,INVCNG_PRTY_ID,INVCNG_PRTY_CD, NULL AS RPR_CMPLTN_DT,ORGNL_ESTMTN_AMNT_NC,(SELECT SUM(LBR_HRS) FROM REPAIR_ESTIMATE_DETAIL WHERE RPR_ESTMT_ID=(SELECT TOP 1 RPR_ESTMT_ID FROM REPAIR_ESTIMATE WHERE EQPMNT_NO=V_REPAIR_ESTIMATE.EQPMNT_NO AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO AND ACTVTY_NM='Repair Approval' ORDER BY RPR_ESTMT_ID DESC)) AS ESTMTD_LBR_HRS,ACTL_MN_HR_NC,LBR_RT_NC,APPRVL_AMNT_NC,CSTMR_ESTMTN_TTL_NC,CSTMR_APPRVL_AMNT_NC,(CASE WHEN(SELECT TOP 1 BLLNG_FLG FROM REPAIR_CHARGE WHERE RPR_ESTMT_ID=V_REPAIR_ESTIMATE.RPR_ESTMT_ID)='B' THEN 1 ELSE 0 END) AS BLLNG_FLG,INVCNG_PRTY_CRRNCY_ID,DPT_CRRNCY_ID,COUNT_ATTACH,OWNR_APPRVL_RF,PRTY_APPRVL_RF,BLL_CD,BLL_TO,AGNT_ID,AGNT_CD FROM V_REPAIR_ESTIMATE WHERE GI_TRNSCTN_NO IN (SELECT GI_TRNSCTN_NO FROM ACTIVITY_STATUS WHERE EQPMNT_STTS_ID IN (SELECT DEFAULT_STATUS_ID FROM WF_ACTIVITY WHERE WF_ACTIVITY_NAME ='Repair Completion' AND DPT_ID=V_REPAIR_ESTIMATE.DPT_ID)) AND DPT_ID=@DPT_ID AND ACTVTY_NM='Repair Completion' AND RPR_ESTMT_ID IN (SELECT MAX(RPR_ESTMT_ID) FROM REPAIR_ESTIMATE WHERE ACTVTY_NM='Repair Completion' AND GI_TRNSCTN_NO=V_REPAIR_ESTIMATE.GI_TRNSCTN_NO AND DPT_ID=V_REPAIR_ESTIMATE.DPT_ID) ORDER BY RPR_ESTMT_DT"
    Private Const Repair_EstimateInsertQuery As String = "INSERT INTO REPAIR_ESTIMATE(RPR_ESTMT_ID,RPR_ESTMT_NO,RVSN_NO,RPR_ESTMT_DT,ACTVTY_DT,ACTVTY_NM,EQPMNT_NO,EQPMNT_STTS_ID,CSTMR_ID,DPT_ID,GI_TRNSCTN_NO,RPR_TYP_ID,CRT_OF_CLNLNSS_BT,LBR_RT_NC,OWNR_APPRVL_RF,ESTMTN_TTL_NC,INVCNG_PRTY_ID,ORGNL_ESTMN_DT,ORGNL_ESTMTN_AMNT_NC,APPRVL_AMNT_NC,CSTMR_ESTMTN_TTL_NC,CSTMR_APPRVL_AMNT_NC,ACTL_MN_HR_NC,CRTD_BY,CRTD_DT,MDFD_BY,MDFD_DT,PRTY_APPRVL_RF)VALUES(@RPR_ESTMT_ID,@RPR_ESTMT_NO,@RVSN_NO,@RPR_ESTMT_DT,@ACTVTY_DT,@ACTVTY_NM,@EQPMNT_NO,@EQPMNT_STTS_ID,@CSTMR_ID,@DPT_ID,@GI_TRNSCTN_NO,@RPR_TYP_ID,@CRT_OF_CLNLNSS_BT,@LBR_RT_NC,@OWNR_APPRVL_RF,@ESTMTN_TTL_NC,@INVCNG_PRTY_ID,@ORGNL_ESTMN_DT,@ORGNL_ESTMTN_AMNT_NC,@APPRVL_AMNT_NC,@CSTMR_ESTMTN_TTL_NC,@CSTMR_APPRVL_AMNT_NC,@ACTL_MN_HR_NC,@CRTD_BY,@CRTD_DT,@MDFD_BY,@MDFD_DT,@PRTY_APPRVL_RF)"
    Private Const GateinUpdateQuery As String = "UPDATE GATEIN SET GTN_ID=@GTN_ID,EQPMNT_STTS_ID=@EQPMNT_STTS_ID WHERE GTN_ID=@GTN_ID"
    Private Const GateinSelectQueryByGateinTransactionNo As String = "SELECT GTN_ID,GTN_CD,CSTMR_ID,EQPMNT_NO,DPT_ID,GTOT_BT FROM GATEIN WHERE DPT_ID=@DPT_ID AND GTOT_BT=0 AND  GI_TRNSCTN_NO=@GI_TRNSCTN_NO"
    Private Const Repair_Estimate_DetailSelectQueryByRepairEstimationId As String = "SELECT RPR_ESTMT_DTL_ID,RPR_ESTMT_ID,ITM_ID,ITM_CD,SB_ITM_ID,SB_ITM_CD,DMG_ID,DMG_CD,RPR_ID,RPR_CD,RPR_DSCRPTN_VC,DMG_RPR_DSCRPTN,MTRL_CST_NC,LBR_RT,LBR_HRS,LBR_HR_CST_NC,RSPNSBLTY_ID,RSPNSBLTY_CD,TTL_CST_NC,CHK_BT FROM V_REPAIR_ESTIMATE_DETAIL WHERE RPR_ESTMT_ID=@RPR_ESTMT_ID"
    Private Const REPAIR_CHARGEInsertQuery As String = "INSERT INTO REPAIR_CHARGE(RPR_CHRG_ID,CSTMR_ID,EQPMNT_NO,GI_TRNSCTN_NO,RPR_ESTMT_ID,EQPMNT_TYP_ID,ESTMT_NO,RPR_APPRVL_DT,RPR_CMPLTN_DT,MTRL_CST_NC,LBR_CST_NC,TTL_CSTS_NC,RPR_APPRVL_AMNT_NC,BLLNG_FLG,ACTV_BT,DPT_ID,INVCNG_PRTY_ID,YRD_LCTN,INVC_TYPE,CSTMR_TTL_CSTS_NC,CSTMR_RPR_APPRVL_AMNT_NC,APPRVL_RF_NO,RSPNSBLTY_ID,AGNT_ID)VALUES(@RPR_CHRG_ID,@CSTMR_ID,@EQPMNT_NO,@GI_TRNSCTN_NO,@RPR_ESTMT_ID,@EQPMNT_TYP_ID,@ESTMT_NO,@RPR_APPRVL_DT,@RPR_CMPLTN_DT,@MTRL_CST_NC,@LBR_CST_NC,@TTL_CSTS_NC,@RPR_APPRVL_AMNT_NC,@BLLNG_FLG,@ACTV_BT,@DPT_ID,@INVCNG_PRTY_ID,@YRD_LCTN,@INVC_TYPE,@CSTMR_TTL_CSTS_NC,@CSTMR_RPR_APPRVL_AMNT_NC,@APPRVL_RF_NO,@RSPNSBLTY_ID,@AGNT_ID)"
    Private Const Repair_Estimate_RetInsertQuery As String = "INSERT INTO REPAIR_ESTIMATE_RET(WM_SNO,WM_TRANSMISSION_NO,WM_COMPLETE,WM_SENT_EIR,WM_SENT_DATE,WM_REC_EIR,WM_REC_DATE,WM_REC_ADDR,WM_REC_TYPE,WM_EXPORTED,WM_EXPOR_DATE,WM_IMPORTED,WM_IMPOR_DATE,WM_TRNSXN,WM_PTY_RSPONS,WM_REVISION,WM_ESTIM_DATE,WM_UNIT_NBR,WM_REFERENCE,WM_EQUIP_TYPE,WM_EQUIP_CODE,WM_EQUIP_DESC,WM_TERM_LOCA,WM_TERM_DATE,WM_TERM_TIME,WM_LAST_OH_LOC,WM_LAST_OH_DATE,WM_CONDITION,WM_MANU_DATE,WM_CSC_REEXAM,WM_LOAD,WM_SENDER,WM_ATTENTION,WM_LSR_OWNER,WM_SEND_EDI_1,WM_SSL_LSE,WM_SEND_EDI_2,WM_HAULIER,WM_SEND_EDI_3,WM_DPT_TRM,WM_SEND_EDI_4,WM_INSURER,WM_SURVEYOR,WM_OTHERS_1,WM_TAX_RATE,WM_FILLER,WM_NOTE_1,WM_NOTE_2,WM_NOTE_3,WM_BAS_CURR,WM_LABOR_RATE,WM_DPP_CURR,WM_DPP_AMT,WM_WEIGHT,WM_MEASURE,WM_UNITS,WM_MATERIAL,WM_U_LABOR,WM_U_MATERIAL,WM_U_HANDLING,WM_U_TAX,WM_U_TOTAL,WM_I_LABOR,WM_I_MATERIAL,WM_I_HANDLING,WM_I_TAX,WM_I_TOTAL,WM_O_LABOR,WM_O_MATERIAL,WM_O_HANDLING,WM_O_TAX,WM_O_TOTAL,WM_D_LABOR,WM_D_MATERIAL,WM_D_HANDLING,WM_D_TAX,WM_D_TOTAL,WM_S_LABOR,WM_S_MATERIAL,WM_S_HANDLING,WM_S_TAX,WM_S_TOTAL,WM_X_LABOR,WM_X_MATERIAL,WM_X_HANDLING,WM_X_TAX,WM_X_TOTAL,WM_EST_TOTAL,WM_ADVICE,WM_EIR_NUM,WM_AUTH_NUM,WM_AUTH_AMT,WM_AUTH_PTY,WM_AUTH_DATE,WM_O_ESTIM_DATE,WM_OTHERS_2,WM_SEND_EDI_5,WM_SEND_EDI_6,WM_SEND_EDI_7,WM_SEND_EDI_8,WM_NOTE_4,WM_NOTE_5,WM_WEIGHT_2,WM_MEASURE_2,WM_INVOICE_TYPE,WM_ODOMETER_HOURS,WM_OUT_SVC_DATE,WM_RET_SVC_DATE,WM_OWN_INSP_DATE,WM_MECHANIC_NAME,WM_BILLEE_CODE,WM_SUB_REPAIR_TYPE,WM_OUT_SVC_TIME,WM_RET_SVC_TIME,WM_EXCHG_RATE,WM_STATUS,WM_PICK_DATE,WM_ESTSTATUS,WM_Errors,WM_MatchStatus,WM_ERRSTATUS,WM_USERNAME,WM_LIVE_STATUS,WM_EST_TOTAL_TAXED,WM_CC_TOTAL,WM_SRVC_TAX_RATE,WM_TOTAL_LABOR_COST,WM_TOTAL_SRVC_TAX,WM_EQUIP_SIZE,WM_YARD_LOC,WM_RCESTSTATUS,WM_ESTIMATE_TYPE)VALUES(@WM_SNO,@WM_TRANSMISSION_NO,@WM_COMPLETE,@WM_SENT_EIR,@WM_SENT_DATE,@WM_REC_EIR,@WM_REC_DATE,@WM_REC_ADDR,@WM_REC_TYPE,@WM_EXPORTED,@WM_EXPOR_DATE,@WM_IMPORTED,@WM_IMPOR_DATE,@WM_TRNSXN,@WM_PTY_RSPONS,@WM_REVISION,@WM_ESTIM_DATE,@WM_UNIT_NBR,@WM_REFERENCE,@WM_EQUIP_TYPE,@WM_EQUIP_CODE,@WM_EQUIP_DESC,@WM_TERM_LOCA,@WM_TERM_DATE,@WM_TERM_TIME,@WM_LAST_OH_LOC,@WM_LAST_OH_DATE,@WM_CONDITION,@WM_MANU_DATE,@WM_CSC_REEXAM,@WM_LOAD,@WM_SENDER,@WM_ATTENTION,@WM_LSR_OWNER,@WM_SEND_EDI_1,@WM_SSL_LSE,@WM_SEND_EDI_2,@WM_HAULIER,@WM_SEND_EDI_3,@WM_DPT_TRM,@WM_SEND_EDI_4,@WM_INSURER,@WM_SURVEYOR,@WM_OTHERS_1,@WM_TAX_RATE,@WM_FILLER,@WM_NOTE_1,@WM_NOTE_2,@WM_NOTE_3,@WM_BAS_CURR,@WM_LABOR_RATE,@WM_DPP_CURR,@WM_DPP_AMT,@WM_WEIGHT,@WM_MEASURE,@WM_UNITS,@WM_MATERIAL,@WM_U_LABOR,@WM_U_MATERIAL,@WM_U_HANDLING,@WM_U_TAX,@WM_U_TOTAL,@WM_I_LABOR,@WM_I_MATERIAL,@WM_I_HANDLING,@WM_I_TAX,@WM_I_TOTAL,@WM_O_LABOR,@WM_O_MATERIAL,@WM_O_HANDLING,@WM_O_TAX,@WM_O_TOTAL,@WM_D_LABOR,@WM_D_MATERIAL,@WM_D_HANDLING,@WM_D_TAX,@WM_D_TOTAL,@WM_S_LABOR,@WM_S_MATERIAL,@WM_S_HANDLING,@WM_S_TAX,@WM_S_TOTAL,@WM_X_LABOR,@WM_X_MATERIAL,@WM_X_HANDLING,@WM_X_TAX,@WM_X_TOTAL,@WM_EST_TOTAL,@WM_ADVICE,@WM_EIR_NUM,@WM_AUTH_NUM,@WM_AUTH_AMT,@WM_AUTH_PTY,@WM_AUTH_DATE,@WM_O_ESTIM_DATE,@WM_OTHERS_2,@WM_SEND_EDI_5,@WM_SEND_EDI_6,@WM_SEND_EDI_7,@WM_SEND_EDI_8,@WM_NOTE_4,@WM_NOTE_5,@WM_WEIGHT_2,@WM_MEASURE_2,@WM_INVOICE_TYPE,@WM_ODOMETER_HOURS,@WM_OUT_SVC_DATE,@WM_RET_SVC_DATE,@WM_OWN_INSP_DATE,@WM_MECHANIC_NAME,@WM_BILLEE_CODE,@WM_SUB_REPAIR_TYPE,@WM_OUT_SVC_TIME,@WM_RET_SVC_TIME,@WM_EXCHG_RATE,@WM_STATUS,@WM_PICK_DATE,@WM_ESTSTATUS,@WM_Errors,@WM_MatchStatus,@WM_ERRSTATUS,@WM_USERNAME,@WM_LIVE_STATUS,@WM_EST_TOTAL_TAXED,@WM_CC_TOTAL,@WM_SRVC_TAX_RATE,@WM_TOTAL_LABOR_COST,@WM_TOTAL_SRVC_TAX,@WM_EQUIP_SIZE,@WM_YARD_LOC,@WM_RCESTSTATUS,@WM_ESTIMATE_TYPE)"
    Private Const TrackingInsertQuery As String = "INSERT INTO TRACKING (TRCKNG_ID,CSTMR_ID,EQPMNT_NO,ACTVTY_NAM,EQPMNT_STTS_ID,ACTVTY_NO,ACTVTY_DT,ACTVTY_RMRKS,GI_TRNSCTN_NO,INVCNG_PRTY_ID,CRTD_BY,CRTD_DT,CNCLD_BY,CNCLD_DT,ADT_RMRKS,DPT_ID)VALUES(@TRCKNG_ID,@CSTMR_ID,@EQPMNT_NO,@ACTVTY_NAM,@EQPMNT_STTS_ID,@ACTVTY_NO,@ACTVTY_DT,@ACTVTY_RMRKS,@GI_TRNSCTN_NO,@INVCNG_PRTY_ID,@CRTD_BY,@CRTD_DT,@CNCLD_BY,@CNCLD_DT,@ADT_RMRKS,@DPT_ID)"
    Private Const Activity_StatusUpdateQuery As String = "UPDATE ACTIVITY_STATUS SET EQPMNT_STTS_ID=@EQPMNT_STTS_ID,YRD_LCTN=@YRD_LCTN,RMRKS_VC=@RMRKS_VC,ACTVTY_DT=@ACTVTY_DT,RPR_CMPLTN_DT=@RPR_CMPLTN_DT, ACTVTY_NAM=@ACTVTY_NAM WHERE GI_TRNSCTN_NO=@GI_TRNSCTN_NO AND EQPMNT_NO=@EQPMNT_NO"
    Private Const RepairCompletionCountQuery As String = "SELECT COUNT(RPR_ESTMT_ID) AS ROWVALUE FROM REPAIR_ESTIMATE WHERE DPT_ID=@DPT_ID AND RPR_ESTMT_ID=@RPR_ESTMT_ID  AND ACTVTY_NM=@ACTVTY_NM "
    Private Const Repair_EstimateUpdateQuery As String = "UPDATE REPAIR_ESTIMATE SET RVSN_NO=@RVSN_NO,ACTL_MN_HR_NC=@ACTL_MN_HR_NC, ACTVTY_DT=@ACTVTY_DT,MDFD_BY=@MDFD_BY,MDFD_DT=@MDFD_DT WHERE DPT_ID=@DPT_ID AND RPR_ESTMT_ID=@RPR_ESTMT_ID"
    Private Const Repair_Estimate_Detail_RetUpdateQuery As String = "UPDATE Repair_Estimate_Detail_Ret SET WD_RPR_ESTMT_DTL_ID=@WD_RPR_ESTMT_DTL_ID, WD_TRANSMISSION_NO=@WD_TRANSMISSION_NO,WD_TRNSXN=@WD_TRNSXN, WD_REVISION=@WD_REVISION, WD_ESTIM_DATE=@WD_ESTIM_DATE, WD_UNIT_NBR=@WD_UNIT_NBR, WD_LABOR_RATE=@WD_LABOR_RATE, WD_LINE=@WD_LINE, WD_REPAIR=@WD_REPAIR, WD_DAMAGE=@WD_DAMAGE,  WD_HOURS=@WD_HOURS,WD_MAT_COST=@WD_MAT_COST,WD_DMGREP_DESC=@WD_DMGREP_DESC, WD_STATUS=@WD_STATUS  WHERE WD_RPR_ESTMT_DTL_ID=@WD_RPR_ESTMT_DTL_ID"
    Private Const RepairChargeUpdateQuery As String = "UPDATE REPAIR_CHARGE SET RPR_CHRG_ID=@RPR_CHRG_ID,RPR_CMPLTN_DT=@RPR_CMPLTN_DT,YRD_LCTN=@YRD_LCTN WHERE DPT_ID=@DPT_ID AND RPR_CHRG_ID=@RPR_CHRG_ID"
    Private Const RepairChargeselectQuery As String = "SELECT  RPR_CHRG_ID,CSTMR_ID,EQPMNT_NO,RPR_ESTMT_ID,EQPMNT_TYP_ID,ESTMT_NO,GI_TRNSCTN_NO,rPR_APPRVL_DT,RPR_CMPLTN_DT,MTRL_CST_NC,LBR_CST_NC,RPR_TX_RT_NC,RPR_TX_AMNT_NC,TTL_CSTS_NC,RPR_APPRVL_AMNT_NC,BLLNG_FLG,ACTV_BT,DPT_ID,INVCNG_PRTY_ID,YRD_LCTN,CLN_CST_NC,TTL_SRV_TAX,TTL_EST_INCL_SRV_TAX,INVC_TYPE FROM REPAIR_CHARGE WHERE DPT_ID=@DPT_ID AND ESTMT_NO=@ESTMT_NO"
    Private Const ActivityStatusSelectQueryByActivityName As String = "SELECT ACTVTY_STTS_ID,ACTVTY_STTS_ID,CSTMR_ID,EQPMNT_NO,EQPMNT_TYP_ID,EQPMNT_TYP_CD,EQPMNT_CD_ID,EQPMNT_CD_CD,GTN_DT,GTOT_DT,PRDCT_ID,PRDCT_CD,CLNNG_DT,INSPCTN_DT,EQPMNT_STTS_ID,EQPMNT_STTS_CD,ACTVTY_NAM,ACTVTY_DT,RMRKS_VC,GI_TRNSCTN_NO,INVC_GNRT_BT,GI_RF_NO,ACTV_BT,DPT_ID,DPT_CD,DPT_NAM,YRD_LCTN,PRDCT_DSCRPTN_VC FROM V_ACTIVITY_STATUS WHERE DPT_ID=@DPT_ID AND EQPMNT_NO=@EQPMNT_NO AND GI_TRNSCTN_NO=@GI_TRNSCTN_NO"
    Private Const TrackingSelectCountQuery As String = "SELECT TRCKNG_ID,CSTMR_ID,EQPMNT_NO,ACTVTY_NAM,EQPMNT_STTS_ID,ACTVTY_NO,ACTVTY_DT,ACTVTY_RMRKS,GI_TRNSCTN_NO,INVCNG_PRTY_ID,CRTD_BY,CRTD_DT,CNCLD_BY,CNCLD_DT,ADT_RMRKS,DPT_ID FROM TRACKING WHERE EQPMNT_NO=@EQPMNT_NO AND GI_TRNSCTN_NO=@GI_TRNSCTN_NO AND ACTVTY_NAM =@ACTVTY_NAM AND DPT_ID=@DPT_ID"
    Private Const TrackingUpdateQuery As String = "UPDATE TRACKING SET ACTVTY_DT=@ACTVTY_DT,ACTVTY_RMRKS=@ACTVTY_RMRKS,INVCNG_PRTY_ID=@INVCNG_PRTY_ID,YRD_LCTN=@YRD_LCTN, MDFD_BY=@MDFD_BY,MDFD_DT=@MDFD_DT,EQPMNT_INFRMTN_RMRKS_VC=@EQPMNT_INFRMTN_RMRKS_VC WHERE ACTVTY_NO=@ACTVTY_NO AND ACTVTY_NAM=@ACTVTY_NAM AND GI_TRNSCTN_NO=@GI_TRNSCTN_NO AND DPT_ID=@DPT_ID"
    Private Const RepairEstimateSelectQueryByEqpmntNo As String = "SELECT RPR_ESTMT_ID,RPR_ESTMT_NO,GI_TRNSCTN_NO,RVSN_NO,RPR_ESTMT_DT,ACTVTY_DT,ACTVTY_NM,ORGNL_ESTMN_DT,EQPMNT_NO,EQPMNT_STTS_ID,CSTMR_ID,LBR_RT_NC,RPR_TYP_ID,CRT_OF_CLNLNSS_BT,INVCNG_PRTY_ID,ESTMTN_TTL_NC,SRVYR_NM,OWNR_APPRVL_RF,APPRVL_AMNT_NC,ORGNL_ESTMTN_AMNT_NC,CSTMR_ESTMTN_TTL_NC,CSTMR_APPRVL_AMNT_NC,ACTL_MN_HR_NC,RMRKS_VC,CRTD_BY,CRTD_DT,MDFD_BY,MDFD_DT,DPT_ID,PRTY_APPRVL_RF FROM REPAIR_ESTIMATE WHERE EQPMNT_NO=@EQPMNT_NO AND GI_TRNSCTN_NO=@GI_TRNSCTN_NO AND ACTVTY_NM=@ACTVTY_NM ORDER BY RPR_ESTMT_ID DESC"
    Private Const CustomerCurrencyExchangeSelectQuery As String = "SELECT CSTMR_ID,CSTMR_CD,CSTMR_NAM,EXCHNG_RT_PR_UNT_NC,DPT_CRRNCY_CD,CSTMR_CRRNCY_CD,DPT_ID FROM V_REPAIR_ESTIMATE_REPORT WHERE CSTMR_ID=@CSTMR_ID AND DPT_ID=@DPT_ID"
    Private Const GetRepairEstimateDetailByTransactinoNo As String = "SELECT RPR_ESTMT_DTL_ID,RPR_ESTMT_ID,ITM_ID,ITM_CD,SB_ITM_ID,SB_ITM_CD,DMG_ID,DMG_CD,RPR_ID,RPR_CD,RPR_DSCRPTN_VC,DMG_RPR_DSCRPTN,MTRL_CST_NC,LBR_RT,LBR_HRS,LBR_HR_CST_NC,RSPNSBLTY_ID,RSPNSBLTY_CD,TTL_CST_NC,CHK_BT FROM V_REPAIR_ESTIMATE_DETAIL  WHERE RPR_ESTMT_ID = (SELECT RPR_ESTMT_ID FROM REPAIR_ESTIMATE WHERE EQPMNT_NO=@EQPMNT_NO AND RPR_ESTMT_NO=@RPR_ESTMT_NO AND GI_TRNSCTN_NO=@GI_TRNSCTN_NO AND ACTVTY_NM=@ACTVTY_NM AND DPT_ID=@DPT_ID)"
    Private Const Repair_Estimate_DetailInsertQuery As String = "INSERT INTO REPAIR_ESTIMATE_DETAIL(RPR_ESTMT_DTL_ID,RPR_ESTMT_ID,ITM_ID,SB_ITM_ID,DMG_ID,LBR_HRS,LBR_RT,LBR_HR_CST_NC,MTRL_CST_NC,TTL_CST_NC,RPR_ID,DMG_RPR_DSCRPTN,RSPNSBLTY_ID)VALUES(@RPR_ESTMT_DTL_ID,@RPR_ESTMT_ID,@ITM_ID,@SB_ITM_ID,@DMG_ID,@LBR_HRS,@LBR_RT,@LBR_HR_CST_NC,@MTRL_CST_NC,@TTL_CST_NC,@RPR_ID,@DMG_RPR_DSCRPTN,@RSPNSBLTY_ID)"
    Private Const AttachmentSelectQuery As String = "SELECT ATTCHMNT_ID,RPR_ESTMT_ID,ACTVTY_NAM,RPR_ESTMT_NO,GI_TRNSCTN_NO,ATTCHMNT_PTH,ACTL_FL_NM,MDFD_BY,MDFD_DT,DPT_ID,'False' AS ERR_FLG FROM ATTACHMENT WHERE DPT_ID=@DPT_ID AND RPR_ESTMT_ID=@RPR_ESTMT_ID"
    Private Const ExchangeRateSelectQuery As String = "SELECT EXCHNG_RT_ID,FRM_CRRNCY_ID,TO_CRRNCY_ID,EXCHNG_RT_PR_UNT_NC,WTH_EFFCT_FRM_DT,CRTD_BY,CRTD_DT,MDFD_BY,MDFD_DT,ACTV_BT,DPT_ID FROM EXCHANGE_RATE WHERE FRM_CRRNCY_ID=@FRM_CRRNCY_ID AND TO_CRRNCY_ID=@TO_CRRNCY_ID AND DPT_ID=@DPT_ID"
    Private ds As RepairCompletionDataSet
    Dim sqlDbnull As DateTime = "1900-01-01 00:00:00.000"
    Dim sqlDtnull = "19000101"
    Dim sqlMnthnull = "01/00"
    Private Const GateinRetInsertQuery As String = "INSERT INTO GATEIN_RET(GI_SNO,GI_TRANSMISSION_NO,GI_COMPLETE,GI_SENT_EIR,GI_SENT_DATE,GI_REC_EIR,GI_REC_DATE,GI_REC_ADDR,GI_REC_TYPE,GI_EXPORTED,GI_EXPOR_DATE,GI_IMPORTED,GI_IMPOR_DATE,GI_TRNSXN,GI_ADVICE,GI_UNIT_NBR,GI_EQUIP_TYPE,GI_EQUIP_DESC,GI_EQUIP_CODE,GI_CONDITION,GI_COMP_ID_A,GI_COMP_ID_N,GI_COMP_ID_C,GI_COMP_TYPE,GI_COMP_DESC,GI_COMP_CODE,GI_EIR_DATE,GI_EIR_TIME,GI_REFERENCE,GI_MANU_DATE,GI_MATERIAL,GI_WEIGHT,GI_MEASURE,GI_UNITS,GI_CSC_REEXAM,GI_COUNTRY,GI_LIC_STATE,GI_LIC_REG,GI_LIC_EXPIRE,GI_LSR_OWNER,GI_SEND_EDI_1,GI_SSL_LSE,GI_SEND_EDI_2,GI_HAULIER,GI_SEND_EDI_3,GI_DPT_TRM,GI_SEND_EDI_4,GI_OTHERS_1,GI_OTHERS_2,GI_OTHERS_3,GI_OTHERS_4,GI_NOTE_1,GI_NOTE_2,GI_LOAD,GI_FHWA,GI_LAST_OH_LOC,GI_LAST_OH_DATE,GI_SENDER,GI_ATTENTION,GI_REVISION,GI_SEND_EDI_5,GI_SEND_EDI_6,GI_SEND_EDI_7,GI_SEND_EDI_8,GI_SEAL_PARTY_1,GI_SEAL_NUMBER_1,GI_SEAL_PARTY_2,GI_SEAL_NUMBER_2,GI_SEAL_PARTY_3,GI_SEAL_NUMBER_3,GI_SEAL_PARTY_4,GI_SEAL_NUMBER_4,GI_PORT_FUNC_CODE,GI_PORT_NAME,GI_VESSEL_NAME,GI_VOYAGE_NUM,GI_HAZ_MAT_CODE,GI_HAZ_MAT_DESC,GI_NOTE_3,GI_NOTE_4,GI_NOTE_5,GI_COMP_ID_A_2,GI_COMP_ID_N_2,GI_COMP_ID_C_2,GI_COMP_TYPE_2,GI_COMP_CODE_2,GI_COMP_DESC_2,GI_SHIPPER,GI_DRAY_ORDER,GI_RAIL_ID,GI_RAIL_RAMP,GI_VESSEL_CODE,GI_WGHT_CERT_1,GI_WGHT_CERT_2,GI_WGHT_CERT_3,GI_SEA_RAIL,GI_LOC_IDENT,GI_PORT_LOC_QUAL,GI_STATUS,GI_PICK_DATE,GI_ESTSTATUS,GI_ERRSTATUS,GI_USERNAME,GI_LIVE_STATUS,GI_ISACTIVE,GI_YARD_LOC,GI_MODE_PAYMENT,GI_BILLING_TYPE,GI_RESERVE_BKG,GI_RCESTSTATUS,OP_SNO,OP_STATUS)VALUES(@GI_SNO,@GI_TRANSMISSION_NO,@GI_COMPLETE,@GI_SENT_EIR,@GI_SENT_DATE,@GI_REC_EIR,@GI_REC_DATE,@GI_REC_ADDR,@GI_REC_TYPE,@GI_EXPORTED,@GI_EXPOR_DATE,@GI_IMPORTED,@GI_IMPOR_DATE,@GI_TRNSXN,@GI_ADVICE,@GI_UNIT_NBR,@GI_EQUIP_TYPE,@GI_EQUIP_DESC,@GI_EQUIP_CODE,@GI_CONDITION,@GI_COMP_ID_A,@GI_COMP_ID_N,@GI_COMP_ID_C,@GI_COMP_TYPE,@GI_COMP_DESC,@GI_COMP_CODE,@GI_EIR_DATE,@GI_EIR_TIME,@GI_REFERENCE,@GI_MANU_DATE,@GI_MATERIAL,@GI_WEIGHT,@GI_MEASURE,@GI_UNITS,@GI_CSC_REEXAM,@GI_COUNTRY,@GI_LIC_STATE,@GI_LIC_REG,@GI_LIC_EXPIRE,@GI_LSR_OWNER,@GI_SEND_EDI_1,@GI_SSL_LSE,@GI_SEND_EDI_2,@GI_HAULIER,@GI_SEND_EDI_3,@GI_DPT_TRM,@GI_SEND_EDI_4,@GI_OTHERS_1,@GI_OTHERS_2,@GI_OTHERS_3,@GI_OTHERS_4,@GI_NOTE_1,@GI_NOTE_2,@GI_LOAD,@GI_FHWA,@GI_LAST_OH_LOC,@GI_LAST_OH_DATE,@GI_SENDER,@GI_ATTENTION,@GI_REVISION,@GI_SEND_EDI_5,@GI_SEND_EDI_6,@GI_SEND_EDI_7,@GI_SEND_EDI_8,@GI_SEAL_PARTY_1,@GI_SEAL_NUMBER_1,@GI_SEAL_PARTY_2,@GI_SEAL_NUMBER_2,@GI_SEAL_PARTY_3,@GI_SEAL_NUMBER_3,@GI_SEAL_PARTY_4,@GI_SEAL_NUMBER_4,@GI_PORT_FUNC_CODE,@GI_PORT_NAME,@GI_VESSEL_NAME,@GI_VOYAGE_NUM,@GI_HAZ_MAT_CODE,@GI_HAZ_MAT_DESC,@GI_NOTE_3,@GI_NOTE_4,@GI_NOTE_5,@GI_COMP_ID_A_2,@GI_COMP_ID_N_2,@GI_COMP_ID_C_2,@GI_COMP_TYPE_2,@GI_COMP_CODE_2,@GI_COMP_DESC_2,@GI_SHIPPER,@GI_DRAY_ORDER,@GI_RAIL_ID,@GI_RAIL_RAMP,@GI_VESSEL_CODE,@GI_WGHT_CERT_1,@GI_WGHT_CERT_2,@GI_WGHT_CERT_3,@GI_SEA_RAIL,@GI_LOC_IDENT,@GI_PORT_LOC_QUAL,@GI_STATUS,@GI_PICK_DATE,@GI_ESTSTATUS,@GI_ERRSTATUS,@GI_USERNAME,@GI_LIVE_STATUS,@GI_ISACTIVE,@GI_YARD_LOC,@GI_MODE_PAYMENT,@GI_BILLING_TYPE,@GI_RESERVE_BKG,@GI_RCESTSTATUS,@OP_SNO,@OP_STATUS)"
    Private Const Repair_Estimate_Detail_RetInsertQuery As String = "INSERT INTO REPAIR_ESTIMATE_DETAIL_RET(WD_RPR_ESTMT_DTL_ID,WD_SNO,WD_TRANSMISSION_NO,WD_TRNSXN,WD_REVISION,WD_ESTIM_DATE,WD_UNIT_NBR,WD_LABOR_RATE,WD_REPAIR,WD_REPEATS,WD_DAMAGE,WD_HOURS,WD_MAT_COST,WD_DMGREP_DESC,WD_STATUS,WM_SNo,WD_LIVE_STATUS)VALUES(@WD_RPR_ESTMT_DTL_ID,@WD_SNO,@WD_TRANSMISSION_NO,@WD_TRNSXN,@WD_REVISION,@WD_ESTIM_DATE,@WD_UNIT_NBR,@WD_LABOR_RATE,@WD_REPAIR,@WD_REPEATS,@WD_DAMAGE,@WD_HOURS,@WD_MAT_COST,@WD_DMGREP_DESC,@WD_STATUS,@WM_SNo,@WD_LIVE_STATUS)"
    'Private Const getEquipmentCodeDescriptionQuery As String = "SELECT EQPMNT_CD_DSCRPTN_VC FROM EQUIPMENT_CODE WHERE EQPMNT_CD_CD=@EQPMNT_CD_CD"
    Private Const getEquipmentCodeDescriptionQuery As String = "SELECT EQPMNT_TYP_DSCRPTN_VC FROM EQUIPMENT_TYPE WHERE EQPMNT_CD_CD=@EQPMNT_CD_CD"

    'For GWS
    Private Const DeleteRepairEstimateDetailByEstimateId_Qry As String = "DELETE FROM REPAIR_ESTIMATE_DETAIL WHERE RPR_ESTMT_ID=@RPR_ESTMT_ID"
    Private Const ValidateTariff_ByDetailId_SelectQry As String = "SELECT TRFF_CD_DTL_ID FROM V_TARIFF_CODE_DETAIL WHERE TRFF_CD_DTL_ID=@TRFF_CD_DTL_ID AND TRFF_CD_DTL_MNHR=@TRFF_CD_DTL_MNHR AND TRFF_CD_DTL_MTRL_CST=@TRFF_CD_DTL_MTRL_CST"

#End Region

#Region "Constructor.."

    Sub New()
        ds = New RepairCompletionDataSet
    End Sub

#End Region

#Region "GetActivityStatusEquipmentByDepotId() TABLE NAME:ACTIVITY_STATUS"
    Public Function GetActivityStatusEquipmentByDepotId(ByVal bv_i32DepotID As Int32) As RepairCompletionDataSet
        Try
            objData = New DataObjects(ActivityStatusPendingSelectQuery, RepairCompletionData.DPT_ID, bv_i32DepotID)
            objData.Fill(CType(ds, DataSet), RepairCompletionData._V_ACTIVITY_STATUS)
            Return ds
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region

#Region "GetRepairEstimatePendingByDepotId (PENDING)() TABLE NAME:V_REPAIR_ESTIMATE"
    Public Function GetRepairEstimatePendingByDepotId(ByVal bv_i32DepotID As Int32) As RepairCompletionDataSet
        Try
            objData = New DataObjects(RepairCompletionPendingQuery, RepairCompletionData.DPT_ID, bv_i32DepotID)
            objData.Fill(CType(ds, DataSet), RepairCompletionData._V_REPAIR_ESTIMATE)
            Return ds
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region

#Region "GetRepairEstimatePendingJTSByDepotId (PENDING)() TABLE NAME:V_REPAIR_ESTIMATE"
    Public Function GetRepairEstimatePendingJTSByDepotId(ByVal bv_i32DepotID As Int32) As RepairCompletionDataSet
        Try
            objData = New DataObjects(RepairCompletionPendingQueryJTS, RepairCompletionData.DPT_ID, bv_i32DepotID)
            objData.Fill(CType(ds, DataSet), RepairCompletionData._V_REPAIR_ESTIMATE)
            Return ds
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region

#Region "GetRepairEstimateMySubmitByDepotId (MYSUBMIT)() TABLE NAME:V_REPAIR_ESTIMATE"
    Public Function GetRepairEstimateMySubmitByDepotId(ByVal bv_i32DepotID As Int32) As RepairCompletionDataSet
        Try
            objData = New DataObjects(RepairCompletionMySubmitQuery, RepairCompletionData.DPT_ID, bv_i32DepotID)
            objData.Fill(CType(ds, DataSet), RepairCompletionData._V_REPAIR_ESTIMATE)
            Return ds
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region

#Region "GetRepairEstimateMySubmitJTSByDepotId (MYSUBMIT)() TABLE NAME:V_REPAIR_ESTIMATE"
    Public Function GetRepairEstimateMySubmitJTSByDepotId(ByVal bv_i32DepotID As Int32) As RepairCompletionDataSet
        Try
            objData = New DataObjects(RepairCompletionMySubmitQueryJTS, RepairCompletionData.DPT_ID, bv_i32DepotID)
            objData.Fill(CType(ds, DataSet), RepairCompletionData._V_REPAIR_ESTIMATE)
            Return ds
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region


#Region "CreateRepairEstimate() TABLE NAME:Repair_Estimate"

    Public Function CreateRepairCompletion(ByVal bv_i64CustomerId As Int64, _
                                         ByVal bv_strRepairEstimateNo As String, _
                                         ByVal bv_datRepairEstimationDate As DateTime, _
                                         ByVal bv_datOrginalEstimationDate As DateTime, _
                                         ByVal bv_datActivityDate As DateTime, _
                                         ByVal bv_datGateinDate As DateTime, _
                                         ByVal bv_strActivityName As String, _
                                         ByVal bv_strEquipmentNo As String, _
                                         ByVal bv_i64EquipmentStatusId As Int64, _
                                         ByVal bv_datLastTestDate As DateTime, _
                                         ByVal bv_i64LastTestTypeId As Int64, _
                                         ByVal bv_strValidityYear As String, _
                                         ByVal bv_datNextTestDate As DateTime, _
                                         ByVal bv_strSurveyorName As String, _
                                         ByVal bv_i64NextTestTypeId As Int64, _
                                         ByVal bv_i64RepairTypeId As Int64, _
                                         ByVal bv_blnCertofCleanBit As Boolean, _
                                         ByVal bv_i64InvoicingPartyId As Int64, _
                                         ByVal bv_decLaborRate As Decimal, _
                                         ByVal bv_strRepairEstimationTransaction As String, _
                                         ByVal bv_i32RevisionNo As Int32, _
                                         ByVal bv_i32DepotId As Int32, _
                                         ByVal bv_strApprovalRef As String, _
                                         ByVal bv_decTotalEstimateAmount As Decimal, _
                                         ByVal bv_decApprovalAmount As Decimal, _
                                         ByVal bv_decOrginalAmount As Decimal, _
                                         ByVal bv_decCustomerEstimatedCost As Decimal, _
                                         ByVal bv_decCustomerApprovedCost As Decimal, _
                                         ByVal bv_decActualMahHour As Decimal, _
                                         ByVal bv_strCreatedBy As String, _
                                         ByVal bv_datCreatedDate As DateTime, _
                                         ByVal bv_strModifiedBy As String, _
                                         ByVal bv_datModifiedDate As DateTime, _
                                         ByVal bv_strPartyAppRef As String, _
                                         ByRef br_objtrans As Transactions) As Long
        Try
            Dim dr As DataRow
            Dim intMax As Long
            objData = New DataObjects()
            dr = ds.Tables(RepairCompletionData._REPAIR_ESTIMATE).NewRow()
            With dr
                intMax = CommonUIs.GetIdentityValue(RepairCompletionData._REPAIR_ESTIMATE, br_objtrans)
                .Item(RepairCompletionData.RPR_ESTMT_ID) = intMax
                .Item(RepairCompletionData.RPR_ESTMT_NO) = bv_strRepairEstimateNo
                .Item(RepairCompletionData.RVSN_NO) = bv_i32RevisionNo
                .Item(RepairCompletionData.RPR_ESTMT_DT) = bv_datRepairEstimationDate
                .Item(RepairCompletionData.ORGNL_ESTMN_DT) = bv_datOrginalEstimationDate
                .Item(RepairCompletionData.ACTVTY_DT) = bv_datActivityDate
                .Item(RepairCompletionData.ACTVTY_NM) = bv_strActivityName
                .Item(RepairCompletionData.EQPMNT_NO) = bv_strEquipmentNo
                .Item(RepairCompletionData.EQPMNT_STTS_ID) = bv_i64EquipmentStatusId
                .Item(RepairCompletionData.CSTMR_ID) = bv_i64CustomerId
                .Item(RepairCompletionData.DPT_ID) = bv_i32DepotId
                .Item(RepairCompletionData.LST_SRVYR_NM) = bv_strSurveyorName
                .Item(RepairCompletionData.LBR_RT_NC) = bv_decLaborRate
                .Item(RepairCompletionData.GI_TRNSCTN_NO) = bv_strRepairEstimationTransaction
                .Item(RepairCompletionData.OWNR_APPRVL_RF) = bv_strApprovalRef
                If bv_i64RepairTypeId <> Nothing And bv_i64RepairTypeId <> 0 Then
                    .Item(RepairCompletionData.RPR_TYP_ID) = bv_i64RepairTypeId
                Else
                    .Item(RepairCompletionData.RPR_TYP_ID) = DBNull.Value
                End If
                If bv_strCreatedBy <> Nothing Then
                    .Item(RepairCompletionData.CRTD_BY) = bv_strCreatedBy
                Else
                    .Item(RepairCompletionData.CRTD_BY) = DBNull.Value
                End If
                If bv_datCreatedDate <> sqlDbnull And bv_datCreatedDate <> Nothing Then
                    .Item(RepairCompletionData.CRTD_DT) = bv_datCreatedDate
                Else
                    .Item(RepairCompletionData.CRTD_DT) = DBNull.Value
                End If
                If bv_strModifiedBy <> Nothing Then
                    .Item(RepairCompletionData.MDFD_BY) = bv_strModifiedBy
                Else
                    .Item(RepairCompletionData.MDFD_BY) = DBNull.Value
                End If
                If bv_strPartyAppRef <> Nothing Then
                    .Item(RepairCompletionData.PRTY_APPRVL_RF) = bv_strPartyAppRef
                Else
                    .Item(RepairCompletionData.PRTY_APPRVL_RF) = DBNull.Value
                End If
                If bv_datModifiedDate <> sqlDbnull And bv_datModifiedDate <> Nothing Then
                    .Item(RepairCompletionData.MDFD_DT) = bv_datModifiedDate
                Else
                    .Item(RepairCompletionData.MDFD_DT) = DBNull.Value
                End If
                .Item(RepairCompletionData.CRT_OF_CLNLNSS_BT) = bv_blnCertofCleanBit
                If bv_i64InvoicingPartyId <> Nothing And bv_i64InvoicingPartyId <> 0 Then
                    .Item(RepairCompletionData.INVCNG_PRTY_ID) = bv_i64InvoicingPartyId
                Else
                    .Item(RepairCompletionData.INVCNG_PRTY_ID) = DBNull.Value
                End If
                .Item(RepairCompletionData.ESTMTN_TTL_NC) = bv_decTotalEstimateAmount
                .Item(RepairCompletionData.APPRVL_AMNT_NC) = bv_decApprovalAmount
                .Item(RepairCompletionData.ORGNL_ESTMTN_AMNT_NC) = bv_decOrginalAmount
                .Item(RepairCompletionData.CSTMR_ESTMTN_TTL_NC) = bv_decCustomerEstimatedCost
                .Item(RepairCompletionData.CSTMR_APPRVL_AMNT_NC) = bv_decCustomerApprovedCost
                .Item(RepairCompletionData.ACTL_MN_HR_NC) = bv_decActualMahHour
            End With
            objData.InsertRow(dr, Repair_EstimateInsertQuery, br_objtrans)
            dr = Nothing
            CreateRepairCompletion = intMax
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "UpdateRepairEstimate() TABLE NAME:Repair_Estimate"

    Public Function UpdateRepairCompletion(ByVal bv_i64RepairEstimationId As Int64, _
                                         ByVal bv_i32RevisionNo As Int32, _
                                         ByVal bv_datActivityDate As DateTime, _
                                         ByVal bv_decActualMahHour As Decimal, _
                                         ByVal bv_i32DepotId As Int32, _
                                         ByVal bv_strModifiedBy As String, _
                                         ByVal bv_datModifiedDate As DateTime, _
                                         ByRef br_objtrans As Transactions) As Boolean
        Try
            Dim dr As DataRow
            objData = New DataObjects()
            dr = ds.Tables(RepairCompletionData._REPAIR_ESTIMATE).NewRow()
            With dr
                .Item(RepairCompletionData.RPR_ESTMT_ID) = bv_i64RepairEstimationId
                .Item(RepairCompletionData.RVSN_NO) = bv_i32RevisionNo
                .Item(RepairCompletionData.ACTVTY_DT) = bv_datActivityDate
                .Item(RepairCompletionData.DPT_ID) = bv_i32DepotId
                '.Item(RepairCompletionData.LBR_RT_NC) = bv_decLaborRate
                .Item(RepairCompletionData.ACTL_MN_HR_NC) = bv_decActualMahHour
                If bv_strModifiedBy <> Nothing Then
                    .Item(RepairCompletionData.MDFD_BY) = bv_strModifiedBy
                Else
                    .Item(RepairCompletionData.MDFD_BY) = DBNull.Value
                End If

                If bv_datModifiedDate = sqlDbnull Then
                    .Item(RepairCompletionData.MDFD_DT) = DBNull.Value
                Else
                    .Item(RepairCompletionData.MDFD_DT) = bv_datModifiedDate
                End If

            End With
            UpdateRepairCompletion = objData.UpdateRow(dr, Repair_EstimateUpdateQuery, br_objtrans)
            dr = Nothing
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region

#Region "UpdateRepairCharge() TABLE NAME:Repair_Charge"

    Public Function UpdateRepairCharge(ByVal bv_i64RepairChargeId As Int64, _
                                         ByVal bv_datActivityDate As DateTime, _
                                          ByVal bv_strYardLocation As String, _
                                         ByVal bv_i32DepotId As Int32, _
                                         ByRef br_objtrans As Transactions) As Boolean
        Try
            Dim dr As DataRow
            objData = New DataObjects()
            dr = ds.Tables(RepairCompletionData._REPAIR_CHARGE).NewRow()
            With dr
                .Item(RepairCompletionData.RPR_CHRG_ID) = bv_i64RepairChargeId
                .Item(RepairCompletionData.RPR_CMPLTN_DT) = bv_datActivityDate
                .Item(RepairCompletionData.DPT_ID) = bv_i32DepotId
                .Item(RepairCompletionData.YRD_LCTN) = bv_strYardLocation
            End With
            UpdateRepairCharge = objData.UpdateRow(dr, RepairChargeUpdateQuery, br_objtrans)
            dr = Nothing
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region

#Region "UpdateGatein() TABLE NAME:Gatein"
    Public Function UpdateGatein(ByVal bv_i64GateInID As Int64, _
                                 ByVal bv_i64EquipmentStatusID As Int64, _
                                 ByRef br_objtrans As Transactions) As Boolean
        Try
            Dim dr As DataRow
            objData = New DataObjects()
            dr = ds.Tables(RepairCompletionData._GATEIN).NewRow()
            With dr
                .Item(RepairCompletionData.GTN_ID) = bv_i64GateInID
                'If bv_blnActiveBit <> Nothing Then
                '    .Item(RepairCompletionData.ACTV_BT) = bv_blnActiveBit
                'Else
                '    .Item(RepairCompletionData.ACTV_BT) = DBNull.Value
                'End If
                .Item(RepairCompletionData.EQPMNT_STTS_ID) = bv_i64EquipmentStatusID
                'If bv_strRepairCompletionEstimationStataus <> Nothing Then
                '    .Item(RepairCompletionData.RC_EST_STTS) = bv_strRepairCompletionEstimationStataus
                'Else
                '    .Item(RepairCompletionData.RC_EST_STTS) = DBNull.Value
                'End If
                'If bv_strEstimationStatus <> Nothing Then
                '    .Item(RepairCompletionData.EST_STTS) = bv_strEstimationStatus
                'Else
                '    .Item(RepairCompletionData.EST_STTS) = DBNull.Value
                'End If
            End With
            UpdateGatein = objData.UpdateRow(dr, GateinUpdateQuery, br_objtrans)
            dr = Nothing
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region

#Region "GetgateInByTransactionNo() TABLE NAME:GATEIN"
    Public Function GetGateInByTransactionNo(ByVal bv_i32DepotId As Int32, _
                                             ByVal bv_GateinTransactionNo As String, _
                                             ByRef br_objtrans As Transactions) As DataTable
        Try
            Dim hshparamters As New Hashtable
            hshparamters.Add(RepairCompletionData.DPT_ID, bv_i32DepotId)
            hshparamters.Add(RepairCompletionData.GI_TRNSCTN_NO, bv_GateinTransactionNo)
            objData = New DataObjects(GateinSelectQueryByGateinTransactionNo, hshparamters)
            objData.Fill(CType(ds, DataSet), RepairCompletionData._GATEIN, br_objtrans)
            Return ds.Tables(RepairCompletionData._GATEIN)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region

#Region "GetRepairEstimateDetailByRepairEstimationIdTrans() TABLE NAME:REPAIR_ESTIMATE"

    Public Function GetRepairEstimateDetailByRepairEstimationIdTrans(ByVal bv_i64EstimateId As Int64, ByRef objTrans As Transactions) As DataTable
        Try
            Dim dtRepairDetail As New DataTable
            objData = New DataObjects(Repair_Estimate_DetailSelectQueryByRepairEstimationId, RepairCompletionData.RPR_ESTMT_ID, CStr(bv_i64EstimateId))
            objData.Fill(dtRepairDetail, objTrans)
            Return dtRepairDetail
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "CreateREPAIR_CHARGE() TABLE NAME:REPAIR_CHARGE"

    Public Function CreateRepairCharge(ByVal bv_i64CSTMR_ID As Int64, _
                                       ByVal bv_strEQPMNT_NO As String, _
                                       ByVal bv_strGateInTransaction As String, _
                                       ByVal bv_i64RepairEstimateId As Int64, _
                                       ByVal bv_i64EQPMNT_TYP_ID As Int64, _
                                       ByVal bv_strESTMT_NO As String, _
                                       ByVal bv_datRPR_APPRVL_DT As DateTime, _
                                       ByVal bv_datRPR_CMPLTN_DT As DateTime, _
                                       ByVal bv_strMTRL_CST_NC As Decimal, _
                                       ByVal bv_strLBR_CST_NC As Decimal, _
                                       ByVal bv_strTTL_CSTS_NC As Decimal, _
                                       ByVal bv_strRPR_APPRVL_AMNT_NC As Decimal, _
                                       ByVal bv_strBLLNG_FLG As String, _
                                       ByVal bv_blnACTV_BT As Boolean, _
                                       ByVal bv_i32DPT_ID As Int32, _
                                       ByVal bv_i64Invoicing_Party_ID As Int64, _
                                       ByVal bv_strYARD_LCTN As String, _
                                       ByVal bv_decCustomerEstimatedCost As Decimal, _
                                       ByVal bv_decCustomerApprovedCost As Decimal, _
                                       ByVal bv_strINVC_TYPE As String, _
                                       ByVal bv_i64ResponsibilityId As Int64, _
                                       ByVal bv_strApprovalRefNo As String, _
                                       ByVal bv_strAgentId As String, _
                                       ByRef br_objTrans As Transactions) As Long
        Try
            Dim dr As DataRow
            Dim intMax As Long
            objData = New DataObjects()
            dr = ds.Tables(RepairCompletionData._REPAIR_CHARGE).NewRow()
            With dr
                intMax = CommonUIs.GetIdentityValue(InvoiceData._REPAIR_CHARGE, br_objTrans)
                .Item(RepairCompletionData.RPR_CHRG_ID) = intMax
                .Item(RepairCompletionData.CSTMR_ID) = bv_i64CSTMR_ID
                .Item(RepairCompletionData.EQPMNT_NO) = bv_strEQPMNT_NO
                .Item(RepairCompletionData.EQPMNT_TYP_ID) = bv_i64EQPMNT_TYP_ID
                .Item(RepairCompletionData.RPR_ESTMT_ID) = bv_i64RepairEstimateId
                .Item(RepairCompletionData.ESTMT_NO) = bv_strESTMT_NO
                .Item(RepairCompletionData.GI_TRNSCTN_NO) = bv_strGateInTransaction
                .Item(RepairCompletionData.RPR_APPRVL_DT) = bv_datRPR_APPRVL_DT
                .Item(RepairCompletionData.RPR_CMPLTN_DT) = bv_datRPR_CMPLTN_DT
                .Item(RepairCompletionData.MTRL_CST_NC) = bv_strMTRL_CST_NC
                .Item(RepairCompletionData.LBR_CST_NC) = bv_strLBR_CST_NC
                .Item(RepairCompletionData.TTL_CSTS_NC) = bv_strTTL_CSTS_NC
                .Item(RepairCompletionData.RPR_APPRVL_AMNT_NC) = bv_strRPR_APPRVL_AMNT_NC
                .Item(RepairCompletionData.CSTMR_TTL_CSTS_NC) = bv_decCustomerEstimatedCost
                .Item(RepairCompletionData.CSTMR_RPR_APPRVL_AMNT_NC) = bv_decCustomerApprovedCost
                .Item(RepairCompletionData.BLLNG_FLG) = bv_strBLLNG_FLG
                .Item(RepairCompletionData.ACTV_BT) = bv_blnACTV_BT
                .Item(RepairCompletionData.DPT_ID) = bv_i32DPT_ID
                If bv_i64Invoicing_Party_ID <> 0 Then
                    .Item(RepairCompletionData.INVCNG_PRTY_ID) = bv_i64Invoicing_Party_ID
                Else
                    .Item(RepairCompletionData.INVCNG_PRTY_ID) = DBNull.Value
                End If
                If bv_strYARD_LCTN <> Nothing Then
                    .Item(RepairCompletionData.YRD_LCTN) = bv_strYARD_LCTN
                Else
                    .Item(RepairCompletionData.YRD_LCTN) = DBNull.Value
                End If
                If bv_strINVC_TYPE <> Nothing Then
                    .Item(RepairCompletionData.INVC_TYPE) = bv_strINVC_TYPE
                Else
                    .Item(RepairCompletionData.INVC_TYPE) = DBNull.Value
                End If
                If bv_i64ResponsibilityId <> 0 Then
                    .Item(RepairCompletionData.RSPNSBLTY_ID) = bv_i64ResponsibilityId
                Else
                    .Item(RepairCompletionData.RSPNSBLTY_ID) = DBNull.Value
                End If
                If bv_strApprovalRefNo <> Nothing Then
                    .Item(RepairCompletionData.APPRVL_RF_NO) = bv_strApprovalRefNo
                Else
                    .Item(RepairCompletionData.APPRVL_RF_NO) = DBNull.Value
                End If

                If bv_strAgentId <> Nothing Then
                    .Item(GateinData.AGNT_ID) = bv_strAgentId
                Else
                    .Item(GateinData.AGNT_ID) = DBNull.Value
                End If

            End With
            objData.InsertRow(dr, REPAIR_CHARGEInsertQuery, br_objTrans)
            dr = Nothing
            CreateRepairCharge = intMax
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "CreateRepairEstimateRet() TABLE NAME:Repair_Estimate_Ret"

    Public Function CreateRepairEstimateRet(ByVal bv_lngCreated As Int64, ByVal bv_strTRANSMISSION_NO As String, _
                                            ByVal bv_strCOMPLETE As String, _
                                            ByVal bv_strSENT_EIR As String, _
                                            ByVal bv_strSENT_DATE As String, _
                                            ByVal bv_strREC_EIR As String, _
                                            ByVal bv_strREC_DATE As String, _
                                            ByVal bv_strREC_ADDR As String, _
                                            ByVal bv_strREC_TYPE As String, _
                                            ByVal bv_strEXPORTED As String, _
                                            ByVal bv_strEXPOR_DATE As String, _
                                            ByVal bv_strIMPORTED As String, _
                                            ByVal bv_strIMPOR_DATE As String, _
                                            ByVal bv_strTRNSXN As String, _
                                            ByVal bv_strPTY_RSPONS As String, _
                                            ByVal bv_i32REVISION As Int32, _
                                            ByVal bv_datESTIM_DATE As DateTime, _
                                            ByVal bv_strUNIT_NBR As String, _
                                            ByVal bv_strREFERENCE As String, _
                                            ByVal bv_strEQUIP_TYPE As String, _
                                            ByVal bv_strEQUIP_CODE As String, _
                                            ByVal bv_strEQUIP_DESC As String, _
                                            ByVal bv_strTERM_LOCA As String, _
                                            ByVal bv_strTERM_DATE As String, _
                                            ByVal bv_strTERM_TIME As String, _
                                            ByVal bv_strLAST_OH_LOC As String, _
                                            ByVal bv_strLAST_OH_DATE As String, _
                                            ByVal bv_strCONDITION As String, _
                                            ByVal bv_strMANU_DATE As String, _
                                            ByVal bv_strCSC_REEXAM As String, _
                                            ByVal bv_strLOAD As String, _
                                            ByVal bv_strSENDER As String, _
                                            ByVal bv_strATTENTION As String, _
                                            ByVal bv_strLSR_OWNER As String, _
                                            ByVal bv_strSEND_EDI_1 As String, _
                                            ByVal bv_strSSL_LSE As String, _
                                            ByVal bv_strSEND_EDI_2 As String, _
                                            ByVal bv_strHAULIER As String, _
                                            ByVal bv_strSEND_EDI_3 As String, _
                                            ByVal bv_strDPT_TRM As String, _
                                            ByVal bv_strSEND_EDI_4 As String, _
                                            ByVal bv_strINSURER As String, _
                                            ByVal bv_strSURVEYOR As String, _
                                            ByVal bv_strOTHERS_1 As String, _
                                            ByVal bv_dblTAX_RATE As Double, _
                                            ByVal bv_strFILLER As String, _
                                            ByVal bv_strNOTE_1 As String, _
                                            ByVal bv_strNOTE_2 As String, _
                                            ByVal bv_strNOTE_3 As String, _
                                            ByVal bv_strBAS_CURR As String, _
                                            ByVal bv_dblLABOR_RATE As Double, _
                                            ByVal bv_strDPP_CURR As String, _
                                            ByVal bv_dblDPP_AMT As Double, _
                                            ByVal bv_strGrossWEIGHT As String, _
                                            ByVal bv_strMEASURE As String, _
                                            ByVal bv_strUNITS As String, _
                                            ByVal bv_strMATERIAL As String, _
                                            ByVal bv_dblU_LABOR As Double, _
                                            ByVal bv_dblU_MATERIAL As Double, _
                                            ByVal bv_dblU_HANDLING As Double, _
                                            ByVal bv_dblU_TAX As Double, _
                                            ByVal bv_dblU_TOTAL As Double, _
                                            ByVal bv_dblI_LABOR As Double, _
                                            ByVal bv_dblI_MATERIAL As Double, _
                                            ByVal bv_dblI_HANDLING As Double, _
                                            ByVal bv_dblI_TAX As Double, _
                                            ByVal bv_dblI_TOTAL As Double, _
                                            ByVal bv_dblO_LABOR As Double, _
                                            ByVal bv_dblO_MATERIAL As Double, _
                                            ByVal bv_dblO_HANDLING As Double, _
                                            ByVal bv_dblO_TAX As Double, _
                                            ByVal bv_dblO_TOTAL As Double, _
                                            ByVal bv_dblD_LABOR As Double, _
                                            ByVal bv_dblD_MATERIAL As Double, _
                                            ByVal bv_dblD_HANDLING As Double, _
                                            ByVal bv_dblD_TAX As Double, _
                                            ByVal bv_dblD_TOTAL As Double, _
                                            ByVal bv_dblS_LABOR As Double, _
                                            ByVal bv_dblS_MATERIAL As Double, _
                                            ByVal bv_dblS_HANDLING As Double, _
                                            ByVal bv_dblS_TAX As Double, _
                                            ByVal bv_dblS_TOTAL As Double, _
                                            ByVal bv_dblX_LABOR As Double, _
                                            ByVal bv_dblX_MATERIAL As Double, _
                                            ByVal bv_dblX_HANDLING As Double, _
                                            ByVal bv_dblX_TAX As Double, _
                                            ByVal bv_dblX_TOTAL As Double, _
                                            ByVal bv_dblEST_TOTAL As Double, _
                                            ByVal bv_strADVICE As String, _
                                            ByVal bv_strEIR_NUM As String, _
                                            ByVal bv_strAUTH_NUM As String, _
                                            ByVal bv_dblAUTH_AMT As Double, _
                                            ByVal bv_strAUTH_PTY As String, _
                                            ByVal bv_strAUTH_DATE As String, _
                                            ByVal bv_strO_ESTIM_DATE As String, _
                                            ByVal bv_strOTHERS_2 As String, _
                                            ByVal bv_strSEND_EDI_5 As String, _
                                            ByVal bv_strSEND_EDI_6 As String, _
                                            ByVal bv_strSEND_EDI_7 As String, _
                                            ByVal bv_strSEND_EDI_8 As String, _
                                            ByVal bv_strNOTE_4 As String, _
                                            ByVal bv_strNOTE_5 As String, _
                                            ByVal bv_strWEIGHT_2 As String, _
                                            ByVal bv_strMEASURE_2 As String, _
                                            ByVal bv_strINVOICE_TYPE As String, _
                                            ByVal bv_strODOMETER_HOURS As String, _
                                            ByVal bv_strOUT_SVC_DATE As String, _
                                            ByVal bv_strRET_SVC_DATE As String, _
                                            ByVal bv_strOWN_INSP_DATE As String, _
                                            ByVal bv_strMECHANIC_NAME As String, _
                                            ByVal bv_strBILLEE_CODE As String, _
                                            ByVal bv_strSUB_REPAIR_TYPE As String, _
                                            ByVal bv_strOUT_SVC_TIME As String, _
                                            ByVal bv_strRET_SVC_TIME As String, _
                                            ByVal bv_strEXCHG_RATE As String, _
                                            ByVal bv_strSTATUS As String, _
                                            ByVal bv_datPICK_DATE As DateTime, _
                                            ByVal bv_strESTSTATUS As String, _
                                            ByVal bv_strErrors As String, _
                                            ByVal bv_strMatchStatus As String, _
                                            ByVal bv_strERRSTATUS As String, _
                                            ByVal bv_strUSERNAME As String, _
                                            ByVal bv_i32LIVE_STATUS As Int32, _
                                            ByVal bv_dblEST_TOTAL_TAXED As Double, _
                                            ByVal bv_dblCC_TOTAL As Double, _
                                            ByVal bv_dblSRVC_TAX_RATE As Double, _
                                            ByVal bv_dblTOTAL_LABOR_COST As Double, _
                                            ByVal bv_dblTOTAL_SRVC_TAX As Double, _
                                            ByVal bv_strEQUIP_SIZE As String, _
                                            ByVal bv_strYARD_LOC As String, _
                                            ByVal bv_strRCESTSTATUS As String, _
                                            ByVal bv_strESTIMATE_TYPE As String, _
                                            ByRef br_objtrans As Transactions) As Long
        Try
            Dim dr As DataRow
            Dim intMax As Long
            objData = New DataObjects()
            dr = ds.Tables(RepairCompletionData._REPAIR_ESTIMATE_RET).NewRow()
            With dr
                intMax = CommonUIs.GetIdentityValue(RepairCompletionData._REPAIR_ESTIMATE_RET, br_objtrans)
                .Item(RepairCompletionData.WM_SNO) = bv_lngCreated
                .Item(RepairCompletionData.WM_TRANSMISSION_NO) = bv_strTRANSMISSION_NO
                .Item(RepairCompletionData.WM_COMPLETE) = bv_strCOMPLETE
                .Item(RepairCompletionData.WM_SENT_EIR) = bv_strSENT_EIR
                .Item(RepairCompletionData.WM_SENT_DATE) = bv_strSENT_DATE
                .Item(RepairCompletionData.WM_REC_EIR) = bv_strREC_EIR
                .Item(RepairCompletionData.WM_REC_DATE) = bv_strREC_DATE
                .Item(RepairCompletionData.WM_REC_ADDR) = bv_strREC_ADDR
                .Item(RepairCompletionData.WM_REC_TYPE) = bv_strREC_TYPE
                .Item(RepairCompletionData.WM_EXPORTED) = bv_strEXPORTED
                .Item(RepairCompletionData.WM_EXPOR_DATE) = bv_strEXPOR_DATE
                .Item(RepairCompletionData.WM_IMPORTED) = bv_strIMPORTED
                .Item(RepairCompletionData.WM_IMPOR_DATE) = bv_strIMPOR_DATE
                .Item(RepairCompletionData.WM_TRNSXN) = bv_strTRNSXN
                .Item(RepairCompletionData.WM_PTY_RSPONS) = bv_strPTY_RSPONS
                .Item(RepairCompletionData.WM_REVISION) = bv_i32REVISION
                .Item(RepairCompletionData.WM_ESTIM_DATE) = bv_datESTIM_DATE
                .Item(RepairCompletionData.WM_UNIT_NBR) = bv_strUNIT_NBR
                If bv_strREFERENCE <> Nothing Then
                    .Item(RepairCompletionData.WM_REFERENCE) = bv_strREFERENCE
                Else
                    .Item(RepairCompletionData.WM_REFERENCE) = " "
                End If
                .Item(RepairCompletionData.WM_EQUIP_TYPE) = bv_strEQUIP_TYPE
                .Item(RepairCompletionData.WM_EQUIP_CODE) = bv_strEQUIP_CODE
                .Item(RepairCompletionData.WM_EQUIP_DESC) = bv_strEQUIP_DESC
                .Item(RepairCompletionData.WM_TERM_LOCA) = bv_strTERM_LOCA
                .Item(RepairCompletionData.WM_TERM_DATE) = bv_strTERM_DATE
                .Item(RepairCompletionData.WM_TERM_TIME) = bv_strTERM_TIME
                If bv_strLAST_OH_LOC <> Nothing Then
                    .Item(RepairCompletionData.WM_LAST_OH_LOC) = bv_strLAST_OH_LOC
                Else
                    .Item(RepairCompletionData.WM_LAST_OH_LOC) = " "
                End If
                If bv_strLAST_OH_DATE <> Nothing And bv_strLAST_OH_DATE <> sqlDtnull Then
                    .Item(RepairCompletionData.WM_LAST_OH_DATE) = bv_strLAST_OH_DATE
                Else
                    .Item(RepairCompletionData.WM_LAST_OH_DATE) = " "
                End If
                .Item(RepairCompletionData.WM_CONDITION) = bv_strCONDITION
                If bv_strMANU_DATE <> Nothing And bv_strMANU_DATE <> sqlMnthnull Then
                    .Item(RepairCompletionData.WM_MANU_DATE) = bv_strMANU_DATE
                Else
                    .Item(RepairCompletionData.WM_MANU_DATE) = " "
                End If
                .Item(RepairCompletionData.WM_CSC_REEXAM) = bv_strCSC_REEXAM
                .Item(RepairCompletionData.WM_LOAD) = bv_strLOAD
                .Item(RepairCompletionData.WM_SENDER) = bv_strSENDER
                .Item(RepairCompletionData.WM_ATTENTION) = bv_strATTENTION
                .Item(RepairCompletionData.WM_LSR_OWNER) = bv_strLSR_OWNER
                .Item(RepairCompletionData.WM_SEND_EDI_1) = bv_strSEND_EDI_1
                .Item(RepairCompletionData.WM_SSL_LSE) = bv_strSSL_LSE
                .Item(RepairCompletionData.WM_SEND_EDI_2) = bv_strSEND_EDI_2
                .Item(RepairCompletionData.WM_HAULIER) = bv_strHAULIER
                .Item(RepairCompletionData.WM_SEND_EDI_3) = bv_strSEND_EDI_3
                .Item(RepairCompletionData.WM_DPT_TRM) = bv_strDPT_TRM
                .Item(RepairCompletionData.WM_SEND_EDI_4) = bv_strSEND_EDI_4
                .Item(RepairCompletionData.WM_INSURER) = bv_strINSURER
                If bv_strSURVEYOR <> Nothing Then
                    .Item(RepairCompletionData.WM_SURVEYOR) = bv_strSURVEYOR
                Else
                    .Item(RepairCompletionData.WM_SURVEYOR) = " "
                End If
                .Item(RepairCompletionData.WM_OTHERS_1) = bv_strOTHERS_1
                .Item(RepairCompletionData.WM_TAX_RATE) = bv_dblTAX_RATE
                .Item(RepairCompletionData.WM_FILLER) = bv_strFILLER
                If bv_strNOTE_1 <> Nothing Then
                    .Item(RepairCompletionData.WM_NOTE_1) = bv_strNOTE_1
                Else
                    .Item(RepairCompletionData.WM_NOTE_1) = " "
                End If
                .Item(RepairCompletionData.WM_NOTE_2) = bv_strNOTE_2
                .Item(RepairCompletionData.WM_NOTE_3) = bv_strNOTE_3
                If bv_strBAS_CURR <> Nothing Then
                    .Item(RepairCompletionData.WM_BAS_CURR) = bv_strBAS_CURR
                Else
                    .Item(RepairCompletionData.WM_BAS_CURR) = " "
                End If
                If bv_dblLABOR_RATE <> Nothing Then
                    .Item(RepairCompletionData.WM_LABOR_RATE) = bv_dblLABOR_RATE
                Else
                    .Item(RepairCompletionData.WM_LABOR_RATE) = 0
                End If
                If bv_strDPP_CURR <> Nothing Then
                    .Item(RepairCompletionData.WM_DPP_CURR) = bv_strDPP_CURR
                Else
                    .Item(RepairCompletionData.WM_DPP_CURR) = " "
                End If
                .Item(RepairCompletionData.WM_DPP_AMT) = bv_dblDPP_AMT
                If bv_strGrossWEIGHT <> Nothing Then
                    .Item(RepairCompletionData.WM_WEIGHT) = bv_strGrossWEIGHT
                Else
                    .Item(RepairCompletionData.WM_WEIGHT) = " "
                End If
                If bv_strMEASURE <> Nothing Then
                    .Item(RepairCompletionData.WM_MEASURE) = bv_strMEASURE
                Else
                    .Item(RepairCompletionData.WM_MEASURE) = " "
                End If
                If bv_strUNITS <> Nothing Then
                    .Item(RepairCompletionData.WM_UNITS) = bv_strUNITS
                Else
                    .Item(RepairCompletionData.WM_UNITS) = " "
                End If
                .Item(RepairCompletionData.WM_MATERIAL) = bv_strMATERIAL
                .Item(RepairCompletionData.WM_U_LABOR) = bv_dblU_LABOR
                .Item(RepairCompletionData.WM_U_MATERIAL) = bv_dblU_MATERIAL
                .Item(RepairCompletionData.WM_U_HANDLING) = bv_dblU_HANDLING
                .Item(RepairCompletionData.WM_U_TAX) = bv_dblU_TAX
                .Item(RepairCompletionData.WM_U_TOTAL) = bv_dblU_TOTAL
                .Item(RepairCompletionData.WM_I_LABOR) = bv_dblI_LABOR
                .Item(RepairCompletionData.WM_I_MATERIAL) = bv_dblI_MATERIAL
                .Item(RepairCompletionData.WM_I_HANDLING) = bv_dblI_HANDLING
                .Item(RepairCompletionData.WM_I_TAX) = bv_dblI_TAX
                .Item(RepairCompletionData.WM_I_TOTAL) = bv_dblI_TOTAL
                .Item(RepairCompletionData.WM_O_LABOR) = bv_dblO_LABOR
                .Item(RepairCompletionData.WM_O_MATERIAL) = bv_dblO_MATERIAL
                .Item(RepairCompletionData.WM_O_HANDLING) = bv_dblO_HANDLING
                .Item(RepairCompletionData.WM_O_TAX) = bv_dblO_TAX
                .Item(RepairCompletionData.WM_O_TOTAL) = bv_dblO_TOTAL
                .Item(RepairCompletionData.WM_D_LABOR) = bv_dblD_LABOR
                .Item(RepairCompletionData.WM_D_MATERIAL) = bv_dblD_MATERIAL
                .Item(RepairCompletionData.WM_D_HANDLING) = bv_dblD_HANDLING
                .Item(RepairCompletionData.WM_D_TAX) = bv_dblD_TAX
                .Item(RepairCompletionData.WM_D_TOTAL) = bv_dblD_TOTAL
                .Item(RepairCompletionData.WM_S_LABOR) = bv_dblS_LABOR
                .Item(RepairCompletionData.WM_S_MATERIAL) = bv_dblS_MATERIAL
                .Item(RepairCompletionData.WM_S_HANDLING) = bv_dblS_HANDLING
                .Item(RepairCompletionData.WM_S_TAX) = bv_dblS_TAX
                .Item(RepairCompletionData.WM_S_TOTAL) = bv_dblS_TOTAL
                .Item(RepairCompletionData.WM_X_LABOR) = bv_dblX_LABOR
                .Item(RepairCompletionData.WM_X_MATERIAL) = bv_dblX_MATERIAL
                .Item(RepairCompletionData.WM_X_HANDLING) = bv_dblX_HANDLING
                .Item(RepairCompletionData.WM_X_TAX) = bv_dblX_TAX
                .Item(RepairCompletionData.WM_X_TOTAL) = bv_dblX_TOTAL
                .Item(RepairCompletionData.WM_EST_TOTAL) = bv_dblEST_TOTAL
                .Item(RepairCompletionData.WM_ADVICE) = bv_strADVICE
                .Item(RepairCompletionData.WM_EIR_NUM) = bv_strEIR_NUM
                If bv_strAUTH_NUM <> Nothing Then
                    .Item(RepairCompletionData.WM_AUTH_NUM) = bv_strAUTH_NUM
                Else
                    .Item(RepairCompletionData.WM_AUTH_NUM) = " "
                End If
                .Item(RepairCompletionData.WM_AUTH_AMT) = bv_dblAUTH_AMT
                .Item(RepairCompletionData.WM_AUTH_PTY) = bv_strAUTH_PTY
                If bv_strAUTH_DATE <> Nothing And bv_strAUTH_DATE <> sqlDtnull Then
                    .Item(RepairCompletionData.WM_AUTH_DATE) = bv_strAUTH_DATE
                Else
                    .Item(RepairCompletionData.WM_AUTH_DATE) = " "
                End If
                If bv_strO_ESTIM_DATE <> Nothing And bv_strO_ESTIM_DATE <> sqlDtnull Then
                    .Item(RepairCompletionData.WM_O_ESTIM_DATE) = bv_strO_ESTIM_DATE
                Else
                    .Item(RepairCompletionData.WM_O_ESTIM_DATE) = " "
                End If
                .Item(RepairCompletionData.WM_OTHERS_2) = bv_strOTHERS_2
                .Item(RepairCompletionData.WM_SEND_EDI_5) = bv_strSEND_EDI_5
                .Item(RepairCompletionData.WM_SEND_EDI_6) = bv_strSEND_EDI_6
                .Item(RepairCompletionData.WM_SEND_EDI_7) = bv_strSEND_EDI_7
                .Item(RepairCompletionData.WM_SEND_EDI_8) = bv_strSEND_EDI_8
                .Item(RepairCompletionData.WM_NOTE_4) = bv_strNOTE_4
                .Item(RepairCompletionData.WM_NOTE_5) = bv_strNOTE_5
                .Item(RepairCompletionData.WM_WEIGHT_2) = bv_strWEIGHT_2
                .Item(RepairCompletionData.WM_MEASURE_2) = bv_strMEASURE_2
                .Item(RepairCompletionData.WM_INVOICE_TYPE) = bv_strINVOICE_TYPE
                .Item(RepairCompletionData.WM_ODOMETER_HOURS) = bv_strODOMETER_HOURS
                .Item(RepairCompletionData.WM_OUT_SVC_DATE) = bv_strOUT_SVC_DATE
                .Item(RepairCompletionData.WM_RET_SVC_DATE) = bv_strRET_SVC_DATE
                .Item(RepairCompletionData.WM_OWN_INSP_DATE) = bv_strOWN_INSP_DATE
                .Item(RepairCompletionData.WM_MECHANIC_NAME) = bv_strMECHANIC_NAME
                .Item(RepairCompletionData.WM_BILLEE_CODE) = bv_strBILLEE_CODE
                .Item(RepairCompletionData.WM_SUB_REPAIR_TYPE) = bv_strSUB_REPAIR_TYPE
                .Item(RepairCompletionData.WM_OUT_SVC_TIME) = bv_strOUT_SVC_TIME
                .Item(RepairCompletionData.WM_RET_SVC_TIME) = bv_strRET_SVC_TIME
                If bv_strEXCHG_RATE <> Nothing Then
                    .Item(RepairCompletionData.WM_EXCHG_RATE) = bv_strEXCHG_RATE
                Else
                    .Item(RepairCompletionData.WM_EXCHG_RATE) = DBNull.Value
                End If
                .Item(RepairCompletionData.WM_STATUS) = bv_strSTATUS
                If bv_datPICK_DATE <> Nothing Then
                    .Item(RepairCompletionData.WM_PICK_DATE) = bv_datPICK_DATE
                Else
                    .Item(RepairCompletionData.WM_PICK_DATE) = DBNull.Value
                End If
                If bv_strESTSTATUS <> Nothing Then
                    .Item(RepairCompletionData.WM_ESTSTATUS) = bv_strESTSTATUS
                Else
                    .Item(RepairCompletionData.WM_ESTSTATUS) = DBNull.Value
                End If
                If bv_strErrors <> Nothing Then
                    .Item(RepairCompletionData.WM_ERRORS) = bv_strErrors
                Else
                    .Item(RepairCompletionData.WM_ERRORS) = DBNull.Value
                End If
                If bv_strMatchStatus <> Nothing Then
                    .Item(RepairCompletionData.WM_MATCHSTATUS) = bv_strMatchStatus
                Else
                    .Item(RepairCompletionData.WM_MATCHSTATUS) = DBNull.Value
                End If
                If bv_strERRSTATUS <> Nothing Then
                    .Item(RepairCompletionData.WM_ERRSTATUS) = bv_strERRSTATUS
                Else
                    .Item(RepairCompletionData.WM_ERRSTATUS) = DBNull.Value
                End If
                If bv_strUSERNAME <> Nothing Then
                    .Item(RepairCompletionData.WM_USERNAME) = bv_strUSERNAME
                Else
                    .Item(RepairCompletionData.WM_USERNAME) = DBNull.Value
                End If
                If bv_i32LIVE_STATUS <> 0 Then
                    .Item(RepairCompletionData.WM_LIVE_STATUS) = bv_i32LIVE_STATUS
                Else
                    .Item(RepairCompletionData.WM_LIVE_STATUS) = DBNull.Value
                End If
                .Item(RepairCompletionData.WM_EST_TOTAL_TAXED) = bv_dblEST_TOTAL_TAXED
                .Item(RepairCompletionData.WM_CC_TOTAL) = bv_dblCC_TOTAL
                .Item(RepairCompletionData.WM_SRVC_TAX_RATE) = bv_dblSRVC_TAX_RATE
                .Item(RepairCompletionData.WM_TOTAL_LABOR_COST) = bv_dblTOTAL_LABOR_COST
                .Item(RepairCompletionData.WM_TOTAL_SRVC_TAX) = bv_dblTOTAL_SRVC_TAX
                If bv_strEQUIP_SIZE <> Nothing Then
                    .Item(RepairCompletionData.WM_EQUIP_SIZE) = bv_strEQUIP_SIZE
                Else
                    .Item(RepairCompletionData.WM_EQUIP_SIZE) = DBNull.Value
                End If
                If bv_strYARD_LOC <> Nothing Then
                    .Item(RepairCompletionData.WM_YARD_LOC) = bv_strYARD_LOC
                Else
                    .Item(RepairCompletionData.WM_YARD_LOC) = DBNull.Value
                End If
                If bv_strRCESTSTATUS <> Nothing Then
                    .Item(RepairCompletionData.WM_RCESTSTATUS) = bv_strRCESTSTATUS
                Else
                    .Item(RepairCompletionData.WM_RCESTSTATUS) = DBNull.Value
                End If
                If bv_strESTIMATE_TYPE <> Nothing Then
                    .Item(RepairCompletionData.WM_ESTIMATE_TYPE) = bv_strESTIMATE_TYPE
                Else
                    .Item(RepairCompletionData.WM_ESTIMATE_TYPE) = DBNull.Value
                End If
            End With
            objData.InsertRow(dr, Repair_Estimate_RetInsertQuery, br_objtrans)

            dr = Nothing
            CreateRepairEstimateRet = intMax
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "UpdateRepairEstimateDetailRet() TABLE NAME:Repair_Estimate_Detail_Ret"

    Public Function UpdateRepairEstimateDetailRet(ByVal bv_i64RepairEstimateDetailId As Int64, _
                                                  ByVal bv_strTRANSMISSION_NO As String, _
                                                  ByVal bv_strTRNSXN As String, _
                                                  ByVal bv_i32REVISION As Int32, _
                                                  ByVal bv_datESTIM_DATE As DateTime, _
                                                  ByVal bv_strUNIT_NBR As String, _
                                                  ByVal bv_strLABOR_RATE As String, _
                                                  ByVal bv_strLINE As String, _
                                                  ByVal bv_strREPAIR As String, _
                                                  ByVal bv_strDAMAGE As String, _
                                                  ByVal bv_dblHOURS As Double, _
                                                  ByVal bv_dblMAT_COST As Double, _
                                                  ByVal bv_strDMGREP_DESC As String, _
                                                  ByVal bv_strSTATUS As String, _
                                                  ByVal bv_i64SNo As Int64, _
                                                  ByVal bv_i32LIVE_STATUS As Int32, _
                                                  ByRef br_objtrans As Transactions) As Long
        Try
            Dim dr As DataRow
            objData = New DataObjects()
            dr = ds.Tables(RepairCompletionData._REPAIR_ESTIMATE_DETAIL_RET).NewRow()
            With dr
                .Item(RepairCompletionData.WD_RPR_ESTMT_DTL_ID) = bv_i64RepairEstimateDetailId
                .Item(RepairCompletionData.WD_TRANSMISSION_NO) = bv_strTRANSMISSION_NO
                .Item(RepairCompletionData.WD_TRNSXN) = bv_strTRNSXN
                .Item(RepairCompletionData.WD_REVISION) = bv_i32REVISION
                .Item(RepairCompletionData.WD_ESTIM_DATE) = bv_datESTIM_DATE
                .Item(RepairCompletionData.WD_UNIT_NBR) = bv_strUNIT_NBR
                .Item(RepairCompletionData.WD_LABOR_RATE) = bv_strLABOR_RATE
                .Item(RepairCompletionData.WD_LINE) = bv_strLINE
                .Item(RepairCompletionData.WD_REPAIR) = bv_strREPAIR
                .Item(RepairCompletionData.WD_DAMAGE) = bv_strDAMAGE
                .Item(RepairCompletionData.WD_HOURS) = bv_dblHOURS
                .Item(RepairCompletionData.WD_MAT_COST) = bv_dblMAT_COST
                .Item(RepairCompletionData.WD_DMGREP_DESC) = bv_strDMGREP_DESC
                .Item(RepairCompletionData.WD_STATUS) = bv_strSTATUS
                .Item(RepairCompletionData.WM_SNO) = bv_i64SNo
                If bv_i32LIVE_STATUS <> 0 Then
                    .Item(RepairCompletionData.WD_LIVE_STATUS) = bv_i32LIVE_STATUS
                Else
                    .Item(RepairCompletionData.WD_LIVE_STATUS) = DBNull.Value
                End If
            End With
            UpdateRepairEstimateDetailRet = objData.UpdateRow(dr, Repair_Estimate_Detail_RetUpdateQuery, br_objtrans)
            dr = Nothing
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "CreateTracking() TABLE NAME:Tracking"

    Public Function CreateTracking(ByVal bv_i64CustomerId As Int64, _
                                   ByVal bv_strEquipmentNo As String, _
                                   ByVal bv_strActivityName As String, _
                                   ByVal bv_i64EqpStatusId As Int64, _
                                   ByVal bv_strActivityNo As String, _
                                   ByVal bv_datActivityDate As DateTime, _
                                   ByVal bv_strActivityRemarks As String, _
                                   ByVal bv_strGateinTransaction As String, _
                                   ByVal bv_i64InvoicingPartyId As Int64, _
                                   ByVal bv_strCreatedBy As String, _
                                   ByVal bv_datCreatedDate As DateTime, _
                                   ByVal bv_strCancelledBy As String, _
                                   ByVal bv_datCancelledDate As DateTime, _
                                   ByVal bv_strADTRemarks As String, _
                                   ByVal bv_i32DepotId As Int32, _
                                   ByRef br_objTrans As Transactions) As Long
        Try
            Dim dr As DataRow
            Dim intMax As Long
            objData = New DataObjects()
            dr = ds.Tables(RepairCompletionData._TRACKING).NewRow()
            With dr
                intMax = CommonUIs.GetIdentityValue(RepairCompletionData._TRACKING, br_objTrans)
                .Item(RepairCompletionData.TRCKNG_ID) = intMax
                .Item(RepairCompletionData.CSTMR_ID) = bv_i64CustomerId
                .Item(RepairCompletionData.EQPMNT_NO) = bv_strEquipmentNo
                .Item(RepairCompletionData.ACTVTY_NAM) = bv_strActivityName
                .Item(RepairCompletionData.EQPMNT_STTS_ID) = bv_i64EqpStatusId
                .Item(RepairCompletionData.ACTVTY_NO) = bv_strActivityNo
                .Item(RepairCompletionData.ACTVTY_DT) = bv_datActivityDate
                If bv_strActivityRemarks <> Nothing Then
                    .Item(RepairCompletionData.ACTVTY_RMRKS) = bv_strActivityRemarks
                Else
                    .Item(RepairCompletionData.ACTVTY_RMRKS) = DBNull.Value
                End If
                .Item(RepairCompletionData.GI_TRNSCTN_NO) = bv_strGateinTransaction
                If bv_i64InvoicingPartyId <> 0 Then
                    .Item(RepairCompletionData.INVCNG_PRTY_ID) = bv_i64InvoicingPartyId
                Else
                    .Item(RepairCompletionData.INVCNG_PRTY_ID) = DBNull.Value
                End If
                .Item(RepairCompletionData.CRTD_BY) = bv_strCreatedBy
                .Item(RepairCompletionData.CRTD_DT) = bv_datCreatedDate
                If bv_strCancelledBy <> Nothing Then
                    .Item(RepairCompletionData.CNCLD_BY) = bv_strCancelledBy
                Else
                    .Item(RepairCompletionData.CNCLD_BY) = DBNull.Value
                End If
                If bv_datCancelledDate <> Nothing Then
                    .Item(RepairCompletionData.CNCLD_DT) = bv_datCancelledDate
                Else
                    .Item(RepairCompletionData.CNCLD_DT) = DBNull.Value
                End If
                If bv_strADTRemarks <> Nothing Then
                    .Item(RepairCompletionData.ADT_RMRKS) = bv_strADTRemarks
                Else
                    .Item(RepairCompletionData.ADT_RMRKS) = DBNull.Value
                End If
                .Item(RepairCompletionData.DPT_ID) = bv_i32DepotId
            End With

            objData.InsertRow(dr, TrackingInsertQuery, br_objTrans)
            dr = Nothing
            CreateTracking = intMax
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "UpdateActivityStatus() TABLE NAME:Activity_Status"

    Public Function UpdateActivityStatus(ByVal bv_i64ActivityStatusId As Int64, _
                                         ByVal bv_strEquipmentNo As String, _
                                         ByVal bv_strYardLocation As String, _
                                         ByVal bv_strGateinTransaction As String, _
                                         ByVal bv_strActivityName As String, _
                                         ByVal bv_datActivityDate As DateTime, _
                                         ByVal bv_datRepairCompletionDate As DateTime, _
                                         ByVal bv_strRemarks As String, _
                                         ByRef br_objTransaction As Transactions) As Boolean
        Try
            Dim dr As DataRow
            objData = New DataObjects()
            dr = ds.Tables(RepairCompletionData._ACTIVITY_STATUS).NewRow()
            With dr
                .Item(RepairCompletionData.EQPMNT_STTS_ID) = bv_i64ActivityStatusId
                .Item(RepairCompletionData.EQPMNT_NO) = bv_strEquipmentNo
                .Item(RepairCompletionData.YRD_LCTN) = bv_strYardLocation
                .Item(RepairCompletionData.GI_TRNSCTN_NO) = bv_strGateinTransaction
                .Item(RepairCompletionData.ACTVTY_NAM) = bv_strActivityName
                .Item(RepairCompletionData.ACTVTY_DT) = bv_datActivityDate
                .Item(RepairCompletionData.RPR_CMPLTN_DT) = bv_datRepairCompletionDate
                .Item(RepairCompletionData.RMRKS_VC) = bv_strRemarks
            End With
            UpdateActivityStatus = objData.UpdateRow(dr, Activity_StatusUpdateQuery, br_objTransaction)
            dr = Nothing
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region

#Region "CheckRepairEstimateByEstimateId() TABLE NAME:REPAIR_ESTIMATE"

    Public Function CheckRepairEstimateByEstimateId(ByVal bv_i32DepotId As Int32, _
                                                    ByVal bv_i64RepairEstimateId As Int64, _
                                                    ByVal bv_strActivityName As String, _
                                                    ByRef br_objTrans As Transactions) As String
        Try
            Dim hshparameters As New Hashtable
            hshparameters.Add(RepairCompletionData.DPT_ID, bv_i32DepotId)
            hshparameters.Add(RepairCompletionData.RPR_ESTMT_ID, bv_i64RepairEstimateId)
            hshparameters.Add(RepairCompletionData.ACTVTY_NM, bv_strActivityName)
            objData = New DataObjects(RepairCompletionCountQuery, hshparameters)
            Return objData.ExecuteScalar(br_objTrans)
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "GetRepairChargeByTransactionNo() TABLE NAME:REPAIR_CHARGE"
    Public Function GetRepairChargeByTransactionNo(ByVal bv_i32DepotId As Int32, _
                                                   ByVal bv_GateinTransactionNo As String, _
                                                   ByRef br_objTrans As Transactions) As DataTable
        Try
            Dim hshparamters As New Hashtable
            Dim dtRepairCharge As New DataTable
            hshparamters.Add(RepairCompletionData.DPT_ID, bv_i32DepotId)
            hshparamters.Add(RepairCompletionData.ESTMT_NO, bv_GateinTransactionNo)
            objData = New DataObjects(RepairChargeselectQuery, hshparamters)
            objData.Fill(dtRepairCharge, br_objTrans)
            Return dtRepairCharge
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region

#Region "GetActivityStatusByEqpmntNo() TABLE NAME:ACTIVITY_STATUS"

    Public Function GetActivityStatusByEqpmntNo(ByVal bv_intDepotId As Int32, _
                                                ByVal bv_strEquipmentNo As String, _
                                                ByVal bv_strGiTransaction As String, _
                                                ByRef br_objTransaction As Transactions) As DataTable
        Try
            Dim dt As New DataTable
            Dim hshparameters As New Hashtable
            hshparameters.Add(RepairCompletionData.DPT_ID, bv_intDepotId)
            hshparameters.Add(RepairCompletionData.EQPMNT_NO, bv_strEquipmentNo)
            hshparameters.Add(RepairCompletionData.GI_TRNSCTN_NO, bv_strGiTransaction)
            objData = New DataObjects(ActivityStatusSelectQueryByActivityName, hshparameters)
            objData.Fill(dt, br_objTransaction)
            Return dt
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region

#Region "GetTracking() TABLE NAME:Tracking"

    Public Function GetTracking(ByVal bv_strEquipmentNo As String, _
                                ByVal bv_strActivityName As String, _
                                ByVal bv_strGateinTransaction As String, _
                                ByVal bv_i32DepotId As Integer, _
                                ByRef br_objTransaction As Transactions) As DataTable
        Try
            Dim hshparameters As New Hashtable
            Dim dsTemp As New RepairCompletionDataSet
            hshparameters.Add(RepairCompletionData.EQPMNT_NO, bv_strEquipmentNo)
            hshparameters.Add(RepairCompletionData.GI_TRNSCTN_NO, bv_strGateinTransaction)
            hshparameters.Add(RepairCompletionData.ACTVTY_NAM, bv_strActivityName)
            hshparameters.Add(RepairCompletionData.DPT_ID, bv_i32DepotId)
            objData = New DataObjects(TrackingSelectCountQuery, hshparameters)
            objData.Fill(CType(ds, RepairCompletionDataSet), RepairCompletionData._TRACKING, br_objTransaction)
            Return ds.Tables(RepairCompletionData._TRACKING)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region

#Region "UpdateTracking() TABLE NAME:Tracking"

    Public Function UpdateTracking(ByVal bv_strActivityName As String, _
                                   ByVal bv_strActivityNo As Int64, _
                                   ByVal bv_datActivityDate As DateTime, _
                                   ByVal bv_strActivityRemarks As String, _
                                   ByVal bv_strGateinTransaction As String, _
                                   ByVal bv_i64InvoicingPartyId As Int64, _
                                   ByVal bv_strYardLocation As String, _
                                   ByVal bv_strCreatedBy As String, _
                                   ByVal bv_datCreatedDate As DateTime, _
                                   ByVal bv_i32DepotId As Int32, _
                                   ByVal bv_strEquipmentInformationRemarks As String, _
                                   ByRef br_objTrans As Transactions) As Long
        Try
            Dim dr As DataRow
            Dim intMax As Long
            objData = New DataObjects()
            dr = ds.Tables(CommonUIData._TRACKING).NewRow()
            With dr
                intMax = CommonUIs.GetIdentityValue(RepairCompletionData._TRACKING, br_objTrans)
                .Item(RepairCompletionData.ACTVTY_NAM) = bv_strActivityName
                .Item(RepairCompletionData.ACTVTY_NO) = bv_strActivityNo
                .Item(RepairCompletionData.ACTVTY_DT) = bv_datActivityDate
                If bv_strActivityRemarks <> Nothing Then
                    .Item(RepairCompletionData.ACTVTY_RMRKS) = bv_strActivityRemarks
                Else
                    .Item(RepairCompletionData.ACTVTY_RMRKS) = DBNull.Value
                End If
                If bv_i64InvoicingPartyId <> 0 Then
                    .Item(RepairCompletionData.INVCNG_PRTY_ID) = bv_i64InvoicingPartyId
                Else
                    .Item(RepairCompletionData.INVCNG_PRTY_ID) = DBNull.Value
                End If
                If bv_strGateinTransaction <> Nothing Then
                    .Item(RepairCompletionData.GI_TRNSCTN_NO) = bv_strGateinTransaction
                Else
                    .Item(RepairCompletionData.GI_TRNSCTN_NO) = DBNull.Value
                End If
                If bv_strYardLocation <> Nothing Then
                    .Item(RepairCompletionData.YRD_LCTN) = bv_strYardLocation
                Else
                    .Item(RepairCompletionData.YRD_LCTN) = DBNull.Value
                End If
                .Item(RepairCompletionData.MDFD_BY) = bv_strCreatedBy
                .Item(RepairCompletionData.MDFD_DT) = bv_datCreatedDate
                .Item(RepairCompletionData.DPT_ID) = bv_i32DepotId
                If bv_strEquipmentInformationRemarks <> Nothing Then
                    .Item(RepairCompletionData.EQPMNT_INFRMTN_RMRKS_VC) = bv_strEquipmentInformationRemarks
                Else
                    .Item(RepairCompletionData.EQPMNT_INFRMTN_RMRKS_VC) = DBNull.Value
                End If
            End With

            UpdateTracking = objData.UpdateRow(dr, TrackingUpdateQuery, br_objTrans)
            dr = Nothing
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "GetRepairEstimateByEqpmntNo() TABLE NAME:REPAIR_ESTIMATE"

    Public Function GetRepairEstimateByEqpmntNo(ByVal bv_strEqpmnt_No As String, _
                                                ByVal bv_strGateinTransaction As String, _
                                                ByVal bv_strPageName As String, _
                                                ByRef br_objTrans As Transactions) As DataTable
        Try
            Dim hshparameters As New Hashtable
            Dim dtRepairApproval As New DataTable
            hshparameters.Add(RepairCompletionData.EQPMNT_NO, bv_strEqpmnt_No)
            hshparameters.Add(RepairCompletionData.GI_TRNSCTN_NO, bv_strGateinTransaction)
            hshparameters.Add(RepairCompletionData.ACTVTY_NM, bv_strPageName)
            objData = New DataObjects(RepairEstimateSelectQueryByEqpmntNo, hshparameters)
            objData.Fill(dtRepairApproval, br_objTrans)
            Return dtRepairApproval
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "GetCurrencyExchangeRateByDptId() "

    Public Function GetCurrencyExchangeRateByDptId(ByVal bv_i32DepotId As Int32, ByVal bv_i64CustomerId As Int64) As RepairCompletionDataSet
        Try
            ' Dim dt As New DataTable
            Dim hshparameters As New Hashtable
            hshparameters.Add(RepairCompletionData.DPT_ID, bv_i32DepotId)
            hshparameters.Add(RepairCompletionData.CSTMR_ID, bv_i64CustomerId)
            objData = New DataObjects(CustomerCurrencyExchangeSelectQuery, hshparameters)
            objData.Fill(CType(ds, DataSet), RepairCompletionData._V_REPAIR_ESTIMATE_REPORT)
            Return ds
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

    '#Region "GetRepairChargeByTransactionNo() TABLE NAME:REPAIR_CHARGE"
    '    Public Function GetRepairEstimateDetailByTransactionNo(ByVal bv_i32DepotId As Int32, _
    '                                                           ByVal bv_strGateinTransactionNo As String, _
    '                                                           ByVal bv_strRepairEstimateNo As String, _
    '                                                           ByVal bv_strEquipmentNo As String, _
    '                                                           ByVal bv_strActivityName As String, _
    '                                                           ByRef br_objTrans As Transactions) As DataTable
    '        Try
    '            Dim hshparamters As New Hashtable
    '            hshparamters.Add(RepairCompletionData.DPT_ID, bv_i32DepotId)
    '            hshparamters.Add(RepairCompletionData.GI_TRNSCTN_NO, bv_strGateinTransactionNo)
    '            hshparamters.Add(RepairCompletionData.RPR_ESTMT_NO, bv_strRepairEstimateNo)
    '            hshparamters.Add(RepairCompletionData.EQPMNT_NO, bv_strEquipmentNo)
    '            hshparamters.Add(RepairCompletionData.ACTVTY_NM, bv_strActivityName)
    '            objData = New DataObjects(GetRepairEstimateDetailByTransactinoNo, hshparamters)
    '            objData.Fill(CType(ds, DataSet), RepairCompletionData._V_REPAIR_ESTIMATE_DETAIL, br_objTrans)
    '            Return ds.Tables(RepairCompletionData._V_REPAIR_ESTIMATE_DETAIL)
    '        Catch ex As Exception
    '            Throw ex
    '        End Try
    '    End Function
    '#End Region

#Region "CreateRepairCompletionDetail() TABLE NAME:Repair_Estimate_Detail"

    Public Function CreateRepairCompletionDetail(ByVal bv_i64RepairEstimationId As Int64, _
                                                 ByVal bv_i64ItemId As Int64, _
                                                 ByVal bv_i64SubItemId As Int64, _
                                                 ByVal bv_i64DamageId As Int64, _
                                                 ByVal bv_i64RepairId As Int64, _
                                                 ByVal bv_decLaborHours As Decimal, _
                                                 ByVal bv_strDamageDescription As String, _
                                                 ByVal bv_decLaborRate As Decimal, _
                                                 ByVal bv_decLaborRateCost As Decimal, _
                                                 ByVal bv_decMaterialCost As Decimal, _
                                                 ByVal bv_decTotalCost As Decimal, _
                                                 ByVal bv_i64ResponsibilityId As Int64, _
                                                 ByRef br_objTrans As Transactions) As Long
        Try
            Dim dr As DataRow
            Dim intMax As Long
            objData = New DataObjects()
            dr = ds.Tables(RepairCompletionData._REPAIR_ESTIMATE_DETAIL).NewRow()
            With dr
                intMax = CommonUIs.GetIdentityValue(RepairCompletionData._REPAIR_ESTIMATE_DETAIL, br_objTrans)
                .Item(RepairCompletionData.RPR_ESTMT_DTL_ID) = intMax
                .Item(RepairCompletionData.RPR_ESTMT_ID) = bv_i64RepairEstimationId
                If bv_strDamageDescription <> Nothing Then
                    .Item(RepairCompletionData.DMG_RPR_DSCRPTN) = bv_strDamageDescription
                Else
                    .Item(RepairCompletionData.DMG_RPR_DSCRPTN) = DBNull.Value
                End If
                If bv_i64ItemId <> 0 Then
                    .Item(RepairCompletionData.ITM_ID) = bv_i64ItemId
                Else
                    .Item(RepairCompletionData.ITM_ID) = DBNull.Value
                End If
                If bv_i64RepairId <> 0 Then
                    .Item(RepairCompletionData.RPR_ID) = bv_i64RepairId
                Else
                    .Item(RepairCompletionData.RPR_ID) = DBNull.Value
                End If
                If bv_i64SubItemId <> 0 Then
                    .Item(RepairCompletionData.SB_ITM_ID) = bv_i64SubItemId
                Else
                    .Item(RepairCompletionData.SB_ITM_ID) = DBNull.Value
                End If
                If bv_i64DamageId <> 0 Then
                    .Item(RepairCompletionData.DMG_ID) = bv_i64DamageId
                Else
                    .Item(RepairCompletionData.DMG_ID) = DBNull.Value
                End If
                .Item(RepairCompletionData.LBR_HRS) = bv_decLaborHours
                .Item(RepairCompletionData.LBR_RT) = bv_decLaborRate
                .Item(RepairCompletionData.LBR_HR_CST_NC) = bv_decLaborRateCost
                .Item(RepairCompletionData.MTRL_CST_NC) = bv_decMaterialCost
                .Item(RepairCompletionData.TTL_CST_NC) = bv_decTotalCost
                If bv_i64ResponsibilityId <> 0 Then
                    .Item(RepairCompletionData.RSPNSBLTY_ID) = bv_i64ResponsibilityId
                Else
                    .Item(RepairCompletionData.RSPNSBLTY_ID) = DBNull.Value
                End If

                '.Item(RepairCompletionData.CHK_BT) = bv_blnCheckBit
            End With
            objData.InsertRow(dr, Repair_Estimate_DetailInsertQuery, br_objTrans)
            dr = Nothing
            CreateRepairCompletionDetail = intMax
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "GetRepairEstimateNoByRepairEstimateId() TABLE NAME:REPAIR_ESTIMATE"

    Public Function GetAttachmentByRepairEstimateId(ByVal bv_i32DepotID As Int32, ByVal bv_i64RepairEstimateId As Int64, _
                                                    ByRef br_objTransaction As Transactions) As RepairCompletionDataSet
        Try
            Dim hshparameters As New Hashtable
            hshparameters.Add(RepairCompletionData.DPT_ID, bv_i32DepotID)
            hshparameters.Add(RepairCompletionData.RPR_ESTMT_ID, bv_i64RepairEstimateId)
            objData = New DataObjects(AttachmentSelectQuery, hshparameters)
            objData.Fill(CType(ds, DataSet), RepairCompletionData._ATTACHMENT, br_objTransaction)
            Return ds
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "GetExchangeRateByCurrencyId() TABLE NAME:EXCHANGE_RATE"

    Public Function GetExchangeRateByCurrencyId(ByVal bv_i32DepotID As Int32, _
                                                ByVal bv_i64FromCurrencyId As Int64, _
                                                 ByVal bv_i64ToCurrencyId As Int64, _
                                                ByRef br_objTransaction As Transactions) As DataTable
        Try
            Dim hshparameters As New Hashtable
            Dim dtExchangeRate As New DataTable
            hshparameters.Add(RepairCompletionData.DPT_ID, bv_i32DepotID)
            hshparameters.Add(RepairCompletionData.FRM_CRRNCY_ID, bv_i64FromCurrencyId)
            hshparameters.Add(RepairCompletionData.TO_CRRNCY_ID, bv_i64ToCurrencyId)
            objData = New DataObjects(ExchangeRateSelectQuery, hshparameters)
            objData.Fill(dtExchangeRate, br_objTransaction)
            Return dtExchangeRate
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "CreateRepairEstimateDetailRet() TABLE NAME:Repair_Estimate_Detail_Ret"

    Public Function CreateRepairEstimateDetailRet(ByVal bv_i64RepairEstimateDetailId As Int64, _
                                                  ByVal bv_strTRANSMISSION_NO As String, _
                                                  ByVal bv_strTRNSXN As String, _
                                                  ByVal bv_i32REVISION As Int32, _
                                                  ByVal bv_datESTIM_DATE As DateTime, _
                                                  ByVal bv_strUNIT_NBR As String, _
                                                  ByVal bv_strLABOR_RATE As String, _
                                                  ByVal bv_strREPAIR As String, _
                                                  ByVal bv_i32Repeats As Int32, _
                                                  ByVal bv_strDAMAGE As String, _
                                                  ByVal bv_dblHOURS As Double, _
                                                  ByVal bv_dblMAT_COST As Double, _
                                                  ByVal bv_strDMGREP_DESC As String, _
                                                  ByVal bv_strSTATUS As String, _
                                                  ByVal bv_i64SNo As Int64, _
                                                  ByVal bv_i32LIVE_STATUS As Int32, _
                                                  ByRef br_objtrans As Transactions) As Long
        Try
            Dim dr As DataRow
            Dim intMax As Long
            objData = New DataObjects()
            dr = ds.Tables(RepairCompletionData._REPAIR_ESTIMATE_DETAIL_RET).NewRow()
            With dr
                intMax = CommonUIs.GetIdentityValue(RepairCompletionData._REPAIR_ESTIMATE_DETAIL_RET, br_objtrans)
                .Item(RepairCompletionData.WD_SNO) = intMax
                .Item(RepairCompletionData.WD_RPR_ESTMT_DTL_ID) = bv_i64RepairEstimateDetailId
                .Item(RepairCompletionData.WD_TRANSMISSION_NO) = bv_strTRANSMISSION_NO
                .Item(RepairCompletionData.WD_TRNSXN) = bv_strTRNSXN
                .Item(RepairCompletionData.WD_REVISION) = bv_i32REVISION
                .Item(RepairCompletionData.WD_ESTIM_DATE) = bv_datESTIM_DATE
                .Item(RepairCompletionData.WD_UNIT_NBR) = bv_strUNIT_NBR
                .Item(RepairCompletionData.WD_LABOR_RATE) = bv_strLABOR_RATE
                .Item(RepairCompletionData.WD_REPAIR) = bv_strREPAIR
                .Item(RepairCompletionData.WD_REPEATS) = bv_i32Repeats
                .Item(RepairCompletionData.WD_DAMAGE) = bv_strDAMAGE
                .Item(RepairCompletionData.WD_HOURS) = bv_dblHOURS
                .Item(RepairCompletionData.WD_MAT_COST) = bv_dblMAT_COST
                .Item(RepairCompletionData.WD_DMGREP_DESC) = bv_strDMGREP_DESC
                .Item(RepairCompletionData.WD_STATUS) = bv_strSTATUS
                .Item(RepairCompletionData.WM_SNO) = bv_i64SNo
                If bv_i32LIVE_STATUS <> 0 Then
                    .Item(RepairCompletionData.WD_LIVE_STATUS) = bv_i32LIVE_STATUS
                Else
                    .Item(RepairCompletionData.WD_LIVE_STATUS) = DBNull.Value
                End If
            End With
            objData.InsertRow(dr, Repair_Estimate_Detail_RetInsertQuery, br_objtrans)
            dr = Nothing
            CreateRepairEstimateDetailRet = intMax
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region


#Region "CreateGateinRet() TABLE NAME:Gatein_Ret"

    Public Function CreateGateinRet(ByVal bv_lngCreated As Int64, ByVal bv_strGI_TRANSMISSION_NO As String, _
        ByVal bv_strGI_COMPLETE As String, _
        ByVal bv_strGI_SENT_EIR As String, _
        ByVal bv_strGI_SENT_DATE As String, _
        ByVal bv_strGI_REC_EIR As String, _
        ByVal bv_strGI_REC_DATE As String, _
        ByVal bv_strGI_REC_ADDR As String, _
        ByVal bv_strGI_REC_TYPE As String, _
        ByVal bv_strGI_EXPORTED As String, _
        ByVal bv_strGI_EXPOR_DATE As String, _
        ByVal bv_strGI_IMPORTED As String, _
        ByVal bv_strGI_IMPOR_DATE As String, _
        ByVal bv_strGI_TRNSXN As String, _
        ByVal bv_strGI_ADVICE As String, _
        ByVal bv_strGI_UNIT_NBR As String, _
        ByVal bv_strGI_EQUIP_TYPE As String, _
        ByVal bv_strGI_EQUIP_DESC As String, _
        ByVal bv_strGI_EQUIP_CODE As String, _
        ByVal bv_strGI_CONDITION As String, _
        ByVal bv_strGI_COMP_ID_A As String, _
        ByVal bv_strGI_COMP_ID_N As String, _
        ByVal bv_strGI_COMP_ID_C As String, _
        ByVal bv_strGI_COMP_TYPE As String, _
        ByVal bv_strGI_COMP_DESC As String, _
        ByVal bv_strGI_COMP_CODE As String, _
        ByVal bv_datGI_EIR_DATE As DateTime, _
        ByVal bv_strGI_EIR_TIME As String, _
        ByVal bv_strGI_REFERENCE As String, _
        ByVal bv_strGI_MANU_DATE As String, _
        ByVal bv_strGI_MATERIAL As String, _
        ByVal bv_strGI_WEIGHT As String, _
        ByVal bv_strGI_MEASURE As String, _
        ByVal bv_strGI_UNITS As String, _
        ByVal bv_strGI_CSC_REEXAM As String, _
        ByVal bv_strGI_COUNTRY As String, _
        ByVal bv_strGI_LIC_STATE As String, _
        ByVal bv_strGI_LIC_REG As String, _
        ByVal bv_strGI_LIC_EXPIRE As String, _
        ByVal bv_strGI_LSR_OWNER As String, _
        ByVal bv_strGI_SEND_EDI_1 As String, _
        ByVal bv_strGI_SSL_LSE As String, _
        ByVal bv_strGI_SEND_EDI_2 As String, _
        ByVal bv_strGI_HAULIER As String, _
        ByVal bv_strGI_SEND_EDI_3 As String, _
        ByVal bv_strGI_DPT_TRM As String, _
        ByVal bv_strGI_SEND_EDI_4 As String, _
        ByVal bv_strGI_OTHERS_1 As String, _
        ByVal bv_strGI_OTHERS_2 As String, _
        ByVal bv_strGI_OTHERS_3 As String, _
        ByVal bv_strGI_OTHERS_4 As String, _
        ByVal bv_strGI_NOTE_1 As String, _
        ByVal bv_strGI_NOTE_2 As String, _
        ByVal bv_strGI_LOAD As String, _
        ByVal bv_strGI_FHWA As String, _
        ByVal bv_strGI_LAST_OH_LOC As String, _
        ByVal bv_strGI_LAST_OH_DATE As String, _
        ByVal bv_strGI_SENDER As String, _
        ByVal bv_strGI_ATTENTION As String, _
        ByVal bv_strGI_REVISION As String, _
        ByVal bv_strGI_SEND_EDI_5 As String, _
        ByVal bv_strGI_SEND_EDI_6 As String, _
        ByVal bv_strGI_SEND_EDI_7 As String, _
        ByVal bv_strGI_SEND_EDI_8 As String, _
        ByVal bv_strGI_SEAL_PARTY_1 As String, _
        ByVal bv_strGI_SEAL_NUMBER_1 As String, _
        ByVal bv_strGI_SEAL_PARTY_2 As String, _
        ByVal bv_strGI_SEAL_NUMBER_2 As String, _
        ByVal bv_strGI_SEAL_PARTY_3 As String, _
        ByVal bv_strGI_SEAL_NUMBER_3 As String, _
        ByVal bv_strGI_SEAL_PARTY_4 As String, _
        ByVal bv_strGI_SEAL_NUMBER_4 As String, _
        ByVal bv_strGI_PORT_FUNC_CODE As String, _
        ByVal bv_strGI_PORT_NAME As String, _
        ByVal bv_strGI_VESSEL_NAME As String, _
        ByVal bv_strGI_VOYAGE_NUM As String, _
        ByVal bv_strGI_HAZ_MAT_CODE As String, _
        ByVal bv_strGI_HAZ_MAT_DESC As String, _
        ByVal bv_strGI_NOTE_3 As String, _
        ByVal bv_strGI_NOTE_4 As String, _
        ByVal bv_strGI_NOTE_5 As String, _
        ByVal bv_strGI_COMP_ID_A_2 As String, _
        ByVal bv_strGI_COMP_ID_N_2 As String, _
        ByVal bv_strGI_COMP_ID_C_2 As String, _
        ByVal bv_strGI_COMP_TYPE_2 As String, _
        ByVal bv_strGI_COMP_CODE_2 As String, _
        ByVal bv_strGI_COMP_DESC_2 As String, _
        ByVal bv_strGI_SHIPPER As String, _
        ByVal bv_strGI_DRAY_ORDER As String, _
        ByVal bv_strGI_RAIL_ID As String, _
        ByVal bv_strGI_RAIL_RAMP As String, _
        ByVal bv_strGI_VESSEL_CODE As String, _
        ByVal bv_strGI_WGHT_CERT_1 As String, _
        ByVal bv_strGI_WGHT_CERT_2 As String, _
        ByVal bv_strGI_WGHT_CERT_3 As String, _
        ByVal bv_strGI_SEA_RAIL As String, _
        ByVal bv_strGI_LOC_IDENT As String, _
        ByVal bv_strGI_PORT_LOC_QUAL As String, _
        ByVal bv_strGI_STATUS As String, _
        ByVal bv_datGI_PICK_DATE As DateTime, _
        ByVal bv_strGI_ESTSTATUS As String, _
        ByVal bv_strGI_ERRSTATUS As String, _
        ByVal bv_strGI_USERNAME As String, _
        ByVal bv_i32GI_LIVE_STATUS As Int32, _
        ByVal bv_blnGI_ISACTIVE As Boolean, _
        ByVal bv_strGI_YARD_LOC As String, _
        ByVal bv_strGI_MODE_PAYMENT As String, _
        ByVal bv_strGI_BILLING_TYPE As String, _
        ByVal bv_blnGI_RESERVE_BKG As Boolean, _
        ByVal bv_strGI_RCESTSTATUS As String, _
        ByVal bv_i32OP_SNO As Int32, _
        ByVal bv_blnOP_STATUS As Boolean, ByRef br_objTrans As Transactions) As Long
        Try
            Dim dr As DataRow
            Dim intMax As Long
            objData = New DataObjects()
            dr = ds.Tables(RepairCompletionData._GATEIN_RET).NewRow()
            With dr
                intMax = CommonUIs.GetIdentityValue(RepairCompletionData._GATEIN_RET, br_objTrans)
                .Item(RepairCompletionData.GI_SNO) = bv_lngCreated
                .Item(RepairCompletionData.GI_TRANSMISSION_NO) = bv_strGI_TRANSMISSION_NO
                If bv_strGI_COMPLETE <> Nothing Then
                    .Item(RepairCompletionData.GI_COMPLETE) = bv_strGI_COMPLETE
                Else
                    .Item(RepairCompletionData.GI_COMPLETE) = DBNull.Value
                End If
                If bv_strGI_SENT_EIR <> Nothing Then
                    .Item(RepairCompletionData.GI_SENT_EIR) = bv_strGI_SENT_EIR
                Else
                    .Item(RepairCompletionData.GI_SENT_EIR) = DBNull.Value
                End If
                .Item(RepairCompletionData.GI_SENT_DATE) = bv_strGI_SENT_DATE
                If bv_strGI_REC_EIR <> Nothing Then
                    .Item(RepairCompletionData.GI_REC_EIR) = bv_strGI_REC_EIR
                Else
                    .Item(RepairCompletionData.GI_REC_EIR) = DBNull.Value
                End If
                If bv_strGI_REC_DATE <> Nothing Then
                    .Item(RepairCompletionData.GI_REC_DATE) = bv_strGI_REC_DATE
                Else
                    .Item(RepairCompletionData.GI_REC_DATE) = DBNull.Value
                End If
                If bv_strGI_REC_ADDR <> Nothing Then
                    .Item(RepairCompletionData.GI_REC_ADDR) = bv_strGI_REC_ADDR
                Else
                    .Item(RepairCompletionData.GI_REC_ADDR) = DBNull.Value
                End If
                If bv_strGI_REC_TYPE <> Nothing Then
                    .Item(RepairCompletionData.GI_REC_TYPE) = bv_strGI_REC_TYPE
                Else
                    .Item(RepairCompletionData.GI_REC_TYPE) = DBNull.Value
                End If
                If bv_strGI_EXPORTED <> Nothing Then
                    .Item(RepairCompletionData.GI_EXPORTED) = bv_strGI_EXPORTED
                Else
                    .Item(RepairCompletionData.GI_EXPORTED) = DBNull.Value
                End If
                If bv_strGI_EXPOR_DATE <> Nothing Then
                    .Item(RepairCompletionData.GI_EXPOR_DATE) = bv_strGI_EXPOR_DATE
                Else
                    .Item(RepairCompletionData.GI_EXPOR_DATE) = DBNull.Value
                End If
                If bv_strGI_IMPORTED <> Nothing Then
                    .Item(RepairCompletionData.GI_IMPORTED) = bv_strGI_IMPORTED
                Else
                    .Item(RepairCompletionData.GI_IMPORTED) = DBNull.Value
                End If
                If bv_strGI_IMPOR_DATE <> Nothing Then
                    .Item(RepairCompletionData.GI_IMPOR_DATE) = bv_strGI_IMPOR_DATE
                Else
                    .Item(RepairCompletionData.GI_IMPOR_DATE) = DBNull.Value
                End If
                .Item(RepairCompletionData.GI_TRNSXN) = bv_strGI_TRNSXN
                .Item(RepairCompletionData.GI_ADVICE) = bv_strGI_ADVICE
                .Item(RepairCompletionData.GI_UNIT_NBR) = bv_strGI_UNIT_NBR
                .Item(RepairCompletionData.GI_EQUIP_TYPE) = bv_strGI_EQUIP_TYPE
                If bv_strGI_EQUIP_DESC <> Nothing Then
                    .Item(RepairCompletionData.GI_EQUIP_DESC) = bv_strGI_EQUIP_DESC
                Else
                    .Item(RepairCompletionData.GI_EQUIP_DESC) = DBNull.Value
                End If
                .Item(RepairCompletionData.GI_EQUIP_CODE) = bv_strGI_EQUIP_CODE
                If bv_strGI_CONDITION <> Nothing Then
                    .Item(RepairCompletionData.GI_CONDITION) = bv_strGI_CONDITION
                Else
                    .Item(RepairCompletionData.GI_CONDITION) = DBNull.Value
                End If
                If bv_strGI_COMP_ID_A <> Nothing Then
                    .Item(RepairCompletionData.GI_COMP_ID_A) = bv_strGI_COMP_ID_A
                Else
                    .Item(RepairCompletionData.GI_COMP_ID_A) = DBNull.Value
                End If
                If bv_strGI_COMP_ID_N <> Nothing Then
                    .Item(RepairCompletionData.GI_COMP_ID_N) = bv_strGI_COMP_ID_N
                Else
                    .Item(RepairCompletionData.GI_COMP_ID_N) = DBNull.Value
                End If
                If bv_strGI_COMP_ID_C <> Nothing Then
                    .Item(RepairCompletionData.GI_COMP_ID_C) = bv_strGI_COMP_ID_C
                Else
                    .Item(RepairCompletionData.GI_COMP_ID_C) = DBNull.Value
                End If
                If bv_strGI_COMP_TYPE <> Nothing Then
                    .Item(RepairCompletionData.GI_COMP_TYPE) = bv_strGI_COMP_TYPE
                Else
                    .Item(RepairCompletionData.GI_COMP_TYPE) = DBNull.Value
                End If
                If bv_strGI_COMP_DESC <> Nothing Then
                    .Item(RepairCompletionData.GI_COMP_DESC) = bv_strGI_COMP_DESC
                Else
                    .Item(RepairCompletionData.GI_COMP_DESC) = DBNull.Value
                End If
                If bv_strGI_COMP_CODE <> Nothing Then
                    .Item(RepairCompletionData.GI_COMP_CODE) = bv_strGI_COMP_CODE
                Else
                    .Item(RepairCompletionData.GI_COMP_CODE) = DBNull.Value
                End If
                .Item(RepairCompletionData.GI_EIR_DATE) = bv_datGI_EIR_DATE
                If bv_strGI_EIR_TIME <> Nothing Then
                    .Item(RepairCompletionData.GI_EIR_TIME) = bv_strGI_EIR_TIME
                Else
                    .Item(RepairCompletionData.GI_EIR_TIME) = DBNull.Value
                End If
                If bv_strGI_REFERENCE <> Nothing Then
                    .Item(RepairCompletionData.GI_REFERENCE) = bv_strGI_REFERENCE
                Else
                    .Item(RepairCompletionData.GI_REFERENCE) = DBNull.Value
                End If
                If bv_strGI_MANU_DATE <> Nothing Then
                    .Item(RepairCompletionData.GI_MANU_DATE) = bv_strGI_MANU_DATE
                Else
                    .Item(RepairCompletionData.GI_MANU_DATE) = DBNull.Value
                End If
                If bv_strGI_MATERIAL <> Nothing Then
                    .Item(RepairCompletionData.GI_MATERIAL) = bv_strGI_MATERIAL
                Else
                    .Item(RepairCompletionData.GI_MATERIAL) = DBNull.Value
                End If
                If bv_strGI_WEIGHT <> Nothing Then
                    .Item(RepairCompletionData.GI_WEIGHT) = bv_strGI_WEIGHT
                Else
                    .Item(RepairCompletionData.GI_WEIGHT) = DBNull.Value
                End If
                If bv_strGI_MEASURE <> Nothing Then
                    .Item(RepairCompletionData.GI_MEASURE) = bv_strGI_MEASURE
                Else
                    .Item(RepairCompletionData.GI_MEASURE) = DBNull.Value
                End If
                If bv_strGI_UNITS <> Nothing Then
                    .Item(RepairCompletionData.GI_UNITS) = bv_strGI_UNITS
                Else
                    .Item(RepairCompletionData.GI_UNITS) = DBNull.Value
                End If
                If bv_strGI_CSC_REEXAM <> Nothing Then
                    .Item(RepairCompletionData.GI_CSC_REEXAM) = bv_strGI_CSC_REEXAM
                Else
                    .Item(RepairCompletionData.GI_CSC_REEXAM) = DBNull.Value
                End If
                If bv_strGI_COUNTRY <> Nothing Then
                    .Item(RepairCompletionData.GI_COUNTRY) = bv_strGI_COUNTRY
                Else
                    .Item(RepairCompletionData.GI_COUNTRY) = DBNull.Value
                End If
                If bv_strGI_LIC_STATE <> Nothing Then
                    .Item(RepairCompletionData.GI_LIC_STATE) = bv_strGI_LIC_STATE
                Else
                    .Item(RepairCompletionData.GI_LIC_STATE) = DBNull.Value
                End If
                If bv_strGI_LIC_REG <> Nothing Then
                    .Item(RepairCompletionData.GI_LIC_REG) = bv_strGI_LIC_REG
                Else
                    .Item(RepairCompletionData.GI_LIC_REG) = DBNull.Value
                End If
                If bv_strGI_LIC_EXPIRE <> Nothing Then
                    .Item(RepairCompletionData.GI_LIC_EXPIRE) = bv_strGI_LIC_EXPIRE
                Else
                    .Item(RepairCompletionData.GI_LIC_EXPIRE) = DBNull.Value
                End If
                .Item(RepairCompletionData.GI_LSR_OWNER) = bv_strGI_LSR_OWNER
                If bv_strGI_SEND_EDI_1 <> Nothing Then
                    .Item(RepairCompletionData.GI_SEND_EDI_1) = bv_strGI_SEND_EDI_1
                Else
                    .Item(RepairCompletionData.GI_SEND_EDI_1) = DBNull.Value
                End If
                .Item(RepairCompletionData.GI_SSL_LSE) = bv_strGI_SSL_LSE
                If bv_strGI_SEND_EDI_2 <> Nothing Then
                    .Item(RepairCompletionData.GI_SEND_EDI_2) = bv_strGI_SEND_EDI_2
                Else
                    .Item(RepairCompletionData.GI_SEND_EDI_2) = DBNull.Value
                End If
                If bv_strGI_HAULIER <> Nothing Then
                    .Item(RepairCompletionData.GI_HAULIER) = bv_strGI_HAULIER
                Else
                    .Item(RepairCompletionData.GI_HAULIER) = DBNull.Value
                End If
                If bv_strGI_SEND_EDI_3 <> Nothing Then
                    .Item(RepairCompletionData.GI_SEND_EDI_3) = bv_strGI_SEND_EDI_3
                Else
                    .Item(RepairCompletionData.GI_SEND_EDI_3) = DBNull.Value
                End If
                .Item(RepairCompletionData.GI_DPT_TRM) = bv_strGI_DPT_TRM
                If bv_strGI_SEND_EDI_4 <> Nothing Then
                    .Item(RepairCompletionData.GI_SEND_EDI_4) = bv_strGI_SEND_EDI_4
                Else
                    .Item(RepairCompletionData.GI_SEND_EDI_4) = DBNull.Value
                End If
                If bv_strGI_OTHERS_1 <> Nothing Then
                    .Item(RepairCompletionData.GI_OTHERS_1) = bv_strGI_OTHERS_1
                Else
                    .Item(RepairCompletionData.GI_OTHERS_1) = DBNull.Value
                End If
                If bv_strGI_OTHERS_2 <> Nothing Then
                    .Item(RepairCompletionData.GI_OTHERS_2) = bv_strGI_OTHERS_2
                Else
                    .Item(RepairCompletionData.GI_OTHERS_2) = DBNull.Value
                End If
                If bv_strGI_OTHERS_3 <> Nothing Then
                    .Item(RepairCompletionData.GI_OTHERS_3) = bv_strGI_OTHERS_3
                Else
                    .Item(RepairCompletionData.GI_OTHERS_3) = DBNull.Value
                End If
                If bv_strGI_OTHERS_4 <> Nothing Then
                    .Item(RepairCompletionData.GI_OTHERS_4) = bv_strGI_OTHERS_4
                Else
                    .Item(RepairCompletionData.GI_OTHERS_4) = DBNull.Value
                End If
                If bv_strGI_NOTE_1 <> Nothing Then
                    .Item(RepairCompletionData.GI_NOTE_1) = bv_strGI_NOTE_1
                Else
                    .Item(RepairCompletionData.GI_NOTE_1) = DBNull.Value
                End If
                If bv_strGI_NOTE_2 <> Nothing Then
                    .Item(RepairCompletionData.GI_NOTE_2) = bv_strGI_NOTE_2
                Else
                    .Item(RepairCompletionData.GI_NOTE_2) = DBNull.Value
                End If
                If bv_strGI_LOAD <> Nothing Then
                    .Item(RepairCompletionData.GI_LOAD) = bv_strGI_LOAD
                Else
                    .Item(RepairCompletionData.GI_LOAD) = DBNull.Value
                End If
                If bv_strGI_FHWA <> Nothing Then
                    .Item(RepairCompletionData.GI_FHWA) = bv_strGI_FHWA
                Else
                    .Item(RepairCompletionData.GI_FHWA) = DBNull.Value
                End If
                If bv_strGI_LAST_OH_LOC <> Nothing Then
                    .Item(RepairCompletionData.GI_LAST_OH_LOC) = bv_strGI_LAST_OH_LOC
                Else
                    .Item(RepairCompletionData.GI_LAST_OH_LOC) = DBNull.Value
                End If
                If bv_strGI_LAST_OH_DATE <> Nothing And bv_strGI_LAST_OH_DATE <> sqlDtnull Then
                    .Item(RepairCompletionData.GI_LAST_OH_DATE) = bv_strGI_LAST_OH_DATE
                Else
                    .Item(RepairCompletionData.GI_LAST_OH_DATE) = DBNull.Value
                End If
                If bv_strGI_SENDER <> Nothing Then
                    .Item(RepairCompletionData.GI_SENDER) = bv_strGI_SENDER
                Else
                    .Item(RepairCompletionData.GI_SENDER) = DBNull.Value
                End If
                If bv_strGI_ATTENTION <> Nothing Then
                    .Item(RepairCompletionData.GI_ATTENTION) = bv_strGI_ATTENTION
                Else
                    .Item(RepairCompletionData.GI_ATTENTION) = DBNull.Value
                End If
                If bv_strGI_REVISION <> Nothing Then
                    .Item(RepairCompletionData.GI_REVISION) = bv_strGI_REVISION
                Else
                    .Item(RepairCompletionData.GI_REVISION) = DBNull.Value
                End If
                If bv_strGI_SEND_EDI_5 <> Nothing Then
                    .Item(RepairCompletionData.GI_SEND_EDI_5) = bv_strGI_SEND_EDI_5
                Else
                    .Item(RepairCompletionData.GI_SEND_EDI_5) = DBNull.Value
                End If
                If bv_strGI_SEND_EDI_6 <> Nothing Then
                    .Item(RepairCompletionData.GI_SEND_EDI_6) = bv_strGI_SEND_EDI_6
                Else
                    .Item(RepairCompletionData.GI_SEND_EDI_6) = DBNull.Value
                End If
                If bv_strGI_SEND_EDI_7 <> Nothing Then
                    .Item(RepairCompletionData.GI_SEND_EDI_7) = bv_strGI_SEND_EDI_7
                Else
                    .Item(RepairCompletionData.GI_SEND_EDI_7) = DBNull.Value
                End If
                If bv_strGI_SEND_EDI_8 <> Nothing Then
                    .Item(RepairCompletionData.GI_SEND_EDI_8) = bv_strGI_SEND_EDI_8
                Else
                    .Item(RepairCompletionData.GI_SEND_EDI_8) = DBNull.Value
                End If
                If bv_strGI_SEAL_PARTY_1 <> Nothing Then
                    .Item(RepairCompletionData.GI_SEAL_PARTY_1) = bv_strGI_SEAL_PARTY_1
                Else
                    .Item(RepairCompletionData.GI_SEAL_PARTY_1) = DBNull.Value
                End If
                If bv_strGI_SEAL_NUMBER_1 <> Nothing Then
                    .Item(RepairCompletionData.GI_SEAL_NUMBER_1) = bv_strGI_SEAL_NUMBER_1
                Else
                    .Item(RepairCompletionData.GI_SEAL_NUMBER_1) = DBNull.Value
                End If
                If bv_strGI_SEAL_PARTY_2 <> Nothing Then
                    .Item(RepairCompletionData.GI_SEAL_PARTY_2) = bv_strGI_SEAL_PARTY_2
                Else
                    .Item(RepairCompletionData.GI_SEAL_PARTY_2) = DBNull.Value
                End If
                If bv_strGI_SEAL_NUMBER_2 <> Nothing Then
                    .Item(RepairCompletionData.GI_SEAL_NUMBER_2) = bv_strGI_SEAL_NUMBER_2
                Else
                    .Item(RepairCompletionData.GI_SEAL_NUMBER_2) = DBNull.Value
                End If
                If bv_strGI_SEAL_PARTY_3 <> Nothing Then
                    .Item(RepairCompletionData.GI_SEAL_PARTY_3) = bv_strGI_SEAL_PARTY_3
                Else
                    .Item(RepairCompletionData.GI_SEAL_PARTY_3) = DBNull.Value
                End If
                If bv_strGI_SEAL_NUMBER_3 <> Nothing Then
                    .Item(RepairCompletionData.GI_SEAL_NUMBER_3) = bv_strGI_SEAL_NUMBER_3
                Else
                    .Item(RepairCompletionData.GI_SEAL_NUMBER_3) = DBNull.Value
                End If
                If bv_strGI_SEAL_PARTY_4 <> Nothing Then
                    .Item(RepairCompletionData.GI_SEAL_PARTY_4) = bv_strGI_SEAL_PARTY_4
                Else
                    .Item(RepairCompletionData.GI_SEAL_PARTY_4) = DBNull.Value
                End If
                If bv_strGI_SEAL_NUMBER_4 <> Nothing Then
                    .Item(RepairCompletionData.GI_SEAL_NUMBER_4) = bv_strGI_SEAL_NUMBER_4
                Else
                    .Item(RepairCompletionData.GI_SEAL_NUMBER_4) = DBNull.Value
                End If
                If bv_strGI_PORT_FUNC_CODE <> Nothing Then
                    .Item(RepairCompletionData.GI_PORT_FUNC_CODE) = bv_strGI_PORT_FUNC_CODE
                Else
                    .Item(RepairCompletionData.GI_PORT_FUNC_CODE) = DBNull.Value
                End If
                If bv_strGI_PORT_NAME <> Nothing Then
                    .Item(RepairCompletionData.GI_PORT_NAME) = bv_strGI_PORT_NAME
                Else
                    .Item(RepairCompletionData.GI_PORT_NAME) = DBNull.Value
                End If
                If bv_strGI_VESSEL_NAME <> Nothing Then
                    .Item(RepairCompletionData.GI_VESSEL_NAME) = bv_strGI_VESSEL_NAME
                Else
                    .Item(RepairCompletionData.GI_VESSEL_NAME) = DBNull.Value
                End If
                If bv_strGI_VOYAGE_NUM <> Nothing Then
                    .Item(RepairCompletionData.GI_VOYAGE_NUM) = bv_strGI_VOYAGE_NUM
                Else
                    .Item(RepairCompletionData.GI_VOYAGE_NUM) = DBNull.Value
                End If
                If bv_strGI_HAZ_MAT_CODE <> Nothing Then
                    .Item(RepairCompletionData.GI_HAZ_MAT_CODE) = bv_strGI_HAZ_MAT_CODE
                Else
                    .Item(RepairCompletionData.GI_HAZ_MAT_CODE) = DBNull.Value
                End If
                If bv_strGI_HAZ_MAT_DESC <> Nothing Then
                    .Item(RepairCompletionData.GI_HAZ_MAT_DESC) = bv_strGI_HAZ_MAT_DESC
                Else
                    .Item(RepairCompletionData.GI_HAZ_MAT_DESC) = DBNull.Value
                End If
                If bv_strGI_NOTE_3 <> Nothing Then
                    .Item(RepairCompletionData.GI_NOTE_3) = bv_strGI_NOTE_3
                Else
                    .Item(RepairCompletionData.GI_NOTE_3) = DBNull.Value
                End If
                If bv_strGI_NOTE_4 <> Nothing Then
                    .Item(RepairCompletionData.GI_NOTE_4) = bv_strGI_NOTE_4
                Else
                    .Item(RepairCompletionData.GI_NOTE_4) = DBNull.Value
                End If
                If bv_strGI_NOTE_5 <> Nothing Then
                    .Item(RepairCompletionData.GI_NOTE_5) = bv_strGI_NOTE_5
                Else
                    .Item(RepairCompletionData.GI_NOTE_5) = DBNull.Value
                End If
                If bv_strGI_COMP_ID_A_2 <> Nothing Then
                    .Item(RepairCompletionData.GI_COMP_ID_A_2) = bv_strGI_COMP_ID_A_2
                Else
                    .Item(RepairCompletionData.GI_COMP_ID_A_2) = DBNull.Value
                End If
                If bv_strGI_COMP_ID_N_2 <> Nothing Then
                    .Item(RepairCompletionData.GI_COMP_ID_N_2) = bv_strGI_COMP_ID_N_2
                Else
                    .Item(RepairCompletionData.GI_COMP_ID_N_2) = DBNull.Value
                End If
                If bv_strGI_COMP_ID_C_2 <> Nothing Then
                    .Item(RepairCompletionData.GI_COMP_ID_C_2) = bv_strGI_COMP_ID_C_2
                Else
                    .Item(RepairCompletionData.GI_COMP_ID_C_2) = DBNull.Value
                End If
                If bv_strGI_COMP_TYPE_2 <> Nothing Then
                    .Item(RepairCompletionData.GI_COMP_TYPE_2) = bv_strGI_COMP_TYPE_2
                Else
                    .Item(RepairCompletionData.GI_COMP_TYPE_2) = DBNull.Value
                End If
                If bv_strGI_COMP_CODE_2 <> Nothing Then
                    .Item(RepairCompletionData.GI_COMP_CODE_2) = bv_strGI_COMP_CODE_2
                Else
                    .Item(RepairCompletionData.GI_COMP_CODE_2) = DBNull.Value
                End If
                If bv_strGI_COMP_DESC_2 <> Nothing Then
                    .Item(RepairCompletionData.GI_COMP_DESC_2) = bv_strGI_COMP_DESC_2
                Else
                    .Item(RepairCompletionData.GI_COMP_DESC_2) = DBNull.Value
                End If
                If bv_strGI_SHIPPER <> Nothing Then
                    .Item(RepairCompletionData.GI_SHIPPER) = bv_strGI_SHIPPER
                Else
                    .Item(RepairCompletionData.GI_SHIPPER) = DBNull.Value
                End If
                If bv_strGI_DRAY_ORDER <> Nothing Then
                    .Item(RepairCompletionData.GI_DRAY_ORDER) = bv_strGI_DRAY_ORDER
                Else
                    .Item(RepairCompletionData.GI_DRAY_ORDER) = DBNull.Value
                End If
                If bv_strGI_RAIL_ID <> Nothing Then
                    .Item(RepairCompletionData.GI_RAIL_ID) = bv_strGI_RAIL_ID
                Else
                    .Item(RepairCompletionData.GI_RAIL_ID) = DBNull.Value
                End If
                If bv_strGI_RAIL_RAMP <> Nothing Then
                    .Item(RepairCompletionData.GI_RAIL_RAMP) = bv_strGI_RAIL_RAMP
                Else
                    .Item(RepairCompletionData.GI_RAIL_RAMP) = DBNull.Value
                End If
                If bv_strGI_VESSEL_CODE <> Nothing Then
                    .Item(RepairCompletionData.GI_VESSEL_CODE) = bv_strGI_VESSEL_CODE
                Else
                    .Item(RepairCompletionData.GI_VESSEL_CODE) = DBNull.Value
                End If
                If bv_strGI_WGHT_CERT_1 <> Nothing Then
                    .Item(RepairCompletionData.GI_WGHT_CERT_1) = bv_strGI_WGHT_CERT_1
                Else
                    .Item(RepairCompletionData.GI_WGHT_CERT_1) = DBNull.Value
                End If
                If bv_strGI_WGHT_CERT_2 <> Nothing Then
                    .Item(RepairCompletionData.GI_WGHT_CERT_2) = bv_strGI_WGHT_CERT_2
                Else
                    .Item(RepairCompletionData.GI_WGHT_CERT_2) = DBNull.Value
                End If
                If bv_strGI_WGHT_CERT_3 <> Nothing Then
                    .Item(RepairCompletionData.GI_WGHT_CERT_3) = bv_strGI_WGHT_CERT_3
                Else
                    .Item(RepairCompletionData.GI_WGHT_CERT_3) = DBNull.Value
                End If
                If bv_strGI_SEA_RAIL <> Nothing Then
                    .Item(RepairCompletionData.GI_SEA_RAIL) = bv_strGI_SEA_RAIL
                Else
                    .Item(RepairCompletionData.GI_SEA_RAIL) = DBNull.Value
                End If
                If bv_strGI_LOC_IDENT <> Nothing Then
                    .Item(RepairCompletionData.GI_LOC_IDENT) = bv_strGI_LOC_IDENT
                Else
                    .Item(RepairCompletionData.GI_LOC_IDENT) = DBNull.Value
                End If
                If bv_strGI_PORT_LOC_QUAL <> Nothing Then
                    .Item(RepairCompletionData.GI_PORT_LOC_QUAL) = bv_strGI_PORT_LOC_QUAL
                Else
                    .Item(RepairCompletionData.GI_PORT_LOC_QUAL) = DBNull.Value
                End If
                If bv_strGI_STATUS <> Nothing Then
                    .Item(RepairCompletionData.GI_STATUS) = bv_strGI_STATUS
                Else
                    .Item(RepairCompletionData.GI_STATUS) = DBNull.Value
                End If
                If bv_datGI_PICK_DATE <> Nothing And bv_datGI_PICK_DATE <> sqlDbnull Then
                    .Item(RepairCompletionData.GI_PICK_DATE) = bv_datGI_PICK_DATE
                Else
                    .Item(RepairCompletionData.GI_PICK_DATE) = DBNull.Value
                End If
                If bv_strGI_ESTSTATUS <> Nothing Then
                    .Item(RepairCompletionData.GI_ESTSTATUS) = bv_strGI_ESTSTATUS
                Else
                    .Item(RepairCompletionData.GI_ESTSTATUS) = DBNull.Value
                End If
                If bv_strGI_ERRSTATUS <> Nothing Then
                    .Item(RepairCompletionData.GI_ERRSTATUS) = bv_strGI_ERRSTATUS
                Else
                    .Item(RepairCompletionData.GI_ERRSTATUS) = DBNull.Value
                End If
                If bv_strGI_USERNAME <> Nothing Then
                    .Item(RepairCompletionData.GI_USERNAME) = bv_strGI_USERNAME
                Else
                    .Item(RepairCompletionData.GI_USERNAME) = DBNull.Value
                End If
                If bv_i32GI_LIVE_STATUS <> 0 Then
                    .Item(RepairCompletionData.GI_LIVE_STATUS) = bv_i32GI_LIVE_STATUS
                Else
                    .Item(RepairCompletionData.GI_LIVE_STATUS) = DBNull.Value
                End If
                If bv_blnGI_ISACTIVE <> Nothing Then
                    .Item(RepairCompletionData.GI_ISACTIVE) = bv_blnGI_ISACTIVE
                Else
                    .Item(RepairCompletionData.GI_ISACTIVE) = DBNull.Value
                End If
                If bv_strGI_YARD_LOC <> Nothing Then
                    .Item(RepairCompletionData.GI_YARD_LOC) = bv_strGI_YARD_LOC
                Else
                    .Item(RepairCompletionData.GI_YARD_LOC) = DBNull.Value
                End If
                If bv_strGI_MODE_PAYMENT <> Nothing Then
                    .Item(RepairCompletionData.GI_MODE_PAYMENT) = bv_strGI_MODE_PAYMENT
                Else
                    .Item(RepairCompletionData.GI_MODE_PAYMENT) = DBNull.Value
                End If
                If bv_strGI_BILLING_TYPE <> Nothing Then
                    .Item(RepairCompletionData.GI_BILLING_TYPE) = bv_strGI_BILLING_TYPE
                Else
                    .Item(RepairCompletionData.GI_BILLING_TYPE) = DBNull.Value
                End If
                If bv_blnGI_RESERVE_BKG <> Nothing Then
                    .Item(RepairCompletionData.GI_RESERVE_BKG) = bv_blnGI_RESERVE_BKG
                Else
                    .Item(RepairCompletionData.GI_RESERVE_BKG) = DBNull.Value
                End If
                If bv_strGI_RCESTSTATUS <> Nothing Then
                    .Item(RepairCompletionData.GI_RCESTSTATUS) = bv_strGI_RCESTSTATUS
                Else
                    .Item(RepairCompletionData.GI_RCESTSTATUS) = DBNull.Value
                End If
                If bv_i32OP_SNO <> 0 Then
                    .Item(RepairCompletionData.OP_SNO) = bv_i32OP_SNO
                Else
                    .Item(RepairCompletionData.OP_SNO) = DBNull.Value
                End If
                If bv_blnOP_STATUS <> Nothing Then
                    .Item(RepairCompletionData.OP_STATUS) = bv_blnOP_STATUS
                Else
                    .Item(RepairCompletionData.OP_STATUS) = DBNull.Value
                End If
            End With
            objData.InsertRow(dr, GateinRetInsertQuery, br_objTrans)
            dr = Nothing
            CreateGateinRet = intMax
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "GetEquipmentDescription() "
    Public Function GetEquipmentDescription(ByVal bv_strEquipmentCode As String, ByRef br_objTrans As Transactions) As String
        Try
            Dim hshTable As New Hashtable()
            Dim dtRental As New DataTable
            Dim equipmentDescription As String = String.Empty
            '  Dim strTransx As String = CommonUIs.GetIdentityCode(GateOutData._GATEOUT, bv_lngGateoutId, bv_GOdate, br_objTrans)
            objData = New DataObjects(getEquipmentCodeDescriptionQuery, GateinData.EQPMNT_CD_CD, bv_strEquipmentCode)
            objData.Fill(CType(ds, DataSet), GateinData._EQUIPMENT_TYPE)
            ' Return ds
            If ds.Tables("EQUIPMENT_TYPE").Rows.Count > 0 Then
                equipmentDescription = ds.Tables("EQUIPMENT_TYPE").Rows(0).Item("EQPMNT_TYP_DSCRPTN_VC")
            End If

            Return equipmentDescription
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region


    Public Function DeleteRepairEstimateDetailByEstimateId(ByVal bv_i64RepairEstimationDetailId As Int64, ByRef br_objtrans As Transactions) As Boolean

        Dim dr As DataRow
        objData = New DataObjects()
        Try
            dr = ds.Tables(RepairEstimateData._REPAIR_ESTIMATE_DETAIL).NewRow()
            With dr
                .Item(RepairEstimateData.RPR_ESTMT_ID) = bv_i64RepairEstimationDetailId
            End With
            DeleteRepairEstimateDetailByEstimateId = objData.DeleteRow(dr, DeleteRepairEstimateDetailByEstimateId_Qry, br_objtrans)
            dr = Nothing
        Catch ex As Exception
            Throw ex
        End Try
    End Function

    Public Function ValidateTariff_ByDetailId(ByVal bv_i64TRFF_CD_DTL_ID As Int64, _
                                              ByVal bv_decTRFF_CD_DTL_MNHR As Decimal, _
                                              ByVal bv_decTRFF_CD_DTL_MTRL_CST As Decimal, _
                                              ByRef objTrans As Transactions) As DataTable
        Try
            Dim dt As New DataTable
            Dim hshparamters As New Hashtable
            hshparamters.Add(RepairEstimateData.TRFF_CD_DTL_ID, bv_i64TRFF_CD_DTL_ID)
            hshparamters.Add(RepairEstimateData.TRFF_CD_DTL_MNHR, bv_decTRFF_CD_DTL_MNHR)
            hshparamters.Add(RepairEstimateData.TRFF_CD_DTL_MTRL_CST, bv_decTRFF_CD_DTL_MTRL_CST)

            objData = New DataObjects(ValidateTariff_ByDetailId_SelectQry, hshparamters)
            objData.Fill(dt, objTrans)

            Return dt
        Catch ex As Exception
            Throw ex
        End Try
    End Function

End Class
#End Region
