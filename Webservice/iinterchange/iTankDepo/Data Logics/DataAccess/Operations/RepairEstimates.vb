Imports Microsoft.VisualBasic
Imports iInterchange.iTankDepo.Data
Imports iInterchange.iTankDepo.Entities
Imports iInterchange.iTankDepo.GatewayFramework


#Region "RepairEstimates"

Public Class RepairEstimates


#Region "Declaration Part.. "

    Dim objData As DataObjects

    Private Const GateinUpdateQuery As String = "UPDATE GATEIN SET GTN_BIN=@GTN_BIN,ACTV_BT=@ACTV_BT,EQPMNT_STTS_ID=@EQPMNT_STTS_ID,RC_EST_STTS=@RC_EST_STTS,EST_STTS=@EST_STTS WHERE GTN_BIN=@GTN_BIN"
    Private Const Repair_EstimateSelectQuery As String = "SELECT RPR_ESTMT_ID,TRNSMSSN_NO,RPR_ESTMT_TRNSXN,RVSN_NO,RPR_ESTMT_DT,EQPMNT_NO,LSS_ID,EQPMNT_TYP_ID,EQPMNT_CD_ID,EQPMNT_SZ_ID,GTN_DT,LST_OH_LOC,LST_OH_DT,EQPMNT_STTS_ID,MNFCTR_DT,CSTMR_ID,DPT_ID,SRVYR_NAM,TX_RT_NC,NTS_VC,BS_CRRNCY_ID,LBR_RT_NC,DPP_CRRNCY_ID,DPP_AMT_NC,WGHT_NC,MSR_ID,UNT_ID,ESTMTN_TTL_NC,RDL_ATH_NO,EIR_NO,AUTH_AMNT_NC,ORGNL_ESTMN_DT,EXCHG_RT_NC,EDI_STTS,PCK_DT,EST_STTS,CRTD_BY,EST_TTL_TXD_NC,SRVC_TX_RT_NC,TTL_LBR_CST_NC,TTL_SRVC_TX_NC,YRD_LCTN,RC_EST_STTS,ESTMTN_TYP,TR_WGHT_NC,GRSS_WGHT_NC FROM REPAIR_ESTIMATE"
    Private Const Repair_EstimateInsertQuery As String = "INSERT INTO REPAIR_ESTIMATE(RPR_ESTMT_ID,RPR_ESTMT_NO,RVSN_NO,RPR_ESTMT_DT,ACTVTY_DT,ACTVTY_NM,EQPMNT_NO,EQPMNT_STTS_ID,CSTMR_ID,DPT_ID,LBR_RT_NC,GI_TRNSCTN_NO,RPR_TYP_ID,CRT_OF_CLNLNSS_BT,OWNR_APPRVL_RF,PRTY_APPRVL_RF,SRVYR_NM,ESTMTN_TTL_NC,INVCNG_PRTY_ID,ORGNL_ESTMN_DT,APPRVL_AMNT_NC,ORGNL_ESTMTN_AMNT_NC,CSTMR_ESTMTN_TTL_NC,CSTMR_APPRVL_AMNT_NC,RMRKS_VC,CRTD_BY,CRTD_DT,MDFD_BY,MDFD_DT,PRV_ONH_LCTN,MSR_ID,UNT_ID,BLL_TO,AGNT_ID,BLL_CD,PRV_ONH_LCTN_DT,TX_RT_PRCNT,CNSGNE,STTS_ID)VALUES(@RPR_ESTMT_ID,@RPR_ESTMT_NO,@RVSN_NO,@RPR_ESTMT_DT,@ACTVTY_DT,@ACTVTY_NM,@EQPMNT_NO,@EQPMNT_STTS_ID,@CSTMR_ID,@DPT_ID,@LBR_RT_NC,@GI_TRNSCTN_NO,@RPR_TYP_ID,@CRT_OF_CLNLNSS_BT,@OWNR_APPRVL_RF,@PRTY_APPRVL_RF,@SRVYR_NM,@ESTMTN_TTL_NC,@INVCNG_PRTY_ID,@ORGNL_ESTMN_DT,@APPRVL_AMNT_NC,@ORGNL_ESTMTN_AMNT_NC,@CSTMR_ESTMTN_TTL_NC,@CSTMR_APPRVL_AMNT_NC,@RMRKS_VC,@CRTD_BY,@CRTD_DT,@MDFD_BY,@MDFD_DT,@PRV_ONH_LCTN,@MSR_ID,@UNT_ID,@BLL_TO,@AGNT_ID,@BLL_CD,@PRV_ONH_LCTN_DT,@TX_RT_PRCNT,@CNSGNE,@STTS_ID)"

    Private Const Repair_EstimateUpdateQuery As String = "UPDATE REPAIR_ESTIMATE SET BLL_CD=@BLL_CD, RVSN_NO=@RVSN_NO, PRV_ONH_LCTN=@PRV_ONH_LCTN, PRV_ONH_LCTN_DT=@PRV_ONH_LCTN_DT, MSR_ID=@MSR_ID, BLL_TO=@BLL_TO, UNT_ID=@UNT_ID, AGNT_ID=@AGNT_ID, STTS_ID=@STTS_ID, RPR_ESTMT_DT=@RPR_ESTMT_DT,ACTVTY_DT=@ACTVTY_DT, EQPMNT_STTS_ID=@EQPMNT_STTS_ID,CSTMR_ID=@CSTMR_ID,RPR_TYP_ID=@RPR_TYP_ID,SRVYR_NM=@SRVYR_NM, CRT_OF_CLNLNSS_BT=@CRT_OF_CLNLNSS_BT,ESTMTN_TTL_NC=@ESTMTN_TTL_NC,APPRVL_AMNT_NC=@APPRVL_AMNT_NC,OWNR_APPRVL_RF=@OWNR_APPRVL_RF,PRTY_APPRVL_RF=@PRTY_APPRVL_RF, INVCNG_PRTY_ID=@INVCNG_PRTY_ID,CSTMR_ESTMTN_TTL_NC=@CSTMR_ESTMTN_TTL_NC,CSTMR_APPRVL_AMNT_NC=@CSTMR_APPRVL_AMNT_NC,RMRKS_VC=@RMRKS_VC,MDFD_BY=@MDFD_BY,MDFD_DT=@MDFD_DT,CNSGNE=@CNSGNE WHERE DPT_ID=@DPT_ID AND RPR_ESTMT_ID=@RPR_ESTMT_ID"
    Private Const Repair_Estimate_DetailSelectQueryByRepairEstimationDetailId As String = "SELECT RPR_ESTMT_DTL_ID,RPR_ESTMT_ID,RPR_ID,QTY,DMG_ID,LBR_RT,LBR_HRS,LBR_HR_CST_NC,MTRL_CST_NC,RSPNSBLTY_ID,DMG_RPR_DSCRPTN FROM REPAIR_ESTIMATE_DETAIL WHERE RPR_ESTMT_DTL_ID=@RPR_ESTMT_DTL_ID"
    Private Const Repair_Estimate_DetailInsertQuery As String = "INSERT INTO REPAIR_ESTIMATE_DETAIL(RPR_ESTMT_DTL_ID,RPR_ESTMT_ID,ITM_ID,SB_ITM_ID,DMG_ID,LBR_HRS,LBR_RT,LBR_HR_CST_NC,MTRL_CST_NC,TTL_CST_NC,RPR_ID,DMG_RPR_DSCRPTN,RSPNSBLTY_ID,MTRL_CD,TX_RSPNSBLTY_ID,RMRKS,CHK_BT,CHNG_BIT,TRFF_CD_DTL_ID)VALUES(@RPR_ESTMT_DTL_ID,@RPR_ESTMT_ID,@ITM_ID,@SB_ITM_ID,@DMG_ID,@LBR_HRS,@LBR_RT,@LBR_HR_CST_NC,@MTRL_CST_NC,@TTL_CST_NC,@RPR_ID,@DMG_RPR_DSCRPTN,@RSPNSBLTY_ID,@MTRL_CD,@TX_RSPNSBLTY_ID,@RMRKS,@CHK_BT,@CHNG_BIT,@TRFF_CD_DTL_ID)"

    Private Const Repair_Estimate_Detail_RetInsertQuery As String = "INSERT INTO REPAIR_ESTIMATE_DETAIL_RET(WD_RPR_ESTMT_DTL_ID,WD_SNO,WD_TRANSMISSION_NO,WD_TRNSXN,WD_REVISION,WD_ESTIM_DATE,WD_UNIT_NBR,WD_LABOR_RATE,WD_REPAIR,WD_REPEATS,WD_DAMAGE,WD_HOURS,WD_MAT_COST,WD_DMGREP_DESC,WD_STATUS,WM_SNo,WD_LIVE_STATUS,WD_LINE,WD_PTY_RSPONS,WD_COMPONENT,WD_LOCATION,WD_UNITS,WD_COMP_MATL)VALUES(@WD_RPR_ESTMT_DTL_ID,@WD_SNO,@WD_TRANSMISSION_NO,@WD_TRNSXN,@WD_REVISION,@WD_ESTIM_DATE,@WD_UNIT_NBR,@WD_LABOR_RATE,@WD_REPAIR,@WD_REPEATS,@WD_DAMAGE,@WD_HOURS,@WD_MAT_COST,@WD_DMGREP_DESC,@WD_STATUS,@WM_SNo,@WD_LIVE_STATUS,@WD_LINE,@WD_PTY_RSPONS,@WD_COMPONENT,@WD_LOCATION,@WD_UNITS,@WD_COMP_MATL)"
    'Private Const Repair_Estimate_RetInsertQuery As String = "INSERT INTO REPAIR_ESTIMATE_RET(WM_SNO,WM_TRANSMISSION_NO,WM_COMPLETE,WM_SENT_EIR,WM_SENT_DATE,WM_REC_EIR,WM_REC_DATE,WM_REC_ADDR,WM_REC_TYPE,WM_EXPORTED,WM_EXPOR_DATE,WM_IMPORTED,WM_IMPOR_DATE,WM_TRNSXN,WM_PTY_RSPONS,WM_REVISION,WM_ESTIM_DATE,WM_UNIT_NBR,WM_REFERENCE,WM_EQUIP_TYPE,WM_EQUIP_CODE,WM_EQUIP_DESC,WM_TERM_LOCA,WM_TERM_DATE,WM_TERM_TIME,WM_LAST_OH_LOC,WM_LAST_OH_DATE,WM_CONDITION,WM_MANU_DATE,WM_CSC_REEXAM,WM_LOAD,WM_SENDER,WM_ATTENTION,WM_LSR_OWNER,WM_SEND_EDI_1,WM_SSL_LSE,WM_SEND_EDI_2,WM_HAULIER,WM_SEND_EDI_3,WM_DPT_TRM,WM_SEND_EDI_4,WM_INSURER,WM_SURVEYOR,WM_OTHERS_1,WM_TAX_RATE,WM_FILLER,WM_NOTE_1,WM_NOTE_2,WM_NOTE_3,WM_BAS_CURR,WM_LABOR_RATE,WM_DPP_CURR,WM_DPP_AMT,WM_WEIGHT,WM_MEASURE,WM_UNITS,WM_MATERIAL,WM_U_LABOR,WM_U_MATERIAL,WM_U_HANDLING,WM_U_TAX,WM_U_TOTAL,WM_I_LABOR,WM_I_MATERIAL,WM_I_HANDLING,WM_I_TAX,WM_I_TOTAL,WM_O_LABOR,WM_O_MATERIAL,WM_O_HANDLING,WM_O_TAX,WM_O_TOTAL,WM_D_LABOR,WM_D_MATERIAL,WM_D_HANDLING,WM_D_TAX,WM_D_TOTAL,WM_S_LABOR,WM_S_MATERIAL,WM_S_HANDLING,WM_S_TAX,WM_S_TOTAL,WM_X_LABOR,WM_X_MATERIAL,WM_X_HANDLING,WM_X_TAX,WM_X_TOTAL,WM_EST_TOTAL,WM_ADVICE,WM_EIR_NUM,WM_AUTH_NUM,WM_AUTH_AMT,WM_AUTH_PTY,WM_AUTH_DATE,WM_O_ESTIM_DATE,WM_OTHERS_2,WM_SEND_EDI_5,WM_SEND_EDI_6,WM_SEND_EDI_7,WM_SEND_EDI_8,WM_NOTE_4,WM_NOTE_5,WM_WEIGHT_2,WM_MEASURE_2,WM_INVOICE_TYPE,WM_ODOMETER_HOURS,WM_OUT_SVC_DATE,WM_RET_SVC_DATE,WM_OWN_INSP_DATE,WM_MECHANIC_NAME,WM_BILLEE_CODE,WM_SUB_REPAIR_TYPE,WM_OUT_SVC_TIME,WM_RET_SVC_TIME,WM_EXCHG_RATE,WM_STATUS,WM_PICK_DATE,WM_ESTSTATUS,WM_Errors,WM_MatchStatus,WM_ERRSTATUS,WM_USERNAME,WM_LIVE_STATUS,WM_EST_TOTAL_TAXED,WM_CC_TOTAL,WM_SRVC_TAX_RATE,WM_TOTAL_LABOR_COST,WM_TOTAL_SRVC_TAX,WM_EQUIP_SIZE,WM_YARD_LOC,WM_RCESTSTATUS,WM_ESTIMATE_TYPE)VALUES(@WM_SNO,@WM_TRANSMISSION_NO,@WM_COMPLETE,@WM_SENT_EIR,@WM_SENT_DATE,@WM_REC_EIR,@WM_REC_DATE,@WM_REC_ADDR,@WM_REC_TYPE,@WM_EXPORTED,@WM_EXPOR_DATE,@WM_IMPORTED,@WM_IMPOR_DATE,@WM_TRNSXN,@WM_PTY_RSPONS,@WM_REVISION,@WM_ESTIM_DATE,@WM_UNIT_NBR,@WM_REFERENCE,@WM_EQUIP_TYPE,@WM_EQUIP_CODE,@WM_EQUIP_DESC,@WM_TERM_LOCA,@WM_TERM_DATE,@WM_TERM_TIME,@WM_LAST_OH_LOC,@WM_LAST_OH_DATE,@WM_CONDITION,@WM_MANU_DATE,@WM_CSC_REEXAM,@WM_LOAD,@WM_SENDER,@WM_ATTENTION,@WM_LSR_OWNER,@WM_SEND_EDI_1,@WM_SSL_LSE,@WM_SEND_EDI_2,@WM_HAULIER,@WM_SEND_EDI_3,@WM_DPT_TRM,@WM_SEND_EDI_4,@WM_INSURER,@WM_SURVEYOR,@WM_OTHERS_1,@WM_TAX_RATE,@WM_FILLER,@WM_NOTE_1,@WM_NOTE_2,@WM_NOTE_3,@WM_BAS_CURR,@WM_LABOR_RATE,@WM_DPP_CURR,@WM_DPP_AMT,@WM_WEIGHT,@WM_MEASURE,@WM_UNITS,@WM_MATERIAL,@WM_U_LABOR,@WM_U_MATERIAL,@WM_U_HANDLING,@WM_U_TAX,@WM_U_TOTAL,@WM_I_LABOR,@WM_I_MATERIAL,@WM_I_HANDLING,@WM_I_TAX,@WM_I_TOTAL,@WM_O_LABOR,@WM_O_MATERIAL,@WM_O_HANDLING,@WM_O_TAX,@WM_O_TOTAL,@WM_D_LABOR,@WM_D_MATERIAL,@WM_D_HANDLING,@WM_D_TAX,@WM_D_TOTAL,@WM_S_LABOR,@WM_S_MATERIAL,@WM_S_HANDLING,@WM_S_TAX,@WM_S_TOTAL,@WM_X_LABOR,@WM_X_MATERIAL,@WM_X_HANDLING,@WM_X_TAX,@WM_X_TOTAL,@WM_EST_TOTAL,@WM_ADVICE,@WM_EIR_NUM,@WM_AUTH_NUM,@WM_AUTH_AMT,@WM_AUTH_PTY,@WM_AUTH_DATE,@WM_O_ESTIM_DATE,@WM_OTHERS_2,@WM_SEND_EDI_5,@WM_SEND_EDI_6,@WM_SEND_EDI_7,@WM_SEND_EDI_8,@WM_NOTE_4,@WM_NOTE_5,@WM_WEIGHT_2,@WM_MEASURE_2,@WM_INVOICE_TYPE,@WM_ODOMETER_HOURS,@WM_OUT_SVC_DATE,@WM_RET_SVC_DATE,@WM_OWN_INSP_DATE,@WM_MECHANIC_NAME,@WM_BILLEE_CODE,@WM_SUB_REPAIR_TYPE,@WM_OUT_SVC_TIME,@WM_RET_SVC_TIME,@WM_EXCHG_RATE,@WM_STATUS,@WM_PICK_DATE,@WM_ESTSTATUS,@WM_Errors,@WM_MatchStatus,@WM_ERRSTATUS,@WM_USERNAME,@WM_LIVE_STATUS,@WM_EST_TOTAL_TAXED,@WM_CC_TOTAL,@WM_SRVC_TAX_RATE,@WM_TOTAL_LABOR_COST,@WM_TOTAL_SRVC_TAX,@WM_EQUIP_SIZE,@WM_YARD_LOC,@WM_RCESTSTATUS,@WM_ESTIMATE_TYPE)"
    Private Const Repair_Estimate_RetInsertQuery As String = "INSERT INTO REPAIR_ESTIMATE_RET(WM_SNO, WM_TRANSMISSION_NO, WM_COMPLETE, WM_SENT_EIR, WM_SENT_DATE, WM_REC_EIR, WM_REC_DATE, WM_REC_ADDR,WM_REC_TYPE, WM_EXPORTED, WM_EXPOR_DATE, WM_IMPORTED, WM_IMPOR_DATE, WM_TRNSXN, WM_PTY_RSPONS, WM_REVISION, WM_ESTIM_DATE,WM_UNIT_NBR, WM_REFERENCE, WM_EQUIP_TYPE, WM_EQUIP_CODE, WM_EQUIP_DESC, WM_TERM_LOCA, WM_TERM_DATE, WM_TERM_TIME,WM_LAST_OH_LOC, WM_LAST_OH_DATE, WM_CONDITION, WM_MANU_DATE, WM_CSC_REEXAM, WM_LOAD, WM_SENDER, WM_ATTENTION,WM_LSR_OWNER, WM_SEND_EDI_1, WM_SSL_LSE, WM_SEND_EDI_2, WM_HAULIER, WM_SEND_EDI_3, WM_DPT_TRM, WM_SEND_EDI_4, WM_INSURER,WM_SURVEYOR, WM_OTHERS_1, WM_TAX_RATE, WM_FILLER, WM_NOTE_1, WM_NOTE_2, WM_NOTE_3, WM_BAS_CURR, WM_LABOR_RATE,WM_DPP_CURR, WM_DPP_AMT, WM_WEIGHT, WM_MEASURE, WM_UNITS, WM_MATERIAL, WM_U_LABOR, WM_U_MATERIAL, WM_U_HANDLING, WM_U_TAX,WM_U_TOTAL, WM_I_LABOR, WM_I_MATERIAL, WM_I_HANDLING, WM_I_TAX, WM_I_TOTAL, WM_O_LABOR, WM_O_MATERIAL, WM_O_HANDLING, WM_O_TAX,WM_O_TOTAL, WM_D_LABOR, WM_D_MATERIAL, WM_D_HANDLING, WM_D_TAX, WM_D_TOTAL, WM_S_LABOR, WM_S_MATERIAL, WM_S_HANDLING,WM_S_TAX, WM_S_TOTAL, WM_X_LABOR, WM_X_MATERIAL, WM_X_HANDLING, WM_X_TAX, WM_X_TOTAL, WM_EST_TOTAL, WM_ADVICE, WM_EIR_NUM,WM_AUTH_NUM, WM_AUTH_AMT, WM_AUTH_PTY, WM_AUTH_DATE, WM_O_ESTIM_DATE, WM_OTHERS_2, WM_SEND_EDI_5, WM_SEND_EDI_6,WM_SEND_EDI_7, WM_SEND_EDI_8, WM_NOTE_4, WM_NOTE_5, WM_WEIGHT_2, WM_MEASURE_2, WM_INVOICE_TYPE, WM_ODOMETER_HOURS,WM_OUT_SVC_DATE, WM_RET_SVC_DATE, WM_OWN_INSP_DATE, WM_MECHANIC_NAME, WM_BILLEE_CODE, WM_SUB_REPAIR_TYPE, WM_OUT_SVC_TIME,WM_RET_SVC_TIME, WM_EXCHG_RATE, WM_STATUS, WM_PICK_DATE, WM_ESTSTATUS, WM_Errors, WM_MatchStatus, WM_ERRSTATUS, WM_USERNAME,WM_LIVE_STATUS, WM_EST_TOTAL_TAXED, WM_CC_TOTAL, WM_SRVC_TAX_RATE, WM_TOTAL_LABOR_COST, WM_TOTAL_SRVC_TAX, WM_EQUIP_SIZE,WM_YARD_LOC, WM_RCESTSTATUS, WM_ESTIMATE_TYPE) VALUES (@WM_SNO, @WM_TRANSMISSION_NO, @WM_COMPLETE, @WM_SENT_EIR, @WM_SENT_DATE, @WM_REC_EIR, @WM_REC_DATE, @WM_REC_ADDR,@WM_REC_TYPE, @WM_EXPORTED, @WM_EXPOR_DATE, @WM_IMPORTED, @WM_IMPOR_DATE, @WM_TRNSXN, @WM_PTY_RSPONS, @WM_REVISION, @WM_ESTIM_DATE,@WM_UNIT_NBR, @WM_REFERENCE, @WM_EQUIP_TYPE, @WM_EQUIP_CODE, @WM_EQUIP_DESC, @WM_TERM_LOCA, @WM_TERM_DATE, @WM_TERM_TIME,@WM_LAST_OH_LOC, @WM_LAST_OH_DATE, @WM_CONDITION, @WM_MANU_DATE, @WM_CSC_REEXAM, @WM_LOAD, @WM_SENDER, @WM_ATTENTION,@WM_LSR_OWNER, @WM_SEND_EDI_1, @WM_SSL_LSE, @WM_SEND_EDI_2, @WM_HAULIER, @WM_SEND_EDI_3, @WM_DPT_TRM, @WM_SEND_EDI_4, @WM_INSURER,@WM_SURVEYOR, @WM_OTHERS_1, @WM_TAX_RATE, @WM_FILLER, @WM_NOTE_1, @WM_NOTE_2, @WM_NOTE_3, @WM_BAS_CURR, @WM_LABOR_RATE,@WM_DPP_CURR, @WM_DPP_AMT, @WM_WEIGHT, @WM_MEASURE, @WM_UNITS, @WM_MATERIAL, @WM_U_LABOR, @WM_U_MATERIAL, @WM_U_HANDLING, @WM_U_TAX,@WM_U_TOTAL, @WM_I_LABOR, @WM_I_MATERIAL, @WM_I_HANDLING, @WM_I_TAX, @WM_I_TOTAL, @WM_O_LABOR, @WM_O_MATERIAL, @WM_O_HANDLING, @WM_O_TAX,@WM_O_TOTAL, @WM_D_LABOR, @WM_D_MATERIAL, @WM_D_HANDLING, @WM_D_TAX, @WM_D_TOTAL, @WM_S_LABOR, @WM_S_MATERIAL, @WM_S_HANDLING,@WM_S_TAX, @WM_S_TOTAL, @WM_X_LABOR, @WM_X_MATERIAL, @WM_X_HANDLING, @WM_X_TAX, @WM_X_TOTAL, @WM_EST_TOTAL, @WM_ADVICE, @WM_EIR_NUM,@WM_AUTH_NUM, @WM_AUTH_AMT, @WM_AUTH_PTY, @WM_AUTH_DATE, @WM_O_ESTIM_DATE, @WM_OTHERS_2, @WM_SEND_EDI_5, @WM_SEND_EDI_6,@WM_SEND_EDI_7, @WM_SEND_EDI_8, @WM_NOTE_4, @WM_NOTE_5, @WM_WEIGHT_2, @WM_MEASURE_2, @WM_INVOICE_TYPE, @WM_ODOMETER_HOURS,@WM_OUT_SVC_DATE, @WM_RET_SVC_DATE, @WM_OWN_INSP_DATE, @WM_MECHANIC_NAME, @WM_BILLEE_CODE, @WM_SUB_REPAIR_TYPE, @WM_OUT_SVC_TIME,@WM_RET_SVC_TIME, @WM_EXCHG_RATE, @WM_STATUS, @WM_PICK_DATE, @WM_ESTSTATUS, @WM_Errors, @WM_MatchStatus, @WM_ERRSTATUS, @WM_USERNAME,@WM_LIVE_STATUS, @WM_EST_TOTAL_TAXED, @WM_CC_TOTAL, @WM_SRVC_TAX_RATE, @WM_TOTAL_LABOR_COST, @WM_TOTAL_SRVC_TAX, @WM_EQUIP_SIZE,@WM_YARD_LOC, @WM_RCESTSTATUS, @WM_ESTIMATE_TYPE)"
    Private Const ExchangeRateSelectQuery As String = "SELECT EXCHNG_RT_ID,FRM_CRRNCY_ID,TO_CRRNCY_ID,EXCHNG_RT_PR_UNT_NC, WTH_EFFCT_FRM_DT FROM EXCHANGE_RATE WHERE FRM_CRRNCY_ID=@FRM_CRRNCY_ID AND TO_CRRNCY_ID=@TO_CRRNCY_ID AND ACTV_BT=1 AND DPT_ID=@DPT_ID ORDER BY WTH_EFFCT_FRM_DT DESC"
    Private Const Repair_Estimate_DetailDeleteQuery As String = "DELETE FROM Repair_Estimate_Detail WHERE RPR_ESTMT_DTL_ID=@RPR_ESTMT_DTL_ID"
    Private Const Repair_Estimate_DetailSelectQueryByRepairEstimationId As String = "SELECT RPR_ESTMT_DTL_ID,RPR_ESTMT_ID,RPR_ID,RPR_CD,DMG_ID,DMG_CD,LBR_RT,LBR_HRS,LBR_HR_CST_NC,MTRL_CST_NC,RSPNSBLTY_ID,RSPNSBLTY_CD,DMG_RPR_DSCRPTN,TTL_CST_NC,EQPMNT_NO,ITM_ID,ITM_CD,SB_ITM_ID,SB_ITM_CD,CHK_BT,MTRL_CD,TX_RSPNSBLTY_ID,RMRKS,CHK_BT,TRFF_CD_DTL_ID,CHNG_BIT FROM V_REPAIR_ESTIMATE_DETAIL WHERE RPR_ESTMT_ID=@RPR_ESTMT_ID"
    Private Const RepairEstimateCompletionUpdateQuery As String = "UPDATE  REPAIR_ESTIMATE SET EST_STTS=@EST_STTS,YRD_LCTN=@YRD_LCTN,EQPMNT_STTS_ID=@EQPMNT_STTS_ID WHERE RPR_ESTMT_ID=@RPR_ESTMT_ID"
    Private Const RepairReEstimateCompletionUpdateQuery As String = "UPDATE  REPAIR_ESTIMATE SET RC_EST_STTS=@RC_EST_STTS,YRD_LCTN=@YRD_LCTN,EQPMNT_STTS_ID=@EQPMNT_STTS_ID WHERE RPR_ESTMT_ID=@RPR_ESTMT_ID"
    Private Const REPAIR_CHARGEInsertQuery As String = "INSERT INTO REPAIR_CHARGE(RPR_CHRG_ID,CSTMR_ID,EQPMNT_NO,EQPMNT_SZ_ID,EQPMNT_TYP_ID,ESTMT_NO,RPR_APPRVL_DT,RPR_CMPLTN_DT,MTRL_CST_NC,LBR_CST_NC,RPR_TX_RT_NC,RPR_TX_AMNT_NC,TTL_CSTS_NC,RPR_APPRVL_AMNT_NC,BLLNG_FLG,ACTV_BT,DPT_ID,LSS_ID,YRD_LCTN,CLN_CST_NC,TTL_SRV_TAX,TTL_EST_INCL_SRV_TAX,INVC_TYPE)VALUES(@RPR_CHRG_ID,@CSTMR_ID,@EQPMNT_NO,@EQPMNT_SZ_ID,@EQPMNT_TYP_ID,@ESTMT_NO,@RPR_APPRVL_DT,@RPR_CMPLTN_DT,@MTRL_CST_NC,@LBR_CST_NC,@RPR_TX_RT_NC,@RPR_TX_AMNT_NC,@TTL_CSTS_NC,@RPR_APPRVL_AMNT_NC,@BLLNG_FLG,@ACTV_BT,@DPT_ID,@LSS_ID,@YRD_LCTN,@CLN_CST_NC,@TTL_SRV_TAX,@TTL_EST_INCL_SRV_TAX,@INVC_TYPE)"
    Private Const TrackingInsertQuery As String = "INSERT INTO TRACKING (TRCKNG_ID,CSTMR_ID,EQPMNT_NO,ACTVTY_NAM,EQPMNT_STTS_ID,ACTVTY_NO,ACTVTY_DT,ACTVTY_RMRKS,GI_TRNSCTN_NO,INVCNG_PRTY_ID,CRTD_BY,CRTD_DT,CNCLD_BY,CNCLD_DT,ADT_RMRKS,YRD_LCTN,DPT_ID)VALUES(@TRCKNG_ID,@CSTMR_ID,@EQPMNT_NO,@ACTVTY_NAM,@EQPMNT_STTS_ID,@ACTVTY_NO,@ACTVTY_DT,@ACTVTY_RMRKS,@GI_TRNSCTN_NO,@INVCNG_PRTY_ID,@CRTD_BY,@CRTD_DT,@CNCLD_BY,@CNCLD_DT,@ADT_RMRKS,@YRD_LCTN,@DPT_ID)"

    Private Const Owner_ApprovalCheckQueryByEqpmntNo As String = "SELECT OWNR_APPRVL_AMNT_NC FROM INVENTORY WHERE EQPMNT_NO=@EQPMNT_NO"
    Private Const V_Equipment_InformationSelectQueryByEqpmntNo As String = "SELECT EQPMNT_INFRMTN_ID,EQPMNT_NO,EQPMNT_TYP_ID,EQPMNT_TYP_CD,EQPMNT_TYP_DSCRPTN_VC,MNFCTR_DT,TR_WGHT_NC,GRSS_WGHT_NC,CPCTY_NC,LST_TST_DT,NXT_TST_DT,VLDTY_PRD_TST_YRS,LST_TST_TYP_ID,LST_TST_TYP_CD,NXT_TST_TYP_ID,NXT_TST_TYP_CD,LST_SRVYR_NM,ACTV_BT,RNTL_BT,DPT_ID,DPT_CD,CRTD_BY,CRTD_DT,MDFD_BY,MDFD_DT FROM V_EQUIPMENT_INFORMATION WHERE DPT_ID=@DPT_ID AND EQPMNT_NO=@EQPMNT_NO"
    Private Const CustomerLaborRateSelectQuery As String = "SELECT LBR_RT_PR_HR_NC FROM CUSTOMER WHERE DPT_ID=@DPT_ID AND CSTMR_ID=@CSTMR_ID"
    Private Const Activity_StatusUpdateQuery As String = "UPDATE ACTIVITY_STATUS SET EQPMNT_STTS_ID=@EQPMNT_STTS_ID,  ACTVTY_DT=@ACTVTY_DT, ACTVTY_NAM=@ACTVTY_NAM,RMRKS_VC=@RMRKS_VC WHERE GI_TRNSCTN_NO=@GI_TRNSCTN_NO AND EQPMNT_NO=@EQPMNT_NO"
    Private Const Repair_Estimate_RetUpdateQuery As String = "UPDATE REPAIR_ESTIMATE_RET SET WM_ESTIM_DATE=@WM_ESTIM_DATE,WM_CONDITION=@WM_CONDITION,WM_REVISION=@WM_REVISION WHERE WM_TRANSMISSION_NO=@WM_TRANSMISSION_NO AND WM_TRNSXN=@WM_TRNSXN AND WM_UNIT_NBR=@WM_UNIT_NBR"
    Private Const Repair_Estimate_DetailUpdateQuery As String = "UPDATE REPAIR_ESTIMATE_DETAIL SET ITM_ID=@ITM_ID,SB_ITM_ID=@SB_ITM_ID,RPR_ID=@RPR_ID,DMG_ID=@DMG_ID,LBR_HRS=@LBR_HRS,LBR_HR_CST_NC=@LBR_HR_CST_NC,MTRL_CST_NC=@MTRL_CST_NC,TTL_CST_NC=@TTL_CST_NC,RSPNSBLTY_ID=@RSPNSBLTY_ID,LBR_RT=@LBR_RT,DMG_RPR_DSCRPTN=@DMG_RPR_DSCRPTN,CHK_BT=@CHK_BT WHERE RPR_ESTMT_DTL_ID=@RPR_ESTMT_DTL_ID AND RPR_ESTMT_ID=@RPR_ESTMT_ID"
    Private Const Repair_Estimate_Detail_RetUpdateQuery As String = "UPDATE REPAIR_ESTIMATE_DETAIL_RET SET WD_RPR_ESTMT_DTL_ID=@WD_RPR_ESTMT_DTL_ID, WD_TRANSMISSION_NO=@WD_TRANSMISSION_NO,WD_TRNSXN=@WD_TRNSXN, WD_REVISION=@WD_REVISION, WD_ESTIM_DATE=@WD_ESTIM_DATE, WD_UNIT_NBR=@WD_UNIT_NBR, WD_LABOR_RATE=@WD_LABOR_RATE, WD_REPAIR=@WD_REPAIR, WD_DAMAGE=@WD_DAMAGE,  WD_HOURS=@WD_HOURS,WD_MAT_COST=@WD_MAT_COST,WD_DMGREP_DESC=@WD_DMGREP_DESC, WD_STATUS=@WD_STATUS  WHERE WD_RPR_ESTMT_DTL_ID=@WD_RPR_ESTMT_DTL_ID"
    Private Const Repair_Estimate_RetDetailDeleteQuery As String = "DELETE FROM REPAIR_ESTIMATE_DETAIL_RET WHERE WD_RPR_ESTMT_DTL_ID=@WD_RPR_ESTMT_DTL_ID"
    Private Const Repair_Estimate_Damage_SelectQuery As String = "SELECT DMG_ID,DMG_CD,DMG_DSCRPTN_VC FROM DAMAGE WHERE DPT_ID=@DPT_ID AND ACTV_BT=1"
    Private Const Repair_Estimate_Repair_SelectQuery As String = "SELECT RPR_ID,RPR_CD,RPR_DSCRPTN_VC FROM REPAIR WHERE  DPT_ID=@DPT_ID AND ACTV_BT=1"
    Private Const ItemSelectQueryByDPT_ID As String = "SELECT ITM_ID,ITM_CD,ITM_DSCRPTN_VC FROM ITEM WHERE DPT_ID=@DPT_ID AND ITM_CD=@ITM_CD"
    Private Const SubItemSelectQueryByDPT_ID As String = "SELECT SB_ITM_ID,SB_ITM_CD,SB_ITM_DSCRPTN_VC,ITM_CD FROM V_SUB_ITEM WHERE ITM_ID IN (SELECT ITM_ID FROM ITEM WHERE DPT_ID=@DPT_ID) ORDER BY ITM_ID ASC, SB_ITM_ID ASC"
    Private Const RepairEstimateSelectQueryById As String = "SELECT RPR_ESTMT_ID,RPR_ESTMT_NO,RVSN_NO,RPR_ESTMT_DT,EQPMNT_NO,GI_TRNSCTN_NO,EQPMNT_STTS_ID,EQPMNT_STTS_CD,CSTMR_ID,CSTMR_CD,CSTMR_NAM,DPT_ID,DPT_CD,DPT_NAM,LBR_RT_NC,ACTVTY_DT,RPR_TYP_ID,RPR_TYP_CD,CRT_OF_CLNLNSS_BT,INVCNG_PRTY_ID,INVCNG_PRTY_CD,INVCNG_PRTY_NM,OWNR_APPRVL_RF,CRTD_BY,CRTD_DT,MDFD_BY,MDFD_DT,ACTVTY_NM,APPRVL_AMNT_NC,PRTY_APPRVL_RF,PRTY_EXCHANGE_RATE_NC,PRTY_CRRNCY_CD,COUNT_ATTACH,TX_RT_PRCNT,UNT_CD ,MSR_CD,CRTD_BY,LBR_RT_NC,CSTMR_EXCHANGE_RATE_NC FROM V_REPAIR_ESTIMATE WHERE RPR_ESTMT_ID=@RPR_ESTMT_ID"
    Private Const V_Repair_Estimate_ReportSelectQuery As String = "SELECT CSTMR_CD,CSTMR_NAM,CSTMR_CRRNCY_CD,EXCHNG_RT_PR_UNT_NC,DPT_CRRNCY_CD FROM  V_REPAIR_ESTIMATE_REPORT WHERE DPT_ID=@DPT_ID AND CSTMR_ID=@CSTMR_ID"
    Private Const CustomerCurrencyExchangeSelectQuery As String = "SELECT CSTMR_ID,CSTMR_CD,CSTMR_NAM,EXCHNG_RT_PR_UNT_NC,DPT_CRRNCY_CD,CSTMR_CRRNCY_CD,DPT_ID FROM V_REPAIR_ESTIMATE_REPORT WHERE CSTMR_ID=@CSTMR_ID AND DPT_ID=@DPT_ID"
    Private Const RepairEstimateDetailSelectQueryByTariffId As String = "SELECT TRFF_CD_ID,TRFF_CD_CD,TRFF_CD_DESCRPTN_VC,ITM_ID,ITM_CD,SB_ITM_ID,SB_ITM_CD,DMG_ID,DMG_CD,RPR_ID,RPR_CD,MN_HR,MTRL_CST,RMRKS_VC,CRTD_BY,CRTD_DT,MDFD_BY,MDFD_DT,ACTV_BT,DPT_ID,LBR_RT,MTRL_CST_NC FROM V_TARIFF_CODE"
    Private Const Repair_Estimate_DetailCheckQuery As String = "SELECT COUNT(*) FROM REPAIR_ESTIMATE_DETAIL WHERE RPR_ESTMT_DTL_ID=@RPR_ESTMT_DTL_ID"
    'GWS
    Private Const ActivityStatusSelectQueryByActivityName As String = "SELECT ACTVTY_STTS_ID,CSTMR_ID,EQPMNT_NO,EQPMNT_TYP_ID,EQPMNT_TYP_CD,EQPMNT_CD_ID,EQPMNT_CD_CD,GTN_DT,GTOT_DT,PRDCT_ID,PRDCT_CD,CLNNG_DT,INSPCTN_DT,EQPMNT_STTS_ID,EQPMNT_STTS_CD,ACTVTY_NAM,ACTVTY_DT,RMRKS_VC,GI_TRNSCTN_NO,INVC_GNRT_BT,GI_RF_NO,ACTV_BT,DPT_ID,DPT_CD,DPT_NAM,YRD_LCTN,PRDCT_DSCRPTN_VC,(SELECT TOP 1 CERT_GNRTD_FLG FROM CLEANING WHERE EQPMNT_NO=VA.EQPMNT_NO AND GI_TRNSCTN_NO=VA.GI_TRNSCTN_NO ORDER BY CLNNG_ID DESC)CERT_GNRTD_FLG, (SELECT EIR_NO FROM GATEIN WHERE EQPMNT_NO =VA.EQPMNT_NO AND GI_TRNSCTN_NO=VA.GI_TRNSCTN_NO )EIR_NO,(SELECT CNTCT_ADDRSS FROM CUSTOMER WHERE CSTMR_ID=VA.CSTMR_ID )CNTCT_ADDRSS,(SELECT ADDRSS_LN1_VC  FROM DEPOT WHERE DPT_ID =VA.DPT_ID )ADDRSS_LN1_VC FROM V_ACTIVITY_STATUS VA WHERE DPT_ID=@DPT_ID AND EQPMNT_NO=@EQPMNT_NO AND GI_TRNSCTN_NO=@GI_TRNSCTN_NO"
    Private Const TrackingSelectCountQuery As String = "SELECT TRCKNG_ID,CSTMR_ID,EQPMNT_NO,ACTVTY_NAM,EQPMNT_STTS_ID,ACTVTY_NO,ACTVTY_DT,ACTVTY_RMRKS,GI_TRNSCTN_NO,INVCNG_PRTY_ID,CRTD_BY,CRTD_DT,CNCLD_BY,CNCLD_DT,ADT_RMRKS,DPT_ID FROM TRACKING WHERE EQPMNT_NO=@EQPMNT_NO AND GI_TRNSCTN_NO=@GI_TRNSCTN_NO AND ACTVTY_NAM =@ACTVTY_NAM AND DPT_ID=@DPT_ID"
    Private Const TrackingUpdateQuery As String = "UPDATE TRACKING SET PCKP_DT=@PCKP_DT,PCKP_STTS_VC=@PCKP_STTS_VC,ACTVTY_DT=@ACTVTY_DT,ACTVTY_RMRKS=@ACTVTY_RMRKS,INVCNG_PRTY_ID=@INVCNG_PRTY_ID, MDFD_BY=@MDFD_BY, MDFD_DT=@MDFD_DT, EQPMNT_INFRMTN_RMRKS_VC=@EQPMNT_INFRMTN_RMRKS_VC WHERE ACTVTY_NO=@ACTVTY_NO AND ACTVTY_NAM=@ACTVTY_NAM AND GI_TRNSCTN_NO=@GI_TRNSCTN_NO"
    Private Const Equipment_InformationUpdateQuery As String = "UPDATE EQUIPMENT_INFORMATION SET LST_TST_DT=@LST_TST_DT, NXT_TST_DT=@NXT_TST_DT,LST_TST_TYP_ID=@LST_TST_TYP_ID,NXT_TST_TYP_ID=@NXT_TST_TYP_ID,VLDTY_PRD_TST_YRS=@VLDTY_PRD_TST_YRS,LST_SRVYR_NM=@LST_SRVYR_NM  WHERE EQPMNT_NO=@EQPMNT_NO AND DPT_ID=@DPT_ID"
    Private Const AttachmentDeleteQuery As String = "DELETE FROM ATTACHMENT WHERE GI_TRNSTCN_NO=@GI_TRNSTCN_NO AND RPR_ESTMT_ID=@RPR_ESTMT_ID AND RPR_ESTMT_NO=@RPR_ESTMT_NO"
    Private Const AttachmentSelectQuery As String = "SELECT ATTCHMNT_ID,RPR_ESTMT_ID,ACTVTY_NAM,RPR_ESTMT_NO,GI_TRNSCTN_NO,ATTCHMNT_PTH,ACTL_FL_NM,MDFD_BY,MDFD_DT,DPT_ID,'False' AS ERR_FLG FROM ATTACHMENT WHERE DPT_ID=@DPT_ID AND RPR_ESTMT_ID=@RPR_ESTMT_ID AND ACTVTY_NAM=@ACTVTY_NAM"
    'Private Const AttachmentSelectQueryByEstimateNo As String = "SELECT ATTCHMNT_ID,RPR_ESTMT_ID,ACTVTY_NAM,RPR_ESTMT_NO,GI_TRNSCTN_NO,ATTCHMNT_PTH,IMG_ATTCHMNT_PTH,ACTL_FL_NM,MDFD_BY,MDFD_DT,DPT_ID FROM V_ATTACHMENT WHERE DPT_ID=@DPT_ID AND RPR_ESTMT_NO=@RPR_ESTMT_NO AND RPR_ESTMT_ID=@RPR_ESTMT_ID   @WHERE"
    Private Const AttachmentSelectQueryByEstimateNo As String = "SELECT ATTCHMNT_ID,RPR_ESTMT_ID,ACTVTY_NAM,RPR_ESTMT_NO,GI_TRNSCTN_NO,ATTCHMNT_PTH,IMG_ATTCHMNT_PTH,ACTL_FL_NM,MDFD_BY,MDFD_DT,DPT_ID FROM V_ATTACHMENT WHERE RPR_ESTMT_NO=@RPR_ESTMT_NO AND RPR_ESTMT_ID=@RPR_ESTMT_ID   @WHERE"
    '@WHERE
    Private Const RepairEstimateRevisionNoSelectQuery As String = "SELECT RVSN_NO FROM REPAIR_ESTIMATE WHERE RPR_ESTMT_ID=@RPR_ESTMT_ID"
    Private Const RepairEstimateRevisionNoSelectQueryByEqpmntNo As String = "SELECT RVSN_NO FROM REPAIR_ESTIMATE WHERE EQPMNT_NO=@EQPMNT_NO AND GI_TRNSCTN_NO=@GI_TRNSCTN_NO AND ACTVTY_NM=@ACTVTY_NM AND RPR_ESTMT_NO=@RPR_ESTMT_NO"
    Private Const RepairEstimateEstimationCostQuery As String = "SELECT TOP 1 ESTMTN_TTL_NC FROM REPAIR_ESTIMATE WHERE EQPMNT_NO=@EQPMNT_NO AND GI_TRNSCTN_NO=@GI_TRNSCTN_NO AND ACTVTY_NM=@ACTVTY_NM AND DPT_ID=@DPT_ID AND RPR_ESTMT_NO=@RPR_ESTMT_NO ORDER BY RPR_ESTMT_ID DESC"
    Private Const RepairEstimateCreateUserByEqpmntNo As String = "SELECT CRTD_BY FROM REPAIR_ESTIMATE WHERE EQPMNT_NO=@EQPMNT_NO AND GI_TRNSCTN_NO=@GI_TRNSCTN_NO AND RPR_ESTMT_NO=@RPR_ESTMT_NO AND ACTVTY_NM=@ACTVTY_NM  AND DPT_ID=1"
    Private Const RepairEstimateSelectQueryByTransactionNo As String = "SELECT RPR_ESTMT_ID,RPR_ESTMT_NO,GI_TRNSCTN_NO,RVSN_NO,RPR_ESTMT_DT,ACTVTY_DT,ACTVTY_NM,ORGNL_ESTMN_DT,EQPMNT_NO,EQPMNT_STTS_ID,CSTMR_ID,LBR_RT_NC,RPR_TYP_ID,CRT_OF_CLNLNSS_BT,INVCNG_PRTY_ID,ESTMTN_TTL_NC,SRVYR_NM,OWNR_APPRVL_RF,APPRVL_AMNT_NC,ORGNL_ESTMTN_AMNT_NC,CSTMR_ESTMTN_TTL_NC,CSTMR_APPRVL_AMNT_NC,ACTL_MN_HR_NC,RMRKS_VC,CRTD_BY,CRTD_DT,MDFD_BY,MDFD_DT,DPT_ID FROM REPAIR_ESTIMATE WHERE EQPMNT_NO=@EQPMNT_NO AND GI_TRNSCTN_NO=@GI_TRNSCTN_NO AND ACTVTY_NM=@ACTVTY_NM AND DPT_ID=@DPT_ID AND RPR_ESTMT_NO=@RPR_ESTMT_NO ORDER BY RPR_ESTMT_ID DESC  "
    Private Const TariffCodeSelectQuery As String = "SELECT TRFF_CD_ID,TRFF_CD_CD,TRFF_CD_DESCRPTN_VC,ITM_ID,SB_ITM_ID,DMG_ID,RPR_ID,MN_HR,MTRL_CST,RMRKS_VC,CRTD_BY,CRTD_DT,MDFD_BY,MDFD_DT,ACTV_BT,DPT_ID FROM TARIFF_CODE"
    'Private Const AttachmentSelectQueryByActivityName As String = "SELECT ATTCHMNT_ID,RPR_ESTMT_ID,ACTVTY_NAM,RPR_ESTMT_NO,GI_TRNSCTN_NO,ATTCHMNT_PTH,IMG_ATTCHMNT_PTH,ACTL_FL_NM,MDFD_BY,MDFD_DT,DPT_ID,DPT_CD FROM V_ATTACHMENT WHERE DPT_ID=@DPT_ID AND RPR_ESTMT_NO=@RPR_ESTMT_NO AND @ACTIVITYNAME @WHERE"
    Private Const AttachmentSelectQueryByActivityName As String = "SELECT ATTCHMNT_ID,RPR_ESTMT_ID,ACTVTY_NAM,RPR_ESTMT_NO,GI_TRNSCTN_NO,ATTCHMNT_PTH,IMG_ATTCHMNT_PTH,ACTL_FL_NM,MDFD_BY,MDFD_DT,DPT_ID,DPT_CD FROM V_ATTACHMENT WHERE RPR_ESTMT_NO=@RPR_ESTMT_NO AND @ACTIVITYNAME @WHERE"
    '@WHERE
    Private Const EquipmentStatusSelectQuery As String = "SELECT EQPMNT_STTS_ID FROM EQUIPMENT_STATUS WHERE EQPMNT_STTS_CD=@EQPMNT_STTS_CD AND DPT_ID = @DPT_ID"
    Private Const EstimateRETselectQuery As String = "SELECT WM_SNO,WM_TRANSMISSION_NO,WM_COMPLETE,WM_SENT_EIR,WM_SENT_DATE,WM_REC_EIR,WM_REC_DATE,WM_REC_ADDR,WM_REC_TYPE,WM_EXPORTED,WM_EXPOR_DATE,WM_IMPORTED,WM_IMPOR_DATE,WM_TRNSXN,WM_PTY_RSPONS,WM_REVISION,WM_ESTIM_DATE,WM_UNIT_NBR,WM_REFERENCE,WM_EQUIP_TYPE,WM_EQUIP_CODE,WM_EQUIP_DESC,WM_TERM_LOCA,WM_TERM_DATE,WM_TERM_TIME,WM_LAST_OH_LOC,WM_LAST_OH_DATE,WM_CONDITION,WM_MANU_DATE,WM_CSC_REEXAM,WM_LOAD,WM_SENDER,WM_ATTENTION,WM_LSR_OWNER,WM_SEND_EDI_1 FROM REPAIR_ESTIMATE_RET WHERE WM_SNO=@WM_SNO"
    Private Const EstimateRETDetailselectQuery As String = "SELECT WD_RPR_ESTMT_DTL_ID,WD_SNO,WD_TRANSMISSION_NO,WD_TRNSXN,WD_REVISION,WD_ESTIM_DATE,WD_UNIT_NBR,WD_LABOR_RATE,WD_REPAIR,WD_REPEATS,WD_DAMAGE,WD_HOURS,WD_MAT_COST,WD_DMGREP_DESC,WD_STATUS,WM_SNo FROM REPAIR_ESTIMATE_DETAIL_RET WHERE WD_RPR_ESTMT_DTL_ID=@WD_RPR_ESTMT_DTL_ID"
    Private ds As RepairEstimateDataSet
    Dim sqlDbnull As DateTime = "1900-01-01 00:00:00.000"
    Dim sqlDateDbnull As DateTime = "01/01/1900"
    Dim sqlDtnull = "19000101"
    Dim sqlMnthnull = "01/00"
    'Private Const getEquipmentCodeDescriptionQuery As String = "SELECT EQPMNT_CD_DSCRPTN_VC FROM EQUIPMENT_CODE WHERE EQPMNT_CD_CD=@EQPMNT_CD_CD"
    Private Const getEquipmentCodeDescriptionQuery As String = "SELECT EQPMNT_TYP_DSCRPTN_VC FROM EQUIPMENT_TYPE WHERE EQPMNT_CD_CD=@EQPMNT_CD_CD"
    Private Const GetGateinDetailByEquipment As String = "SELECT MTRL_CD ,UNT_CD,MSR_CD ,GRSS_WGHT_NC FROM V_GATEIN_DETAIL WHERE GTN_ID IN (SELECT GTN_ID FROM GATEIN WHERE EQPMNT_NO =@EQPMNT_NO)"

    'Repair Approval - CR
    Private Const UpadateRepairEstimate_fromApproval_UpdateQuery As String = "UPDATE REPAIR_ESTIMATE SET RPR_TYP_ID=@RPR_TYP_ID WHERE EQPMNT_NO=@EQPMNT_NO AND GI_TRNSCTN_NO =@GI_TRNSCTN_NO AND EQPMNT_STTS_ID=9"
    'Attachment CR
    'Private Const GetAttachmentByGateIN As String = "SELECT COUNT(RPR_ESTMT_ID)COUNT_ATTACH FROM ATTACHMENT WHERE GI_TRNSCTN_NO=@GI_TRNSCTN_NO AND ACTVTY_NAM=@ACTVTY_NAM"
    Private Const GetAttachmentByGateIN As String = "SELECT TOP 1 (RPR_ESTMT_ID)COUNT_ATTACH FROM ATTACHMENT WHERE GI_TRNSCTN_NO=@GI_TRNSCTN_NO AND ACTVTY_NAM=@ACTVTY_NAM"

    Private Const CustomerTariffCode_SelectQuery As String = "SELECT TRFF_CD_ID,TRFF_CD_TYP,TRFF_CD_EQP_TYP_ID,TRFF_CD_CSTMR_ID,TRFF_CD_AGNT_ID,TRFF_CD_CRTD_BY,TRFF_CD_CRTD_DT,TRFF_CD_MDFD_BY,TRFF_CD_MDFD_DT,ACTV_BT,DPT_ID FROM TARIFF_CODE_HEADER"
    Private Const CustomerTariffCode_SelectQueryByTariffId = "SELECT TRFF_CD_DTL_ID,TRFF_CD_ID,TRFF_CD_DTL_CD,TRFF_CD_DTL_DSC,TRFF_CD_DTL_LCTN_CD,TRFF_CD_DTL_LCTN_ID,TRFF_CD_DTL_CMPNT_CD,TRFF_CD_DTL_CMPNT_ID,TRFF_CD_DTL_DMG_CD,TRFF_CD_DTL_DMG_ID,TRFF_CD_DTL_RPR_CD,TRFF_CD_DTL_RPR_ID,TRFF_CD_DTL_MTRL_CD,TRFF_CD_DTL_MTRL_ID,TRFF_CD_DTL_MNHR,TRFF_CD_DTL_MTRL_CST,TRFF_CD_DTL_RMRKS,TRFF_CD_DTL_ACTV_BT,TRFF_CD_DTL_CRTD_BY,TRFF_CD_DTL_CRTD_DT,TRFF_CD_DTL_MDFD_BY,TRFF_CD_DTL_MDFD_DT,DPT_ID FROM V_TARIFF_CODE_DETAIL WHERE TRFF_CD_DTL_ID=@TRFF_CD_DTL_ID AND DPT_ID=@DPT_ID AND TRFF_CD_DTL_ACTV_BT = 1"

    Private Const EquipmentStatusFromStatusSelectQuery As String = "SELECT STTS_ID FROM STATUS WHERE STTS_CD=@STTS_CD AND DPT_ID = @DPT_ID"
    Private Const Agent_SelectQueryByCustomerId As String = "SELECT AGNT_NAM,AGNT_ID FROM AGENT WHERE AGNT_ID=(SELECT AGENT_ID FROM CUSTOMER WHERE CSTMR_ID=@CSTMR_ID AND DPT_ID=@DPT_ID)"
    Private Const GetDepotbyDepotId As String = "SELECT DPT_ID ,DPT_CD ,DPT_NAM ,CNTCT_PRSN_NAM ,ADDRSS_LN1_VC ,ADDRSS_LN2_VC ,ADDRSS_LN3_VC ,EML_ID ,VT_NO ,PHN_NO ,FX_NO ,CMPNY_LG_PTH  FROM DEPOT WHERE DPT_ID=@DPT_ID "
    Private Const GetCustomerDetailByCustomer_id As String = "SELECT CSTMR_ID,CSTMR_CD ,CSTMR_NAM ,CSTMR_CRRNCY_ID ,CSTMR_CRRNCY_CD ,CNTCT_PRSN_NAM ,CNTCT_ADDRSS ,BLLNG_ADDRSS ,ZP_CD ,PHN_NO ,FX_NO ,INVCNG_EML_ID  FROM V_CUSTOMER WHERE CSTMR_ID=@CSTMR_ID"
    Private Const GETAgentSelectQueryByCustomerId As String = "SELECT AGNT_NAM,AGNT_ID,AGNT_CNTCT_PRSN_NAM ,AGNT_CNTCT_ADDRSS ,AGNT_FX_NO ,AGNT_PHN_NO ,AGNT_ZP_CD,AGNT_CD  FROM AGENT WHERE AGNT_ID=(SELECT AGENT_ID FROM CUSTOMER WHERE CSTMR_ID=@CSTMR_ID AND DPT_ID=@DPT_ID)"
    Private Const AgentLaborRateSelectQuery As String = "SELECT AGNT_LBR_RT_PR_HR_NC FROM AGENT WHERE AGNT_ID=@AGNT_ID AND DPT_ID=@DPT_ID"
    Private Const AgentCurrencySelectQuery As String = "SELECT AGNT_SERVC_TX,(SELECT CRRNCY_CD FROM CURRENCY WHERE CRRNCY_ID=AGNT_CRRNCY_ID) AS CRRNCY_CD,(SELECT CRRNCY_ID FROM CURRENCY WHERE CRRNCY_ID=AGNT_CRRNCY_ID) AS CRRNCY_ID FROM AGENT WHERE AGNT_ID=@AGNT_ID AND DPT_ID=@DPT_ID"
    Private Const CustomerCurrencySelectQuery As String = "SELECT SERVC_TX,(SELECT CRRNCY_CD FROM CURRENCY WHERE CRRNCY_ID=CSTMR_CRRNCY_ID) AS 'CRRNCY_CD' FROM CUSTOMER WHERE CSTMR_ID=@CSTMR_ID AND DPT_ID=@DPT_ID"

    'For GWS
    Private Const GetAgentCurrencyExchangeRateByDptId_SelectQry As String = "SELECT AGNT_ID,AGNT_CD,EXCHNG_RT_PR_UNT_NC,DPT_CRRNCY_CD,AGNT_CRRNCY_CD,AGNT_NAM,DPT_ID FROM V_AGENT_CURRENCY WHERE AGNT_ID=@AGNT_ID  AND DPT_ID=@DPT_ID"
#End Region

#Region "Constructor.."

    Sub New()
        ds = New RepairEstimateDataSet
    End Sub

#End Region

#Region "GetRepairEstimateByGateinTransactionNo() TABLE NAME:ESTIMATE_LIST"

    Public Function GetRepairEstimateByGateinTransactionNo(ByVal bv_strEquipmentNo As String, _
                                                           ByVal bv_strGateinTransaction As String, _
                                                           ByVal bv_strRepairEstimateNo As String, _
                                                           ByVal bv_strActivityName As String, _
                                                           ByVal bv_intDepotId As Int32) As RepairEstimateDataSet
        Try
            Dim hshparameters As New Hashtable
            hshparameters.Add(RepairEstimateData.EQPMNT_NO, bv_strEquipmentNo)
            hshparameters.Add(RepairEstimateData.GI_TRNSCTN_NO, bv_strGateinTransaction)
            hshparameters.Add(RepairEstimateData.RPR_ESTMT_NO, bv_strRepairEstimateNo)
            hshparameters.Add(RepairEstimateData.ACTVTY_NM, bv_strActivityName)
            hshparameters.Add(RepairEstimateData.DPT_ID, bv_intDepotId)
            objData = New DataObjects(RepairEstimateSelectQueryByTransactionNo, hshparameters)
            objData.Fill(CType(ds, DataSet), RepairEstimateData._REPAIR_ESTIMATE)
            Return ds
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "GetRepairEstimateDetailByRepairEstimationId() TABLE NAME:ESTIMATE_LIST"

    Public Function GetRepairEstimateDetailByRepairEstimationId(ByVal bv_i64EstimateId As Int64) As RepairEstimateDataSet
        Try
            objData = New DataObjects(Repair_Estimate_DetailSelectQueryByRepairEstimationId, RepairEstimateData.RPR_ESTMT_ID, CStr(bv_i64EstimateId))
            objData.Fill(CType(ds, DataSet), RepairEstimateData._V_REPAIR_ESTIMATE_DETAIL)
            Return ds
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "GetRepairEstimateDetailByRepairEstimationIdTrans() TABLE NAME:ESTIMATE_LIST"

    Public Function GetRepairEstimateDetailByRepairEstimationIdTrans(ByVal bv_i64EstimateId As Int64, ByRef objTrans As Transactions) As RepairEstimateDataSet
        Try
            objData = New DataObjects(Repair_Estimate_DetailSelectQueryByRepairEstimationId, RepairEstimateData.RPR_ESTMT_ID, CStr(bv_i64EstimateId))
            objData.Fill(CType(ds, DataSet), RepairEstimateData._REPAIR_ESTIMATE_DETAIL, objTrans)
            Return ds
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "CreateRepairEstimate() TABLE NAME:Repair_Estimate"

    Public Function CreateRepairEstimate(ByVal bv_i64CustomerId As Int64, _
                                         ByRef bv_strEstimateNo As String, _
                                         ByVal bv_datRepairEstimationDate As DateTime, _
                                         ByVal bv_datOrginalEstimationDate As DateTime, _
                                         ByVal bv_datActivityDate As DateTime, _
                                         ByVal bv_strActivityName As String, _
                                         ByVal bv_datGateinDate As DateTime, _
                                         ByVal bv_strEquipmentNo As String, _
                                         ByVal bv_i64StatusId As Int64, _
                                         ByVal bv_datLastTestDate As DateTime, _
                                         ByVal bv_i64LastTestTypeId As Int64, _
                                         ByVal bv_strValidityYear As String, _
                                         ByVal bv_datNextTestDate As DateTime, _
                                         ByVal bv_strSurveyorName As String, _
                                         ByVal bv_i64NextTestTypeId As Int64, _
                                         ByVal bv_i64RepairTypeId As Int64, _
                                         ByVal bv_blnCertofCleanBit As Boolean, _
                                         ByVal bv_i64InvoicingPartyId As Int64, _
                                         ByVal bv_decLaborRate As Decimal, _
                                         ByVal bv_strRepairEstimationTransaction As String, _
                                         ByVal bv_i32RevisionNo As Int32, _
                                         ByVal bv_i32DepotId As Int32, _
                                         ByVal bv_strEIRNumber As String, _
                                         ByVal bv_strApprovalRef As String, _
                                         ByVal bv_strPartyApprovalRef As String, _
                                         ByVal bv_strSurveyName As String, _
                                         ByVal bv_decOrginalEstimate As Decimal, _
                                         ByVal bv_decTotalEstimateAmount As Decimal, _
                                         ByVal bv_decApprovalAmount As Decimal, _
                                         ByVal bv_decCustomerEstimatedCost As Decimal, _
                                         ByVal bv_decCustomerApprovedCost As Decimal, _
                                         ByVal bv_strRemarks As String, _
                                         ByVal bv_strCreatedBy As String, _
                                         ByVal bv_datCreatedDate As DateTime, _
                                         ByVal bv_strModifiedBy As String, _
                                         ByVal bv_datModifiedDate As DateTime, _
                                         ByVal bv_intActivityId As Int64, _
                                         ByVal bv_intPrevONHLocation As Integer, _
                                         ByVal bv_intMeasure As Integer, _
                                         ByVal bv_intUnit As Integer, _
                                         ByVal bv_strBillTo As String, _
                                         ByVal bv_strAgentName As String, _
                                         ByVal bv_strBillCode As String, _
                                         ByVal bv_datPrevONHDate As DateTime, _
                                         ByVal bv_decTaxRate As Decimal, _
                                         ByVal bv_strConsignee As String, _
                                         ByVal bv_i64EquipmentStatusId As Int32, _
                                         ByRef br_objtrans As Transactions) As Long
        Try
            Dim dr As DataRow
            Dim intMax As Long
            Dim intEstimateNo As Int64 = 0
            objData = New DataObjects()
            dr = ds.Tables(RepairEstimateData._REPAIR_ESTIMATE).NewRow()
            With dr
                intMax = CommonUIs.GetIdentityValue(RepairEstimateData._REPAIR_ESTIMATE, br_objtrans)
                intEstimateNo = CommonUIs.GetIdentityValue(RepairEstimateData._ESTIMATE_NO, br_objtrans)
                .Item(RepairEstimateData.RPR_ESTMT_ID) = intMax
                If bv_strEstimateNo = "" Then
                    bv_strEstimateNo = CommonUIs.GetIdentityCode(RepairEstimateData._REPAIR_ESTIMATE, intEstimateNo, bv_datRepairEstimationDate, br_objtrans)
                    ' bv_strEstimateNo = IndexPatterns.GetIdentsityCode(RepairEstimateData._REPAIR_ESTIMATE, intEstimateNo, bv_datRepairEstimationDate, bv_intActivityId, br_objtrans)
                End If
                .Item(RepairEstimateData.RPR_ESTMT_NO) = bv_strEstimateNo

                .Item(RepairEstimateData.RVSN_NO) = bv_i32RevisionNo
                If bv_datRepairEstimationDate <> Nothing Or bv_datRepairEstimationDate <> sqlDbnull Then
                    .Item(RepairEstimateData.RPR_ESTMT_DT) = bv_datRepairEstimationDate
                Else
                    .Item(RepairEstimateData.RPR_ESTMT_DT) = DBNull.Value
                End If

                If bv_datActivityDate <> Nothing Or bv_datActivityDate <> sqlDbnull Then
                    .Item(RepairEstimateData.ACTVTY_DT) = bv_datActivityDate
                Else
                    .Item(RepairEstimateData.ACTVTY_DT) = DBNull.Value
                End If

                .Item(RepairEstimateData.ACTVTY_NM) = bv_strActivityName
                .Item(RepairEstimateData.EQPMNT_NO) = bv_strEquipmentNo
                .Item(RepairEstimateData.EQPMNT_STTS_ID) = bv_i64EquipmentStatusId
                .Item(RepairEstimateData.CSTMR_ID) = bv_i64CustomerId
                .Item(RepairEstimateData.DPT_ID) = bv_i32DepotId
                .Item(RepairEstimateData.STTS_ID) = bv_i64StatusId

                .Item(RepairEstimateData.SRVYR_NM) = bv_strSurveyName
                .Item(RepairEstimateData.LBR_RT_NC) = bv_decLaborRate
                .Item(RepairEstimateData.GI_TRNSCTN_NO) = bv_strEIRNumber
                If bv_datOrginalEstimationDate <> sqlDbnull And bv_datOrginalEstimationDate <> Nothing Then
                    .Item(RepairEstimateData.ORGNL_ESTMN_DT) = bv_datOrginalEstimationDate
                Else
                    .Item(RepairEstimateData.ORGNL_ESTMN_DT) = bv_datOrginalEstimationDate
                End If
                If bv_strApprovalRef <> Nothing Then
                    .Item(RepairEstimateData.OWNR_APPRVL_RF) = bv_strApprovalRef
                Else
                    .Item(RepairEstimateData.OWNR_APPRVL_RF) = DBNull.Value
                End If
                If bv_strPartyApprovalRef <> Nothing Then
                    .Item(RepairEstimateData.PRTY_APPRVL_RF) = bv_strPartyApprovalRef
                Else
                    .Item(RepairEstimateData.PRTY_APPRVL_RF) = DBNull.Value
                End If
                If bv_i64RepairTypeId <> Nothing And bv_i64RepairTypeId <> 0 Then
                    .Item(RepairEstimateData.RPR_TYP_ID) = bv_i64RepairTypeId
                Else
                    .Item(RepairEstimateData.RPR_TYP_ID) = DBNull.Value
                End If
                If bv_strRemarks <> Nothing Then
                    .Item(RepairEstimateData.RMRKS_VC) = bv_strRemarks
                Else
                    .Item(RepairEstimateData.RMRKS_VC) = DBNull.Value
                End If
                If bv_strCreatedBy <> Nothing Then
                    .Item(RepairEstimateData.CRTD_BY) = bv_strCreatedBy
                Else
                    .Item(RepairEstimateData.CRTD_BY) = DBNull.Value
                End If
                If bv_strConsignee <> Nothing Then
                    .Item(RepairEstimateData.CNSGNE) = bv_strConsignee
                Else
                    .Item(RepairEstimateData.CNSGNE) = DBNull.Value
                End If
                If bv_datCreatedDate <> sqlDbnull And bv_datCreatedDate <> Nothing Then
                    .Item(RepairEstimateData.CRTD_DT) = bv_datCreatedDate
                Else
                    .Item(RepairEstimateData.CRTD_DT) = DBNull.Value
                End If
                If bv_datPrevONHDate <> sqlDbnull And bv_datPrevONHDate <> Nothing Then
                    .Item(RepairEstimateData.PRV_ONH_LCTN_DT) = bv_datPrevONHDate
                Else
                    .Item(RepairEstimateData.PRV_ONH_LCTN_DT) = DBNull.Value
                End If
                If bv_strModifiedBy <> Nothing Then
                    .Item(RepairEstimateData.MDFD_BY) = bv_strModifiedBy
                Else
                    .Item(RepairEstimateData.MDFD_BY) = DBNull.Value
                End If
                If bv_datModifiedDate <> sqlDbnull And bv_datModifiedDate <> Nothing Then
                    .Item(RepairEstimateData.MDFD_DT) = bv_datModifiedDate
                Else
                    .Item(RepairEstimateData.MDFD_DT) = DBNull.Value
                End If
                .Item(RepairEstimateData.CRT_OF_CLNLNSS_BT) = bv_blnCertofCleanBit
                If bv_i64InvoicingPartyId <> Nothing And bv_i64InvoicingPartyId <> 0 Then
                    .Item(RepairEstimateData.INVCNG_PRTY_ID) = bv_i64InvoicingPartyId
                Else
                    .Item(RepairEstimateData.INVCNG_PRTY_ID) = DBNull.Value
                End If
                If bv_intPrevONHLocation <> Nothing Then
                    .Item(RepairEstimateData.PRV_ONH_LCTN) = bv_intPrevONHLocation
                Else
                    .Item(RepairEstimateData.PRV_ONH_LCTN) = DBNull.Value
                End If
                If bv_intMeasure <> Nothing Then
                    .Item(RepairEstimateData.MSR_ID) = bv_intMeasure
                Else
                    .Item(RepairEstimateData.MSR_ID) = DBNull.Value
                End If
                If bv_intUnit <> Nothing Then
                    .Item(RepairEstimateData.UNT_ID) = bv_intUnit
                Else
                    .Item(RepairEstimateData.UNT_ID) = DBNull.Value
                End If
                If bv_strBillTo <> Nothing Then
                    .Item(RepairEstimateData.BLL_TO) = bv_strBillTo
                Else
                    .Item(RepairEstimateData.BLL_TO) = DBNull.Value
                End If
                If bv_strBillCode <> Nothing Then
                    .Item(RepairEstimateData.BLL_CD) = bv_strBillCode
                Else
                    .Item(RepairEstimateData.BLL_CD) = DBNull.Value
                End If
                If bv_strAgentName <> Nothing Then
                    .Item(RepairEstimateData.AGNT_ID) = bv_strAgentName
                Else
                    .Item(RepairEstimateData.AGNT_ID) = DBNull.Value
                End If
                .Item(RepairEstimateData.TX_RT_PRCNT) = bv_decTaxRate
                .Item(RepairEstimateData.ESTMTN_TTL_NC) = bv_decTotalEstimateAmount
                .Item(RepairEstimateData.ORGNL_ESTMTN_AMNT_NC) = bv_decOrginalEstimate
                .Item(RepairEstimateData.APPRVL_AMNT_NC) = bv_decApprovalAmount
                .Item(RepairEstimateData.CSTMR_ESTMTN_TTL_NC) = bv_decCustomerEstimatedCost
                .Item(RepairEstimateData.CSTMR_APPRVL_AMNT_NC) = bv_decCustomerApprovedCost
            End With
            objData.InsertRow(dr, Repair_EstimateInsertQuery, br_objtrans)
            dr = Nothing
            CreateRepairEstimate = intMax
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "UpdateRepairEstimate() TABLE NAME:Repair_Estimate"

    Public Function UpdateRepairEstimate(ByVal bv_i64RepairEstimationId As Int64, _
                                         ByVal bv_i32RevisionNo As Int32, _
                                         ByVal bv_i64CustomerId As Int64, _
                                         ByVal bv_datRepairEstimationDate As DateTime, _
                                         ByVal bv_datOrginalEstimationDate As DateTime, _
                                         ByVal bv_datActivityDate As DateTime, _
                                         ByVal bv_i64EquipmentStatusId As Int64, _
                                         ByVal bv_datLastTestDate As DateTime, _
                                         ByVal bv_i64LastTestTypeId As Int64, _
                                         ByVal bv_strValidityYear As String, _
                                         ByVal bv_datNextTestDate As DateTime, _
                                         ByVal bv_strLastSurveyor As String, _
                                         ByVal bv_i64NextTestTypeId As Int64, _
                                         ByVal bv_i64RepairTypeId As Int64, _
                                         ByVal bv_blnCertofCleanBit As Boolean, _
                                         ByVal bv_i64InvoicingPartyId As Int64, _
                                         ByVal bv_decTotalAmount As Decimal, _
                                         ByVal bv_decApprovalAmount As Decimal, _
                                         ByVal bv_datApprovalDate As DateTime, _
                                         ByVal bv_strApprovalRef As String, _
                                         ByVal bv_strPartyApprovalRef As String, _
                                         ByVal bv_datSurveyDate As DateTime, _
                                         ByVal bv_strSurveyName As String, _
                                         ByVal bv_decCustomerEstimatedCost As Decimal, _
                                         ByVal bv_decCustomerApprovedCost As Decimal, _
                                         ByVal bv_strRemarks As String, _
                                         ByVal bv_i32DepotId As Int32, _
                                         ByVal bv_strModifiedBy As String, _
                                         ByVal bv_datModifiedDate As DateTime, _
                                         ByVal bv_intPrevONHLocation As String, _
                                         ByVal bv_datPrevONHDat As String, _
                                         ByVal bv_intMeasure As String, _
                                         ByVal bv_intUnit As String, _
                                         ByVal bv_strBillTo As String, _
                                         ByVal bv_strAgentId As String, _
                                         ByVal bv_strTaxRate As String, _
                                         ByVal bv_strConsignee As String, _
                                         ByVal bv_i64StatusId As Int64, _
                                         ByVal bv_strBillCode As String, _
                                         ByRef br_objtrans As Transactions) As Boolean
        Try
            Dim dr As DataRow
            objData = New DataObjects()
            dr = ds.Tables(RepairEstimateData._REPAIR_ESTIMATE).NewRow()
            With dr
                .Item(RepairEstimateData.RPR_ESTMT_ID) = bv_i64RepairEstimationId
                .Item(RepairEstimateData.RVSN_NO) = bv_i32RevisionNo
                .Item(RepairEstimateData.RPR_ESTMT_DT) = bv_datRepairEstimationDate
                .Item(RepairEstimateData.ACTVTY_DT) = bv_datActivityDate
                .Item(RepairEstimateData.EQPMNT_STTS_ID) = bv_i64EquipmentStatusId
                .Item(RepairEstimateData.CSTMR_ID) = bv_i64CustomerId
                .Item(RepairEstimateData.DPT_ID) = bv_i32DepotId
                .Item(RepairEstimateData.SRVYR_NM) = bv_strSurveyName

                If bv_i64RepairTypeId <> 0 Then
                    .Item(RepairEstimateData.RPR_TYP_ID) = bv_i64RepairTypeId
                Else
                    .Item(RepairEstimateData.RPR_TYP_ID) = DBNull.Value
                End If
                If bv_strModifiedBy <> Nothing Then
                    .Item(RepairEstimateData.MDFD_BY) = bv_strModifiedBy
                Else
                    .Item(RepairEstimateData.MDFD_BY) = DBNull.Value
                End If
                If bv_strRemarks <> Nothing Then
                    .Item(RepairEstimateData.RMRKS_VC) = bv_strRemarks
                Else
                    .Item(RepairEstimateData.RMRKS_VC) = DBNull.Value
                End If
                If bv_strApprovalRef <> Nothing Then
                    .Item(RepairEstimateData.OWNR_APPRVL_RF) = bv_strApprovalRef
                Else
                    .Item(RepairEstimateData.OWNR_APPRVL_RF) = DBNull.Value
                End If
                If bv_strPartyApprovalRef <> Nothing Then
                    .Item(RepairEstimateData.PRTY_APPRVL_RF) = bv_strPartyApprovalRef
                Else
                    .Item(RepairEstimateData.PRTY_APPRVL_RF) = DBNull.Value
                End If
                .Item(RepairEstimateData.CRT_OF_CLNLNSS_BT) = bv_blnCertofCleanBit

                If bv_i64InvoicingPartyId <> 0 Then
                    .Item(RepairEstimateData.INVCNG_PRTY_ID) = bv_i64InvoicingPartyId
                Else
                    .Item(RepairEstimateData.INVCNG_PRTY_ID) = DBNull.Value
                End If
                If bv_datModifiedDate = sqlDbnull Then
                    .Item(RepairEstimateData.MDFD_DT) = DBNull.Value
                Else
                    .Item(RepairEstimateData.MDFD_DT) = bv_datModifiedDate
                End If
                If bv_intPrevONHLocation <> 0 Then
                    .Item(RepairEstimateData.PRV_ONH_LCTN) = bv_intPrevONHLocation
                Else
                    .Item(RepairEstimateData.PRV_ONH_LCTN) = DBNull.Value
                End If
                If bv_intMeasure <> Nothing Then
                    .Item(RepairEstimateData.MSR_ID) = bv_intMeasure
                Else
                    .Item(RepairEstimateData.MSR_ID) = DBNull.Value
                End If
                If bv_intUnit <> Nothing Then
                    .Item(RepairEstimateData.UNT_ID) = bv_intUnit
                Else
                    .Item(RepairEstimateData.UNT_ID) = DBNull.Value
                End If
                If bv_strBillTo <> Nothing Then
                    .Item(RepairEstimateData.BLL_TO) = bv_strBillTo
                Else
                    .Item(RepairEstimateData.BLL_TO) = DBNull.Value
                End If
                If bv_strAgentId <> Nothing Then
                    .Item(RepairEstimateData.AGNT_ID) = bv_strAgentId
                Else
                    .Item(RepairEstimateData.AGNT_ID) = DBNull.Value
                End If
                If bv_strTaxRate <> Nothing Then
                    .Item(RepairEstimateData.TX_RT_PRCNT) = bv_strTaxRate
                Else
                    .Item(RepairEstimateData.TX_RT_PRCNT) = DBNull.Value
                End If
                If bv_strConsignee <> Nothing Then
                    .Item(RepairEstimateData.CNSGNE) = bv_strConsignee
                Else
                    .Item(RepairEstimateData.CNSGNE) = DBNull.Value
                End If
                .Item(RepairEstimateData.STTS_ID) = bv_i64StatusId

                If bv_datPrevONHDat <> Nothing Then
                    .Item(RepairEstimateData.PRV_ONH_LCTN_DT) = bv_datPrevONHDat
                Else
                    .Item(RepairEstimateData.PRV_ONH_LCTN_DT) = DBNull.Value
                End If

                .Item(RepairEstimateData.ESTMTN_TTL_NC) = bv_decTotalAmount
                .Item(RepairEstimateData.APPRVL_AMNT_NC) = bv_decApprovalAmount
                .Item(RepairEstimateData.CSTMR_ESTMTN_TTL_NC) = bv_decCustomerEstimatedCost
                .Item(RepairEstimateData.CSTMR_APPRVL_AMNT_NC) = bv_decCustomerApprovedCost

                If bv_strBillCode <> Nothing Then
                    .Item(RepairEstimateData.BLL_CD) = bv_strBillCode
                Else
                    .Item(RepairEstimateData.BLL_CD) = DBNull.Value
                End If

            End With
            UpdateRepairEstimate = objData.UpdateRow(dr, Repair_EstimateUpdateQuery, br_objtrans)
            dr = Nothing
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region

#Region "CreateRepairEstimateDetail() TABLE NAME:Repair_Estimate_Detail"

    Public Function CreateRepairEstimateDetail(ByVal bv_i64RepairEstimationId As Int64, _
                                               ByVal bv_i64ItemId As Int64, _
                                               ByVal bv_i64SubItemId As Int64, _
                                               ByVal bv_i64DamageId As Int64, _
                                               ByVal bv_i64RepairId As Int64, _
                                               ByVal bv_decLaborHours As Decimal, _
                                               ByVal bv_strDamageDescription As String, _
                                               ByVal bv_decLaborRate As Decimal, _
                                               ByVal bv_decLaborRateCost As Decimal, _
                                               ByVal bv_decMaterialCost As Decimal, _
                                               ByVal bv_decTotalCost As Decimal, _
                                               ByVal bv_i64ResponsibilityId As Int64, _
                                               ByVal bv_blnCheckBit As Boolean, _
                                               ByVal bv_strMaterialCD As String, _
                                               ByVal bv_i64TxRespId As String, _
                                               ByVal bv_strRemarks As String, _
                                               ByVal bv_blnTrariffStatus As Boolean, _
                                               ByVal bv_i64TrariffDetailId As Int64, _
                                               ByRef br_objTrans As Transactions) As Long
        Try
            Dim dr As DataRow
            Dim intMax As Long
            objData = New DataObjects()
            dr = ds.Tables(RepairEstimateData._REPAIR_ESTIMATE_DETAIL).NewRow()
            With dr
                intMax = CommonUIs.GetIdentityValue(RepairEstimateData._REPAIR_ESTIMATE_DETAIL, br_objTrans)
                .Item(RepairEstimateData.RPR_ESTMT_DTL_ID) = intMax
                .Item(RepairEstimateData.RPR_ESTMT_ID) = bv_i64RepairEstimationId
                If bv_strDamageDescription <> Nothing Then
                    .Item(RepairEstimateData.DMG_RPR_DSCRPTN) = bv_strDamageDescription
                Else
                    .Item(RepairEstimateData.DMG_RPR_DSCRPTN) = DBNull.Value
                End If
                If bv_i64ItemId <> 0 Then
                    .Item(RepairEstimateData.ITM_ID) = bv_i64ItemId
                Else
                    .Item(RepairEstimateData.ITM_ID) = DBNull.Value
                End If

                If bv_i64RepairId <> 0 Then
                    .Item(RepairEstimateData.RPR_ID) = bv_i64RepairId
                Else
                    .Item(RepairEstimateData.RPR_ID) = DBNull.Value
                End If
                If bv_i64SubItemId <> 0 Then
                    .Item(RepairEstimateData.SB_ITM_ID) = bv_i64SubItemId
                Else
                    .Item(RepairEstimateData.SB_ITM_ID) = DBNull.Value
                End If
                If bv_i64DamageId <> 0 Then
                    .Item(RepairEstimateData.DMG_ID) = bv_i64DamageId
                Else
                    .Item(RepairEstimateData.DMG_ID) = DBNull.Value
                End If
                .Item(RepairEstimateData.LBR_HRS) = bv_decLaborHours
                .Item(RepairEstimateData.LBR_RT) = bv_decLaborRate
                .Item(RepairEstimateData.LBR_HR_CST_NC) = bv_decLaborRateCost
                .Item(RepairEstimateData.MTRL_CST_NC) = bv_decMaterialCost
                .Item(RepairEstimateData.TTL_CST_NC) = bv_decTotalCost
                .Item(RepairEstimateData.TX_RSPNSBLTY_ID) = bv_i64TxRespId
                If bv_strMaterialCD <> Nothing Then
                    .Item(RepairEstimateData.MTRL_CD) = bv_strMaterialCD
                Else
                    .Item(RepairEstimateData.MTRL_CD) = DBNull.Value
                End If
                If bv_strRemarks <> String.Empty Then
                    .Item(RepairEstimateData.RMRKS) = bv_strRemarks
                Else
                    .Item(RepairEstimateData.RMRKS) = DBNull.Value
                End If
                If bv_i64ResponsibilityId <> 0 Then
                    .Item(RepairEstimateData.RSPNSBLTY_ID) = bv_i64ResponsibilityId
                Else
                    .Item(RepairEstimateData.RSPNSBLTY_ID) = DBNull.Value
                End If
                .Item(RepairEstimateData.CHK_BT) = bv_blnCheckBit
                .Item(RepairEstimateData.CHNG_BIT) = bv_blnTrariffStatus

                If bv_i64TrariffDetailId <> Nothing Then
                    .Item(RepairEstimateData.TRFF_CD_DTL_ID) = bv_i64TrariffDetailId
                Else
                    .Item(RepairEstimateData.TRFF_CD_DTL_ID) = DBNull.Value
                End If

            End With
            objData.InsertRow(dr, Repair_Estimate_DetailInsertQuery, br_objTrans)
            dr = Nothing
            CreateRepairEstimateDetail = intMax
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "UpdateRepairEstimateDetail() TABLE NAME:Repair_Estimate_Detail"

    Public Function UpdateRepairEstimateDetail(ByVal bv_i64RepairEstimateDetailId As Int64, _
                                               ByVal bv_i64RepairEstimationId As Int64, _
                                               ByVal bv_i64ItemId As Int64, _
                                               ByVal bv_i64SubItemId As Int64, _
                                               ByVal bv_i64DamageId As Int64, _
                                               ByVal bv_i64RepairId As Int64, _
                                               ByVal bv_decLaborHours As Decimal, _
                                               ByVal bv_strDamageDescription As String, _
                                               ByVal bv_decLaborRate As Decimal, _
                                               ByVal bv_decLaborRateCost As Decimal, _
                                               ByVal bv_decMaterialCost As Decimal, _
                                               ByVal bv_decTotalCost As Decimal, _
                                               ByVal bv_i64ResponsibilityId As Int64, _
                                               ByVal bv_blnCheckBit As Boolean, _
                                               ByRef br_objTrans As Transactions) As Boolean
        Try
            Dim dr As DataRow
            objData = New DataObjects()
            dr = ds.Tables(RepairEstimateData._REPAIR_ESTIMATE_DETAIL).NewRow()
            With dr
                .Item(RepairEstimateData.RPR_ESTMT_DTL_ID) = bv_i64RepairEstimateDetailId
                .Item(RepairEstimateData.RPR_ESTMT_ID) = bv_i64RepairEstimationId
                If bv_strDamageDescription <> Nothing Then
                    .Item(RepairEstimateData.DMG_RPR_DSCRPTN) = bv_strDamageDescription
                Else
                    .Item(RepairEstimateData.DMG_RPR_DSCRPTN) = DBNull.Value
                End If
                If bv_i64ItemId <> 0 Then
                    .Item(RepairEstimateData.ITM_ID) = bv_i64ItemId
                Else
                    .Item(RepairEstimateData.ITM_ID) = DBNull.Value
                End If

                If bv_i64RepairId <> 0 Then
                    .Item(RepairEstimateData.RPR_ID) = bv_i64RepairId
                Else
                    .Item(RepairEstimateData.RPR_ID) = DBNull.Value
                End If
                If bv_i64SubItemId <> 0 Then
                    .Item(RepairEstimateData.SB_ITM_ID) = bv_i64SubItemId
                Else
                    .Item(RepairEstimateData.SB_ITM_ID) = DBNull.Value
                End If
                If bv_i64DamageId <> 0 Then
                    .Item(RepairEstimateData.DMG_ID) = bv_i64DamageId
                Else
                    .Item(RepairEstimateData.DMG_ID) = DBNull.Value
                End If
                .Item(RepairEstimateData.LBR_HRS) = bv_decLaborHours
                .Item(RepairEstimateData.LBR_RT) = bv_decLaborRate
                .Item(RepairEstimateData.LBR_HR_CST_NC) = bv_decLaborRateCost
                .Item(RepairEstimateData.MTRL_CST_NC) = bv_decMaterialCost
                .Item(RepairEstimateData.TTL_CST_NC) = bv_decTotalCost
                If bv_i64ResponsibilityId <> 0 Then
                    .Item(RepairEstimateData.RSPNSBLTY_ID) = bv_i64ResponsibilityId
                Else
                    .Item(RepairEstimateData.RSPNSBLTY_ID) = DBNull.Value
                End If
                .Item(RepairEstimateData.CHK_BT) = bv_blnCheckBit
            End With
            UpdateRepairEstimateDetail = objData.UpdateRow(dr, Repair_Estimate_DetailUpdateQuery, br_objTrans)
            dr = Nothing
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "DeleteRepairEstimateDetail() TABLE NAME:Repair_Estimate_Detail"

    Public Function DeleteRepairEstimateDetail(ByVal bv_i64RepairEstimationDetailId As Int64, ByRef br_objtrans As Transactions) As Boolean

        Dim dr As DataRow
        objData = New DataObjects()
        Try
            dr = ds.Tables(RepairEstimateData._REPAIR_ESTIMATE_DETAIL).NewRow()
            With dr
                .Item(RepairEstimateData.RPR_ESTMT_DTL_ID) = bv_i64RepairEstimationDetailId
            End With
            DeleteRepairEstimateDetail = objData.DeleteRow(dr, Repair_Estimate_DetailDeleteQuery, br_objtrans)
            dr = Nothing
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region

#Region "CreateRepairEstimateDetailRet() TABLE NAME:Repair_Estimate_Detail_Ret"

    Public Function CreateRepairEstimateDetailRet(ByVal bv_i64RepairEstimateDetailId As Int64, _
                                                  ByVal bv_strTRANSMISSION_NO As String, _
                                                  ByVal bv_strTRNSXN As String, _
                                                  ByVal bv_i32REVISION As Int32, _
                                                  ByVal bv_datESTIM_DATE As DateTime, _
                                                  ByVal bv_strUNIT_NBR As String, _
                                                  ByVal bv_strLABOR_RATE As String, _
                                                  ByVal bv_strREPAIR As String, _
                                                  ByVal bv_i32Repeats As Int32, _
                                                  ByVal bv_strDAMAGE As String, _
                                                  ByVal bv_dblHOURS As Double, _
                                                  ByVal bv_dblMAT_COST As Double, _
                                                  ByVal bv_strDMGREP_DESC As String, _
                                                  ByVal bv_strSTATUS As String, _
                                                  ByVal bv_i64SNo As Int64, _
                                                  ByVal bv_i32LIVE_STATUS As Int32, _
                                                  ByVal bv_lngLine As Int64, _
                                                  ByVal bv_strWD_PTY_RSPONS As String, _
                                                  ByVal bv_strItem As String, _
                                                  ByVal bv_strsubItem As String, _
                                                  ByVal bv_strUnitCode As String, _
                                                  ByVal bv_strMatCode As String, _
                                                  ByRef br_objtrans As Transactions) As Long
        Try
            Dim dr As DataRow
            Dim intMax As Long
            objData = New DataObjects()
            dr = ds.Tables(RepairEstimateData._REPAIR_ESTIMATE_DETAIL_RET).NewRow()
            With dr
                intMax = CommonUIs.GetIdentityValue(RepairEstimateData._REPAIR_ESTIMATE_DETAIL_RET, br_objtrans)
                .Item(RepairEstimateData.WD_SNO) = intMax
                .Item(RepairEstimateData.WD_RPR_ESTMT_DTL_ID) = bv_i64RepairEstimateDetailId
                .Item(RepairEstimateData.WD_TRANSMISSION_NO) = bv_strTRANSMISSION_NO
                .Item(RepairEstimateData.WD_TRNSXN) = bv_strTRNSXN
                .Item(RepairEstimateData.WD_REVISION) = bv_i32REVISION
                .Item(RepairEstimateData.WD_ESTIM_DATE) = bv_datESTIM_DATE
                .Item(RepairEstimateData.WD_UNIT_NBR) = bv_strUNIT_NBR
                .Item(RepairEstimateData.WD_LABOR_RATE) = bv_strLABOR_RATE
                .Item(RepairEstimateData.WD_REPAIR) = bv_strREPAIR
                .Item(RepairEstimateData.WD_REPEATS) = bv_i32Repeats
                .Item(RepairEstimateData.WD_DAMAGE) = bv_strDAMAGE
                .Item(RepairEstimateData.WD_HOURS) = bv_dblHOURS
                .Item(RepairEstimateData.WD_MAT_COST) = bv_dblMAT_COST
                .Item(RepairEstimateData.WD_DMGREP_DESC) = bv_strDMGREP_DESC
                .Item(RepairEstimateData.WD_STATUS) = bv_strSTATUS
                .Item(RepairEstimateData.WM_SNO) = bv_i64SNo
                .Item(RepairEstimateData.WD_LINE) = bv_lngLine
                .Item(RepairEstimateData.WD_PTY_RSPONS) = bv_strWD_PTY_RSPONS
                '''
                .Item(RepairEstimateData.WD_COMPONENT) = bv_strItem
                .Item(RepairEstimateData.WD_LOCATION) = bv_strsubItem
                If bv_i32LIVE_STATUS <> 0 Then
                    .Item(RepairEstimateData.WD_LIVE_STATUS) = bv_i32LIVE_STATUS
                Else
                    .Item(RepairEstimateData.WD_LIVE_STATUS) = DBNull.Value
                End If

                If bv_strUnitCode <> Nothing Then
                    .Item(RepairEstimateData.WD_UNITS) = bv_strUnitCode
                Else
                    .Item(RepairEstimateData.WD_UNITS) = DBNull.Value
                End If
                If bv_strMatCode <> Nothing And bv_strMatCode <> "NULL" Then
                    .Item(RepairEstimateData.WD_COMP_MATL) = bv_strMatCode
                Else
                    .Item(RepairEstimateData.WD_COMP_MATL) = DBNull.Value
                End If

            End With
            objData.InsertRow(dr, Repair_Estimate_Detail_RetInsertQuery, br_objtrans)
            dr = Nothing
            CreateRepairEstimateDetailRet = intMax
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "UpdateRepairEstimateDetailRet() TABLE NAME:Repair_Estimate_Detail_Ret"

    Public Function UpdateRepairEstimateDetailRet(ByVal bv_i64RepairEstimateDetailId As Int64, _
                                                  ByVal bv_strTRANSMISSION_NO As String, _
                                                  ByVal bv_strTRNSXN As String, _
                                                  ByVal bv_i32REVISION As Int32, _
                                                  ByVal bv_datESTIM_DATE As DateTime, _
                                                  ByVal bv_strUNIT_NBR As String, _
                                                  ByVal bv_strLABOR_RATE As String, _
                                                  ByVal bv_strREPAIR As String, _
                                                  ByVal bv_strDAMAGE As String, _
                                                  ByVal bv_dblHOURS As Double, _
                                                  ByVal bv_dblMAT_COST As Double, _
                                                  ByVal bv_strDMGREP_DESC As String, _
                                                  ByVal bv_strSTATUS As String, _
                                                  ByVal bv_i64SNo As Int64, _
                                                  ByVal bv_i32LIVE_STATUS As Int32, _
                                                  ByRef br_objtrans As Transactions) As Long
        Try
            Dim dr As DataRow
            objData = New DataObjects()
            dr = ds.Tables(RepairEstimateData._REPAIR_ESTIMATE_DETAIL_RET).NewRow()
            With dr
                .Item(RepairEstimateData.WD_RPR_ESTMT_DTL_ID) = bv_i64RepairEstimateDetailId
                .Item(RepairEstimateData.WD_TRANSMISSION_NO) = bv_strTRANSMISSION_NO
                .Item(RepairEstimateData.WD_TRNSXN) = bv_strTRNSXN
                .Item(RepairEstimateData.WD_REVISION) = bv_i32REVISION
                .Item(RepairEstimateData.WD_ESTIM_DATE) = bv_datESTIM_DATE
                .Item(RepairEstimateData.WD_UNIT_NBR) = bv_strUNIT_NBR
                .Item(RepairEstimateData.WD_LABOR_RATE) = bv_strLABOR_RATE
                .Item(RepairEstimateData.WD_REPAIR) = bv_strREPAIR
                .Item(RepairEstimateData.WD_DAMAGE) = bv_strDAMAGE
                .Item(RepairEstimateData.WD_HOURS) = bv_dblHOURS
                .Item(RepairEstimateData.WD_MAT_COST) = bv_dblMAT_COST
                .Item(RepairEstimateData.WD_DMGREP_DESC) = bv_strDMGREP_DESC
                .Item(RepairEstimateData.WD_STATUS) = bv_strSTATUS
                .Item(RepairEstimateData.WM_SNO) = bv_i64SNo
                If bv_i32LIVE_STATUS <> 0 Then
                    .Item(RepairEstimateData.WD_LIVE_STATUS) = bv_i32LIVE_STATUS
                Else
                    .Item(RepairEstimateData.WD_LIVE_STATUS) = DBNull.Value
                End If
            End With
            UpdateRepairEstimateDetailRet = objData.UpdateRow(dr, Repair_Estimate_Detail_RetUpdateQuery, br_objtrans)
            dr = Nothing
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "DeleteRepairEstimateDetail() TABLE NAME:Repair_Estimate_Detail_Ret"

    Public Function DeleteRepairEstimateDetailRet(ByVal bv_i64RepairEstimationDetailId As Int64, ByRef br_objtrans As Transactions) As Boolean

        Dim dr As DataRow
        objData = New DataObjects()
        Try
            dr = ds.Tables(RepairEstimateData._REPAIR_ESTIMATE_DETAIL_RET).NewRow()
            With dr
                .Item(RepairEstimateData.WD_RPR_ESTMT_DTL_ID) = bv_i64RepairEstimationDetailId
            End With
            DeleteRepairEstimateDetailRet = objData.DeleteRow(dr, Repair_Estimate_RetDetailDeleteQuery, br_objtrans)
            dr = Nothing
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region

#Region "CreateRepairEstimateRet() TABLE NAME:Repair_Estimate_Ret"

    Public Function CreateRepairEstimateRet(ByVal bv_intEstimateid As Int64, _
                                            bv_strTRANSMISSION_NO As String, _
                                            ByVal bv_strCOMPLETE As String, _
                                            ByVal bv_strSENT_EIR As String, _
                                            ByVal bv_strSENT_DATE As String, _
                                            ByVal bv_strREC_EIR As String, _
                                            ByVal bv_strREC_DATE As String, _
                                            ByVal bv_strREC_ADDR As String, _
                                            ByVal bv_strREC_TYPE As String, _
                                            ByVal bv_strEXPORTED As String, _
                                            ByVal bv_strEXPOR_DATE As String, _
                                            ByVal bv_strIMPORTED As String, _
                                            ByVal bv_strIMPOR_DATE As String, _
                                            ByVal bv_strTRNSXN As String, _
                                            ByVal bv_strPTY_RSPONS As String, _
                                            ByVal bv_i32REVISION As Int32, _
                                            ByVal bv_datESTIM_DATE As DateTime, _
                                            ByVal bv_strUNIT_NBR As String, _
                                            ByVal bv_strREFERENCE As String, _
                                            ByVal bv_strEQUIP_TYPE As String, _
                                            ByVal bv_strEQUIP_CODE As String, _
                                            ByVal bv_strEQUIP_DESC As String, _
                                            ByVal bv_strTERM_LOCA As String, _
                                            ByVal bv_strTERM_DATE As String, _
                                            ByVal bv_strTERM_TIME As String, _
                                            ByVal bv_strLAST_OH_LOC As String, _
                                            ByVal bv_strLAST_OH_DATE As String, _
                                            ByVal bv_strCONDITION As String, _
                                            ByVal bv_strMANU_DATE As String, _
                                            ByVal bv_strCSC_REEXAM As String, _
                                            ByVal bv_strLOAD As String, _
                                            ByVal bv_strSENDER As String, _
                                            ByVal bv_strATTENTION As String, _
                                            ByVal bv_strLSR_OWNER As String, _
                                            ByVal bv_strSEND_EDI_1 As String, _
                                            ByVal bv_strSSL_LSE As String, _
                                            ByVal bv_strSEND_EDI_2 As String, _
                                            ByVal bv_strHAULIER As String, _
                                            ByVal bv_strSEND_EDI_3 As String, _
                                            ByVal bv_strDPT_TRM As String, _
                                            ByVal bv_strSEND_EDI_4 As String, _
                                            ByVal bv_strINSURER As String, _
                                            ByVal bv_strSURVEYOR As String, _
                                            ByVal bv_strOTHERS_1 As String, _
                                            ByVal bv_dblTAX_RATE As Double, _
                                            ByVal bv_strFILLER As String, _
                                            ByVal bv_strNOTE_1 As String, _
                                            ByVal bv_strNOTE_2 As String, _
                                            ByVal bv_strNOTE_3 As String, _
                                            ByVal bv_strBAS_CURR As String, _
                                            ByVal bv_dblLABOR_RATE As Double, _
                                            ByVal bv_strDPP_CURR As String, _
                                            ByVal bv_dblDPP_AMT As Double, _
                                            ByVal bv_strGrossWEIGHT As String, _
                                            ByVal bv_strMEASURE As String, _
                                            ByVal bv_strUNITS As String, _
                                            ByVal bv_strMATERIAL As String, _
                                            ByVal bv_dblU_LABOR As Double, _
                                            ByVal bv_dblU_MATERIAL As Double, _
                                            ByVal bv_dblU_HANDLING As Double, _
                                            ByVal bv_dblU_TAX As Double, _
                                            ByVal bv_dblU_TOTAL As Double, _
                                            ByVal bv_dblI_LABOR As Double, _
                                            ByVal bv_dblI_MATERIAL As Double, _
                                            ByVal bv_dblI_HANDLING As Double, _
                                            ByVal bv_dblI_TAX As Double, _
                                            ByVal bv_dblI_TOTAL As Double, _
                                            ByVal bv_dblO_LABOR As Double, _
                                            ByVal bv_dblO_MATERIAL As Double, _
                                            ByVal bv_dblO_HANDLING As Double, _
                                            ByVal bv_dblO_TAX As Double, _
                                            ByVal bv_dblO_TOTAL As Double, _
                                            ByVal bv_dblD_LABOR As Double, _
                                            ByVal bv_dblD_MATERIAL As Double, _
                                            ByVal bv_dblD_HANDLING As Double, _
                                            ByVal bv_dblD_TAX As Double, _
                                            ByVal bv_dblD_TOTAL As Double, _
                                            ByVal bv_dblS_LABOR As Double, _
                                            ByVal bv_dblS_MATERIAL As Double, _
                                            ByVal bv_dblS_HANDLING As Double, _
                                            ByVal bv_dblS_TAX As Double, _
                                            ByVal bv_dblS_TOTAL As Double, _
                                            ByVal bv_dblX_LABOR As Double, _
                                            ByVal bv_dblX_MATERIAL As Double, _
                                            ByVal bv_dblX_HANDLING As Double, _
                                            ByVal bv_dblX_TAX As Double, _
                                            ByVal bv_dblX_TOTAL As Double, _
                                            ByVal bv_dblEST_TOTAL As Double, _
                                            ByVal bv_strADVICE As String, _
                                            ByVal bv_strEIR_NUM As String, _
                                            ByVal bv_strAUTH_NUM As String, _
                                            ByVal bv_dblAUTH_AMT As Double, _
                                            ByVal bv_strAUTH_PTY As String, _
                                            ByVal bv_strAUTH_DATE As String, _
                                            ByVal bv_strO_ESTIM_DATE As String, _
                                            ByVal bv_strOTHERS_2 As String, _
                                            ByVal bv_strSEND_EDI_5 As String, _
                                            ByVal bv_strSEND_EDI_6 As String, _
                                            ByVal bv_strSEND_EDI_7 As String, _
                                            ByVal bv_strSEND_EDI_8 As String, _
                                            ByVal bv_strNOTE_4 As String, _
                                            ByVal bv_strNOTE_5 As String, _
                                            ByVal bv_strWEIGHT_2 As String, _
                                            ByVal bv_strMEASURE_2 As String, _
                                            ByVal bv_strINVOICE_TYPE As String, _
                                            ByVal bv_strODOMETER_HOURS As String, _
                                            ByVal bv_strOUT_SVC_DATE As String, _
                                            ByVal bv_strRET_SVC_DATE As String, _
                                            ByVal bv_strOWN_INSP_DATE As String, _
                                            ByVal bv_strMECHANIC_NAME As String, _
                                            ByVal bv_strBILLEE_CODE As String, _
                                            ByVal bv_strSUB_REPAIR_TYPE As String, _
                                            ByVal bv_strOUT_SVC_TIME As String, _
                                            ByVal bv_strRET_SVC_TIME As String, _
                                            ByVal bv_strEXCHG_RATE As String, _
                                            ByVal bv_strSTATUS As String, _
                                            ByVal bv_datPICK_DATE As DateTime, _
                                            ByVal bv_strESTSTATUS As String, _
                                            ByVal bv_strErrors As String, _
                                            ByVal bv_strMatchStatus As String, _
                                            ByVal bv_strERRSTATUS As String, _
                                            ByVal bv_strUSERNAME As String, _
                                            ByVal bv_i32LIVE_STATUS As Int32, _
                                            ByVal bv_dblEST_TOTAL_TAXED As Double, _
                                            ByVal bv_dblCC_TOTAL As Double, _
                                            ByVal bv_dblSRVC_TAX_RATE As Double, _
                                            ByVal bv_dblTOTAL_LABOR_COST As Double, _
                                            ByVal bv_dblTOTAL_SRVC_TAX As Double, _
                                            ByVal bv_strEQUIP_SIZE As String, _
                                            ByVal bv_strYARD_LOC As String, _
                                            ByVal bv_strRCESTSTATUS As String, _
                                            ByVal bv_strESTIMATE_TYPE As String, _
                                            ByRef br_objtrans As Transactions) As Long
        Try
            Dim dr As DataRow
            Dim intMax As Long
            objData = New DataObjects()
            dr = ds.Tables(RepairEstimateData._REPAIR_ESTIMATE_RET).NewRow()
            With dr
                intMax = CommonUIs.GetIdentityValue(RepairEstimateData._REPAIR_ESTIMATE_RET, br_objtrans)
                .Item(RepairEstimateData.WM_SNO) = bv_intEstimateid
                .Item(RepairEstimateData.WM_TRANSMISSION_NO) = bv_strTRANSMISSION_NO
                .Item(RepairEstimateData.WM_COMPLETE) = bv_strCOMPLETE
                .Item(RepairEstimateData.WM_SENT_EIR) = bv_strSENT_EIR
                .Item(RepairEstimateData.WM_SENT_DATE) = bv_strSENT_DATE
                .Item(RepairEstimateData.WM_REC_EIR) = bv_strREC_EIR
                .Item(RepairEstimateData.WM_REC_DATE) = bv_strREC_DATE
                .Item(RepairEstimateData.WM_REC_ADDR) = bv_strREC_ADDR
                .Item(RepairEstimateData.WM_REC_TYPE) = bv_strREC_TYPE
                .Item(RepairEstimateData.WM_EXPORTED) = bv_strEXPORTED
                .Item(RepairEstimateData.WM_EXPOR_DATE) = bv_strEXPOR_DATE
                .Item(RepairEstimateData.WM_IMPORTED) = bv_strIMPORTED
                .Item(RepairEstimateData.WM_IMPOR_DATE) = bv_strIMPOR_DATE
                .Item(RepairEstimateData.WM_TRNSXN) = bv_strTRNSXN
                .Item(RepairEstimateData.WM_PTY_RSPONS) = bv_strPTY_RSPONS
                .Item(RepairEstimateData.WM_REVISION) = bv_i32REVISION
                .Item(RepairEstimateData.WM_ESTIM_DATE) = bv_datESTIM_DATE
                .Item(RepairEstimateData.WM_UNIT_NBR) = bv_strUNIT_NBR
                If bv_strREFERENCE <> Nothing Then
                    .Item(RepairEstimateData.WM_REFERENCE) = bv_strREFERENCE
                Else
                    .Item(RepairEstimateData.WM_REFERENCE) = " "
                End If
                .Item(RepairEstimateData.WM_EQUIP_TYPE) = bv_strEQUIP_TYPE
                .Item(RepairEstimateData.WM_EQUIP_CODE) = bv_strEQUIP_CODE
                .Item(RepairEstimateData.WM_EQUIP_DESC) = bv_strEQUIP_DESC
                .Item(RepairEstimateData.WM_TERM_LOCA) = bv_strTERM_LOCA
                .Item(RepairEstimateData.WM_TERM_DATE) = bv_strTERM_DATE
                .Item(RepairEstimateData.WM_TERM_TIME) = bv_strTERM_TIME
                If bv_strLAST_OH_LOC <> Nothing Then
                    .Item(RepairEstimateData.WM_LAST_OH_LOC) = bv_strLAST_OH_LOC
                Else
                    .Item(RepairEstimateData.WM_LAST_OH_LOC) = " "
                End If
                If bv_strLAST_OH_DATE <> Nothing And bv_strLAST_OH_DATE <> sqlDtnull Then
                    .Item(RepairEstimateData.WM_LAST_OH_DATE) = bv_strLAST_OH_DATE
                Else
                    .Item(RepairEstimateData.WM_LAST_OH_DATE) = " "
                End If
                .Item(RepairEstimateData.WM_CONDITION) = bv_strCONDITION
                If bv_strMANU_DATE <> Nothing And bv_strMANU_DATE <> sqlMnthnull Then
                    .Item(RepairEstimateData.WM_MANU_DATE) = bv_strMANU_DATE
                Else
                    .Item(RepairEstimateData.WM_MANU_DATE) = " "
                End If
                .Item(RepairEstimateData.WM_CSC_REEXAM) = bv_strCSC_REEXAM
                .Item(RepairEstimateData.WM_LOAD) = bv_strLOAD
                .Item(RepairEstimateData.WM_SENDER) = bv_strSENDER
                .Item(RepairEstimateData.WM_ATTENTION) = bv_strATTENTION
                .Item(RepairEstimateData.WM_LSR_OWNER) = bv_strLSR_OWNER
                .Item(RepairEstimateData.WM_SEND_EDI_1) = bv_strSEND_EDI_1
                .Item(RepairEstimateData.WM_SSL_LSE) = bv_strSSL_LSE
                .Item(RepairEstimateData.WM_SEND_EDI_2) = bv_strSEND_EDI_2
                .Item(RepairEstimateData.WM_HAULIER) = bv_strHAULIER
                .Item(RepairEstimateData.WM_SEND_EDI_3) = bv_strSEND_EDI_3
                .Item(RepairEstimateData.WM_DPT_TRM) = bv_strDPT_TRM
                .Item(RepairEstimateData.WM_SEND_EDI_4) = bv_strSEND_EDI_4
                .Item(RepairEstimateData.WM_INSURER) = bv_strINSURER
                If bv_strSURVEYOR <> Nothing Then
                    .Item(RepairEstimateData.WM_SURVEYOR) = bv_strSURVEYOR
                Else
                    .Item(RepairEstimateData.WM_SURVEYOR) = " "
                End If
                .Item(RepairEstimateData.WM_OTHERS_1) = bv_strOTHERS_1
                .Item(RepairEstimateData.WM_TAX_RATE) = bv_dblTAX_RATE
                .Item(RepairEstimateData.WM_FILLER) = bv_strFILLER
                If bv_strNOTE_1 <> Nothing Then
                    .Item(RepairEstimateData.WM_NOTE_1) = bv_strNOTE_1
                Else
                    .Item(RepairEstimateData.WM_NOTE_1) = " "
                End If
                .Item(RepairEstimateData.WM_NOTE_2) = bv_strNOTE_2
                .Item(RepairEstimateData.WM_NOTE_3) = bv_strNOTE_3
                If bv_strBAS_CURR <> Nothing Then
                    .Item(RepairEstimateData.WM_BAS_CURR) = bv_strBAS_CURR
                Else
                    .Item(RepairEstimateData.WM_BAS_CURR) = " "
                End If
                If bv_dblLABOR_RATE <> Nothing Then
                    .Item(RepairEstimateData.WM_LABOR_RATE) = bv_dblLABOR_RATE
                Else
                    .Item(RepairEstimateData.WM_LABOR_RATE) = 0
                End If
                If bv_strDPP_CURR <> Nothing Then
                    .Item(RepairEstimateData.WM_DPP_CURR) = bv_strDPP_CURR
                Else
                    .Item(RepairEstimateData.WM_DPP_CURR) = " "
                End If
                .Item(RepairEstimateData.WM_DPP_AMT) = bv_dblDPP_AMT
                If bv_strGrossWEIGHT <> Nothing Then
                    .Item(RepairEstimateData.WM_WEIGHT) = bv_strGrossWEIGHT
                Else
                    .Item(RepairEstimateData.WM_WEIGHT) = " "
                End If
                If bv_strMEASURE <> Nothing Then
                    .Item(RepairEstimateData.WM_MEASURE) = bv_strMEASURE
                Else
                    .Item(RepairEstimateData.WM_MEASURE) = " "
                End If
                If bv_strUNITS <> Nothing Then
                    .Item(RepairEstimateData.WM_UNITS) = bv_strUNITS
                Else
                    .Item(RepairEstimateData.WM_UNITS) = " "
                End If
                .Item(RepairEstimateData.WM_MATERIAL) = bv_strMATERIAL
                .Item(RepairEstimateData.WM_U_LABOR) = bv_dblU_LABOR
                .Item(RepairEstimateData.WM_U_MATERIAL) = bv_dblU_MATERIAL
                .Item(RepairEstimateData.WM_U_HANDLING) = bv_dblU_HANDLING
                .Item(RepairEstimateData.WM_U_TAX) = bv_dblU_TAX
                .Item(RepairEstimateData.WM_U_TOTAL) = bv_dblU_TOTAL
                .Item(RepairEstimateData.WM_I_LABOR) = bv_dblI_LABOR
                .Item(RepairEstimateData.WM_I_MATERIAL) = bv_dblI_MATERIAL
                .Item(RepairEstimateData.WM_I_HANDLING) = bv_dblI_HANDLING
                .Item(RepairEstimateData.WM_I_TAX) = bv_dblI_TAX
                .Item(RepairEstimateData.WM_I_TOTAL) = bv_dblI_TOTAL
                .Item(RepairEstimateData.WM_O_LABOR) = bv_dblO_LABOR
                .Item(RepairEstimateData.WM_O_MATERIAL) = bv_dblO_MATERIAL
                .Item(RepairEstimateData.WM_O_HANDLING) = bv_dblO_HANDLING
                .Item(RepairEstimateData.WM_O_TAX) = bv_dblO_TAX
                .Item(RepairEstimateData.WM_O_TOTAL) = bv_dblO_TOTAL
                .Item(RepairEstimateData.WM_D_LABOR) = bv_dblD_LABOR
                .Item(RepairEstimateData.WM_D_MATERIAL) = bv_dblD_MATERIAL
                .Item(RepairEstimateData.WM_D_HANDLING) = bv_dblD_HANDLING
                .Item(RepairEstimateData.WM_D_TAX) = bv_dblD_TAX
                .Item(RepairEstimateData.WM_D_TOTAL) = bv_dblD_TOTAL
                .Item(RepairEstimateData.WM_S_LABOR) = bv_dblS_LABOR
                .Item(RepairEstimateData.WM_S_MATERIAL) = bv_dblS_MATERIAL
                .Item(RepairEstimateData.WM_S_HANDLING) = bv_dblS_HANDLING
                .Item(RepairEstimateData.WM_S_TAX) = bv_dblS_TAX
                .Item(RepairEstimateData.WM_S_TOTAL) = bv_dblS_TOTAL
                .Item(RepairEstimateData.WM_X_LABOR) = bv_dblX_LABOR
                .Item(RepairEstimateData.WM_X_MATERIAL) = bv_dblX_MATERIAL
                .Item(RepairEstimateData.WM_X_HANDLING) = bv_dblX_HANDLING
                .Item(RepairEstimateData.WM_X_TAX) = bv_dblX_TAX
                .Item(RepairEstimateData.WM_X_TOTAL) = bv_dblX_TOTAL
                .Item(RepairEstimateData.WM_EST_TOTAL) = bv_dblEST_TOTAL
                .Item(RepairEstimateData.WM_ADVICE) = bv_strADVICE
                .Item(RepairEstimateData.WM_EIR_NUM) = bv_strEIR_NUM
                If bv_strAUTH_NUM <> Nothing Then
                    .Item(RepairEstimateData.WM_AUTH_NUM) = bv_strAUTH_NUM
                Else
                    .Item(RepairEstimateData.WM_AUTH_NUM) = " "
                End If
                If bv_dblAUTH_AMT <> Nothing Then
                    .Item(RepairEstimateData.WM_AUTH_AMT) = bv_dblAUTH_AMT
                Else
                    .Item(RepairEstimateData.WM_AUTH_AMT) = 0.0
                End If

                '.Item(RepairEstimateData.WM_AUTH_PTY) = bv_strAUTH_PTY
                If bv_strAUTH_PTY <> Nothing And bv_strAUTH_PTY <> sqlDtnull Then
                    .Item(RepairEstimateData.WM_AUTH_PTY) = " "
                Else
                    .Item(RepairEstimateData.WM_AUTH_PTY) = " "
                End If
                If bv_strAUTH_DATE <> Nothing And bv_strAUTH_DATE <> sqlDtnull Then
                    .Item(RepairEstimateData.WM_AUTH_DATE) = bv_strAUTH_DATE
                Else
                    .Item(RepairEstimateData.WM_AUTH_DATE) = " "
                End If
                If bv_strO_ESTIM_DATE <> Nothing And bv_strO_ESTIM_DATE <> sqlDtnull Then
                    .Item(RepairEstimateData.WM_O_ESTIM_DATE) = bv_strO_ESTIM_DATE
                Else
                    .Item(RepairEstimateData.WM_O_ESTIM_DATE) = " "
                End If
                .Item(RepairEstimateData.WM_OTHERS_2) = bv_strOTHERS_2
                .Item(RepairEstimateData.WM_SEND_EDI_5) = bv_strSEND_EDI_5
                .Item(RepairEstimateData.WM_SEND_EDI_6) = bv_strSEND_EDI_6
                .Item(RepairEstimateData.WM_SEND_EDI_7) = bv_strSEND_EDI_7
                .Item(RepairEstimateData.WM_SEND_EDI_8) = bv_strSEND_EDI_8
                .Item(RepairEstimateData.WM_NOTE_4) = bv_strNOTE_4
                .Item(RepairEstimateData.WM_NOTE_5) = bv_strNOTE_5
                .Item(RepairEstimateData.WM_WEIGHT_2) = bv_strWEIGHT_2
                .Item(RepairEstimateData.WM_MEASURE_2) = bv_strMEASURE_2
                .Item(RepairEstimateData.WM_INVOICE_TYPE) = bv_strINVOICE_TYPE
                .Item(RepairEstimateData.WM_ODOMETER_HOURS) = bv_strODOMETER_HOURS
                .Item(RepairEstimateData.WM_OUT_SVC_DATE) = bv_strOUT_SVC_DATE
                .Item(RepairEstimateData.WM_RET_SVC_DATE) = bv_strRET_SVC_DATE
                .Item(RepairEstimateData.WM_OWN_INSP_DATE) = bv_strOWN_INSP_DATE
                .Item(RepairEstimateData.WM_MECHANIC_NAME) = bv_strMECHANIC_NAME
                .Item(RepairEstimateData.WM_BILLEE_CODE) = bv_strBILLEE_CODE
                .Item(RepairEstimateData.WM_SUB_REPAIR_TYPE) = bv_strSUB_REPAIR_TYPE
                .Item(RepairEstimateData.WM_OUT_SVC_TIME) = bv_strOUT_SVC_TIME
                .Item(RepairEstimateData.WM_RET_SVC_TIME) = bv_strRET_SVC_TIME
                If bv_strEXCHG_RATE <> Nothing Then
                    .Item(RepairEstimateData.WM_EXCHG_RATE) = bv_strEXCHG_RATE
                Else
                    .Item(RepairEstimateData.WM_EXCHG_RATE) = DBNull.Value
                End If
                .Item(RepairEstimateData.WM_STATUS) = bv_strSTATUS
                If bv_datPICK_DATE <> Nothing Then
                    .Item(RepairEstimateData.WM_PICK_DATE) = bv_datPICK_DATE
                Else
                    .Item(RepairEstimateData.WM_PICK_DATE) = DBNull.Value
                End If
                If bv_strESTSTATUS <> Nothing Then
                    .Item(RepairEstimateData.WM_ESTSTATUS) = bv_strESTSTATUS
                Else
                    .Item(RepairEstimateData.WM_ESTSTATUS) = DBNull.Value
                End If
                If bv_strErrors <> Nothing Then
                    .Item(RepairEstimateData.WM_ERRORS) = bv_strErrors
                Else
                    .Item(RepairEstimateData.WM_ERRORS) = DBNull.Value
                End If
                If bv_strMatchStatus <> Nothing Then
                    .Item(RepairEstimateData.WM_MATCHSTATUS) = bv_strMatchStatus
                Else
                    .Item(RepairEstimateData.WM_MATCHSTATUS) = DBNull.Value
                End If
                If bv_strERRSTATUS <> Nothing Then
                    .Item(RepairEstimateData.WM_ERRSTATUS) = bv_strERRSTATUS
                Else
                    .Item(RepairEstimateData.WM_ERRSTATUS) = DBNull.Value
                End If
                If bv_strUSERNAME <> Nothing Then
                    .Item(RepairEstimateData.WM_USERNAME) = bv_strUSERNAME
                Else
                    .Item(RepairEstimateData.WM_USERNAME) = DBNull.Value
                End If
                If bv_i32LIVE_STATUS <> 0 Then
                    .Item(RepairEstimateData.WM_LIVE_STATUS) = bv_i32LIVE_STATUS
                Else
                    .Item(RepairEstimateData.WM_LIVE_STATUS) = DBNull.Value
                End If
                .Item(RepairEstimateData.WM_EST_TOTAL_TAXED) = bv_dblEST_TOTAL_TAXED
                .Item(RepairEstimateData.WM_CC_TOTAL) = bv_dblCC_TOTAL
                .Item(RepairEstimateData.WM_SRVC_TAX_RATE) = bv_dblSRVC_TAX_RATE
                .Item(RepairEstimateData.WM_TOTAL_LABOR_COST) = bv_dblTOTAL_LABOR_COST
                .Item(RepairEstimateData.WM_TOTAL_SRVC_TAX) = bv_dblTOTAL_SRVC_TAX
                If bv_strEQUIP_SIZE <> Nothing Then
                    .Item(RepairEstimateData.WM_EQUIP_SIZE) = bv_strEQUIP_SIZE
                Else
                    .Item(RepairEstimateData.WM_EQUIP_SIZE) = DBNull.Value
                End If
                If bv_strYARD_LOC <> Nothing Then
                    .Item(RepairEstimateData.WM_YARD_LOC) = bv_strYARD_LOC
                Else
                    .Item(RepairEstimateData.WM_YARD_LOC) = DBNull.Value
                End If
                If bv_strRCESTSTATUS <> Nothing Then
                    .Item(RepairEstimateData.WM_RCESTSTATUS) = bv_strRCESTSTATUS
                Else
                    .Item(RepairEstimateData.WM_RCESTSTATUS) = DBNull.Value
                End If
                If bv_strESTIMATE_TYPE <> Nothing Then
                    .Item(RepairEstimateData.WM_ESTIMATE_TYPE) = bv_strESTIMATE_TYPE
                Else
                    .Item(RepairEstimateData.WM_ESTIMATE_TYPE) = DBNull.Value
                End If
            End With
            objData.InsertRow(dr, Repair_Estimate_RetInsertQuery, br_objtrans)
            dr = Nothing
            CreateRepairEstimateRet = intMax
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "UpdateRepairEstimateRet() TABLE NAME:Repair_Estimate_Ret"

    Public Function UpdateRepairEstimateRet(ByVal bv_strTRANSMISSION_NO As String, _
                                            ByVal bv_strTRNSXN As String, _
                                            ByVal bv_i32REVISION As Int32, _
                                            ByVal bv_datESTIM_DATE As DateTime, _
                                            ByVal bv_strUNIT_NBR As String, _
                                            ByVal bv_strCONDITION As String, _
                                            ByRef br_objtrans As Transactions) As Long
        Try
            Dim dr As DataRow
            objData = New DataObjects()
            dr = ds.Tables(RepairEstimateData._REPAIR_ESTIMATE_RET).NewRow()
            With dr
                .Item(RepairEstimateData.WM_TRANSMISSION_NO) = bv_strTRANSMISSION_NO
                .Item(RepairEstimateData.WM_TRNSXN) = bv_strTRNSXN
                .Item(RepairEstimateData.WM_REVISION) = bv_i32REVISION
                .Item(RepairEstimateData.WM_ESTIM_DATE) = bv_datESTIM_DATE
                .Item(RepairEstimateData.WM_UNIT_NBR) = bv_strUNIT_NBR
                .Item(RepairEstimateData.WM_CONDITION) = bv_strCONDITION
            End With
            UpdateRepairEstimateRet = objData.UpdateRow(dr, Repair_Estimate_RetUpdateQuery, br_objtrans)
            dr = Nothing
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "GetExchangeRateWithEffectiveDate"
    Public Function GetExchangeRateWithEffectiveDate(ByVal bv_i64FromCuurencyId As Int64, ByVal bv_i64ToCuurencyId As Int64, ByVal bv_datCurrentDateTime As DateTime, ByVal bv_intDepotId As Int32) As RepairEstimateDataSet
        Try
            Dim hshParameters As New Hashtable()
            hshParameters.Add(RepairEstimateData.FRM_CRRNCY_ID, bv_i64FromCuurencyId)
            hshParameters.Add(RepairEstimateData.TO_CRRNCY_ID, bv_i64ToCuurencyId)
            hshParameters.Add(RepairEstimateData.WTH_EFFCT_FRM_DT, bv_datCurrentDateTime)
            hshParameters.Add(RepairEstimateData.DPT_ID, bv_intDepotId)
            objData = New DataObjects(ExchangeRateSelectQuery, hshParameters)
            objData.Fill(ds, RepairEstimateData._EXCHANGE_RATE)
            Return ds
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region

#Region "UpdateRepairEstimate() "

    Public Function UpdateRepairEstimate(ByVal bv_StrStatus As String, ByVal bv_strYardLocation As String, ByVal bv_blnActiveBit As Boolean, _
        ByVal bv_i64EstimateID As Int64, ByVal bv_i64EquipmentStatusId As Int64, ByRef br_objtrans As Transactions) As Boolean
        Try
            Dim dr As DataRow
            objData = New DataObjects()
            dr = ds.Tables(RepairEstimateData._REPAIR_ESTIMATE).NewRow()
            With dr
                .Item(RepairEstimateData.EQPMNT_STTS_ID) = bv_i64EquipmentStatusId
                .Item(RepairEstimateData.EST_STTS) = bv_StrStatus
                'If bv_strYardLocation <> Nothing Then
                '    .Item(RepairEstimateData.YRD_LCTN) = bv_strYardLocation
                'Else
                '    .Item(RepairEstimateData.YRD_LCTN) = DBNull.Value
                'End If
                .Item(RepairEstimateData.RPR_ESTMT_ID) = bv_i64EstimateID

            End With
            UpdateRepairEstimate = objData.UpdateRow(dr, RepairEstimateCompletionUpdateQuery, br_objtrans)
            dr = Nothing
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region

#Region "CreateREPAIR_CHARGE() TABLE NAME:REPAIR_CHARGE"

    Public Function CreateRepairCharge(ByVal bv_i64CSTMR_ID As Int64, _
                                       ByVal bv_strEQPMNT_NO As String, _
                                       ByVal bv_i64EQPMNT_SZ_ID As Int64, _
                                       ByVal bv_i64EQPMNT_TYP_ID As Int64, _
                                       ByVal bv_strESTMT_NO As String, _
                                       ByVal bv_datRPR_APPRVL_DT As DateTime, _
                                       ByVal bv_datRPR_CMPLTN_DT As DateTime, _
                                       ByVal bv_strMTRL_CST_NC As Decimal, _
                                       ByVal bv_strLBR_CST_NC As Decimal, _
                                       ByVal bv_strRPR_TX_RT_NC As Decimal, _
                                       ByVal bv_strRPR_TX_AMNT_NC As Decimal, _
                                       ByVal bv_strTTL_CSTS_NC As Decimal, _
                                       ByVal bv_strRPR_APPRVL_AMNT_NC As Decimal, _
                                       ByVal bv_strBLLNG_FLG As String, _
                                       ByVal bv_blnACTV_BT As Boolean, _
                                       ByVal bv_i32DPT_ID As Int32, _
                                       ByVal bv_i64LSS_ID As Int64, _
                                       ByVal bv_strYARD_LCTN As String, _
                                       ByVal bv_strCLN_CST_NC As Decimal, _
                                       ByVal bv_strTTL_SRV_TAX As Decimal, _
                                       ByVal bv_strTTL_EST_INCL_SRV_TAX As Decimal, _
                                       ByVal bv_strINVC_TYPE As String, _
                                       ByRef br_objTrans As Transactions) As Long
        Try
            Dim dr As DataRow
            Dim intMax As Long
            objData = New DataObjects()
            dr = ds.Tables(RepairEstimateData._REPAIR_CHARGE).NewRow()
            With dr
                intMax = CommonUIs.GetIdentityValue(InvoiceData._REPAIR_CHARGE)
                .Item(RepairEstimateData.RPR_CHRG_ID) = intMax
                .Item(RepairEstimateData.CSTMR_ID) = bv_i64CSTMR_ID
                .Item(RepairEstimateData.EQPMNT_NO) = bv_strEQPMNT_NO
                .Item(RepairEstimateData.EQPMNT_SZ_ID) = bv_i64EQPMNT_SZ_ID
                .Item(RepairEstimateData.EQPMNT_TYP_ID) = bv_i64EQPMNT_TYP_ID
                .Item(RepairEstimateData.ESTMT_NO) = bv_strESTMT_NO
                .Item(RepairEstimateData.RPR_APPRVL_DT) = bv_datRPR_APPRVL_DT
                .Item(RepairEstimateData.RPR_CMPLTN_DT) = bv_datRPR_CMPLTN_DT
                .Item(RepairEstimateData.MTRL_CST_NC) = bv_strMTRL_CST_NC
                .Item(RepairEstimateData.LBR_CST_NC) = bv_strLBR_CST_NC
                .Item(RepairEstimateData.RPR_TX_RT_NC) = bv_strRPR_TX_RT_NC
                .Item(RepairEstimateData.RPR_TX_AMNT_NC) = bv_strRPR_TX_AMNT_NC
                .Item(RepairEstimateData.TTL_CSTS_NC) = bv_strTTL_CSTS_NC
                .Item(RepairEstimateData.RPR_APPRVL_AMNT_NC) = bv_strRPR_APPRVL_AMNT_NC
                .Item(RepairEstimateData.BLLNG_FLG) = bv_strBLLNG_FLG
                .Item(RepairEstimateData.ACTV_BT) = bv_blnACTV_BT
                .Item(RepairEstimateData.DPT_ID) = bv_i32DPT_ID
                If bv_i64LSS_ID <> 0 Then
                    .Item(RepairEstimateData.LSS_ID) = bv_i64LSS_ID
                Else
                    .Item(RepairEstimateData.LSS_ID) = DBNull.Value
                End If
                If bv_strYARD_LCTN <> Nothing Then
                    .Item(RepairEstimateData.YRD_LCTN) = bv_strYARD_LCTN
                Else
                    .Item(RepairEstimateData.YRD_LCTN) = DBNull.Value
                End If
                .Item(RepairEstimateData.CLN_CST_NC) = bv_strCLN_CST_NC
                .Item(RepairEstimateData.TTL_SRV_TAX) = bv_strTTL_SRV_TAX
                .Item(RepairEstimateData.TTL_EST_INCL_SRV_TAX) = bv_strTTL_EST_INCL_SRV_TAX
                If bv_strINVC_TYPE <> Nothing Then
                    .Item(RepairEstimateData.INVC_TYPE) = bv_strINVC_TYPE
                Else
                    .Item(RepairEstimateData.INVC_TYPE) = DBNull.Value
                End If
            End With
            objData.InsertRow(dr, REPAIR_CHARGEInsertQuery, br_objTrans)
            dr = Nothing
            CreateRepairCharge = intMax
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "CreateTracking() TABLE NAME:Tracking"

    Public Function CreateTracking(ByVal bv_i64CustomerId As Int64, _
                                   ByVal bv_strEquipmentNo As String, _
                                   ByVal bv_strActivityName As String, _
                                   ByVal bv_i64EqpStatusId As Int64, _
                                   ByVal bv_strActivityNo As String, _
                                   ByVal bv_datActivityDate As DateTime, _
                                   ByVal bv_strActivityRemarks As String, _
                                   ByVal bv_strGateinTransaction As String, _
                                   ByVal bv_i64InvoicingPartyId As Int64, _
                                   ByVal bv_strCreatedBy As String, _
                                   ByVal bv_datCreatedDate As DateTime, _
                                   ByVal bv_strCancelledBy As String, _
                                   ByVal bv_datCancelledDate As DateTime, _
                                   ByVal bv_strADTRemarks As String, _
                                   ByVal bv_strYardLocation As String, _
                                   ByVal bv_i32DepotId As Int32, _
                                   ByRef br_objTrans As Transactions) As Long
        Try
            Dim dr As DataRow
            Dim intMax As Long
            objData = New DataObjects()
            dr = ds.Tables(RepairEstimateData._TRACKING).NewRow()
            With dr
                intMax = CommonUIs.GetIdentityValue(RepairEstimateData._TRACKING, br_objTrans)
                .Item(RepairEstimateData.TRCKNG_ID) = intMax
                .Item(RepairEstimateData.CSTMR_ID) = bv_i64CustomerId
                .Item(RepairEstimateData.EQPMNT_NO) = bv_strEquipmentNo
                .Item(RepairEstimateData.ACTVTY_NAM) = bv_strActivityName
                .Item(RepairEstimateData.EQPMNT_STTS_ID) = bv_i64EqpStatusId
                .Item(RepairEstimateData.ACTVTY_NO) = bv_strActivityNo
                .Item(RepairEstimateData.ACTVTY_DT) = bv_datActivityDate
                If bv_strActivityRemarks <> Nothing Then
                    .Item(RepairEstimateData.ACTVTY_RMRKS) = bv_strActivityRemarks
                Else
                    .Item(RepairEstimateData.ACTVTY_RMRKS) = DBNull.Value
                End If
                .Item(RepairEstimateData.GI_TRNSCTN_NO) = bv_strGateinTransaction
                If bv_i64InvoicingPartyId <> 0 Then
                    .Item(RepairEstimateData.INVCNG_PRTY_ID) = bv_i64InvoicingPartyId
                Else
                    .Item(RepairEstimateData.INVCNG_PRTY_ID) = DBNull.Value
                End If
                .Item(RepairEstimateData.CRTD_BY) = bv_strCreatedBy
                .Item(RepairEstimateData.CRTD_DT) = bv_datCreatedDate
                If bv_strCancelledBy <> Nothing Then
                    .Item(RepairEstimateData.CNCLD_BY) = bv_strCancelledBy
                Else
                    .Item(RepairEstimateData.CNCLD_BY) = DBNull.Value
                End If
                If bv_datCancelledDate <> Nothing Then
                    .Item(RepairEstimateData.CNCLD_DT) = bv_datCancelledDate
                Else
                    .Item(RepairEstimateData.CNCLD_DT) = DBNull.Value
                End If
                If bv_strADTRemarks <> Nothing Then
                    .Item(RepairEstimateData.ADT_RMRKS) = bv_strADTRemarks
                Else
                    .Item(RepairEstimateData.ADT_RMRKS) = DBNull.Value
                End If
                If bv_strYardLocation <> Nothing Then
                    .Item(RepairEstimateData.YRD_LCTN) = bv_strYardLocation
                Else
                    .Item(RepairEstimateData.YRD_LCTN) = DBNull.Value
                End If
                .Item(RepairEstimateData.DPT_ID) = bv_i32DepotId

            End With

            objData.InsertRow(dr, TrackingInsertQuery, br_objTrans)
            dr = Nothing
            CreateTracking = intMax
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "UpdateTracking() TABLE NAME:Tracking"

    Public Function UpdateTracking(ByVal bv_strActivityName As String, _
                                   ByVal bv_strActivityRemarks As String, _
                                   ByVal bv_strGateinTranasction As String, _
                                   ByVal bv_strActivityNo As String, _
                                   ByVal bv_datActivityDate As DateTime, _
                                   ByVal bv_i64InvoicingPartyId As Int64, _
                                   ByVal bv_strCreatedBy As String, _
                                   ByVal bv_datCreatedDate As DateTime, _
                                   ByVal bv_i32DepotId As Int32, _
                                   ByVal bv_strEquipmentInformationRemarks As String, _
                                   ByRef br_objTrans As Transactions) As Long
        Try
            Dim dr As DataRow
            Dim intMax As Long
            objData = New DataObjects()
            dr = ds.Tables(RepairEstimateData._TRACKING).NewRow()
            With dr
                intMax = CommonUIs.GetIdentityValue(RepairEstimateData._TRACKING, br_objTrans)
                .Item(RepairEstimateData.ACTVTY_NAM) = bv_strActivityName
                .Item(RepairEstimateData.ACTVTY_NO) = bv_strActivityNo
                .Item(RepairEstimateData.ACTVTY_DT) = bv_datActivityDate
                .Item(RepairEstimateData.ACTVTY_RMRKS) = bv_strActivityRemarks
                If bv_i64InvoicingPartyId <> 0 Then
                    .Item(RepairEstimateData.INVCNG_PRTY_ID) = bv_i64InvoicingPartyId
                Else
                    .Item(RepairEstimateData.INVCNG_PRTY_ID) = DBNull.Value
                End If
                .Item(RepairEstimateData.GI_TRNSCTN_NO) = bv_strGateinTranasction
                .Item(RepairEstimateData.MDFD_BY) = bv_strCreatedBy
                .Item(RepairEstimateData.MDFD_DT) = bv_datCreatedDate
                .Item(RepairEstimateData.DPT_ID) = bv_i32DepotId
                If bv_strEquipmentInformationRemarks <> Nothing Then
                    .Item(RepairEstimateData.EQPMNT_INFRMTN_RMRKS_VC) = bv_strEquipmentInformationRemarks
                Else
                    .Item(RepairEstimateData.EQPMNT_INFRMTN_RMRKS_VC) = DBNull.Value
                End If
                .Item(RepairEstimateData.PCKP_STTS_VC) = DBNull.Value
                .Item(RepairEstimateData.PCKP_DT) = DBNull.Value

            End With

            UpdateTracking = objData.UpdateRow(dr, TrackingUpdateQuery, br_objTrans)
            dr = Nothing
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "Get Owner Approval Amount TABLE NAME:INVENTORY"

    Public Function GetOwnerApprovalByEQPMNT_NO(ByVal bv_strEqpmntNo As String) As String
        Try
            ' Dim hshParameters As New Hashtable()
            '  hshParameters.Add(RepairEstimateData.EQPMNT_NO, bv_strEqpmntNo)
            objData = New DataObjects(Owner_ApprovalCheckQueryByEqpmntNo, RepairEstimateData.EQPMNT_NO, bv_strEqpmntNo)
            Return objData.ExecuteScalar()
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "EquipmentInformationByEqpmntNo() TABLE NAME:EQUIPMENT_INFORMATION"

    Public Function GetEquipmentInformationByEqpmntNo(ByVal bv_i32DepotID As Int32, ByVal bv_strEquipmentNo As String) As RepairEstimateDataSet
        Try
            Dim hshparameters As New Hashtable
            hshparameters.Add(RepairEstimateData.DPT_ID, bv_i32DepotID)
            hshparameters.Add(RepairEstimateData.EQPMNT_NO, bv_strEquipmentNo)
            objData = New DataObjects(V_Equipment_InformationSelectQueryByEqpmntNo, hshparameters)
            objData.Fill(CType(ds, DataSet), RepairEstimateData._V_EQUIPMENT_INFORMATION)
            Return ds
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "LaborRateperHourByCustomerID() TABLE NAME:CUSTOMER"

    Public Function LaborRateperHourByCustomerID(ByVal bv_i32DepotID As Int32, ByVal bv_i64CustomerID As Int64) As String
        Try
            Dim hshparameters As New Hashtable
            hshparameters.Add(RepairEstimateData.DPT_ID, bv_i32DepotID)
            hshparameters.Add(RepairEstimateData.CSTMR_ID, bv_i64CustomerID)
            objData = New DataObjects(CustomerLaborRateSelectQuery, hshparameters)
            Return objData.ExecuteScalar()
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "UpdateActivityStatus() TABLE NAME:Activity_Status"

    Public Function UpdateActivityStatus(ByVal bv_i64ActivityStatusId As Int64, _
                                         ByVal bv_strEquipmentNo As String, _
                                         ByVal bv_strGateinTransaction As String, _
                                         ByVal bv_strRemarks As String, _
                                         ByVal bv_strActivityName As String, _
                                         ByVal bv_datActivityDate As DateTime, _
                                         ByRef br_objTransaction As Transactions) As Boolean
        Try
            Dim dr As DataRow
            objData = New DataObjects()
            dr = ds.Tables(RepairEstimateData._ACTIVITY_STATUS).NewRow()
            With dr
                .Item(RepairEstimateData.EQPMNT_STTS_ID) = bv_i64ActivityStatusId
                .Item(RepairEstimateData.EQPMNT_NO) = bv_strEquipmentNo
                .Item(RepairEstimateData.GI_TRNSCTN_NO) = bv_strGateinTransaction
                .Item(RepairEstimateData.RMRKS_VC) = bv_strRemarks
                .Item(RepairEstimateData.ACTVTY_NAM) = bv_strActivityName
                .Item(RepairEstimateData.ACTVTY_DT) = bv_datActivityDate
            End With
            UpdateActivityStatus = objData.UpdateRow(dr, Activity_StatusUpdateQuery, br_objTransaction)
            dr = Nothing
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region

#Region "DamageCodeByActive() TABLE NAME:DAMAGE"

    Public Function DamageCodeByActive(ByVal bv_i32DepotId As Int32) As DataTable
        Try
            objData = New DataObjects(Repair_Estimate_Damage_SelectQuery, RepairEstimateData.DPT_ID, bv_i32DepotId)
            objData.Fill(CType(ds, DataSet), RepairEstimateData._REPAIRWORDER_DAMAGE)
            Return ds.Tables(RepairEstimateData._REPAIRWORDER_DAMAGE)
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "RepairCodeByActive() TABLE NAME:REPAIR"

    Public Function RepairCodeByActive(ByVal bv_i32DepotId As Integer) As DataTable
        Try
            objData = New DataObjects(Repair_Estimate_Repair_SelectQuery, RepairEstimateData.DPT_ID, bv_i32DepotId)
            objData.Fill(CType(ds, DataSet), RepairEstimateData._REPAIRWORDER_REPAIR)
            Return ds.Tables(RepairEstimateData._REPAIRWORDER_REPAIR)
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "GetItem() TABLE NAME:Item"

    Public Function GetItem(ByVal bv_strItemCode As String, ByVal bv_i32DepotId As Integer) As DataTable
        Try
            Dim hshparameters As New Hashtable
            Dim dsTemp As New RepairEstimateDataSet
            hshparameters.Add(RepairEstimateData.DPT_ID, bv_i32DepotId)
            hshparameters.Add(RepairEstimateData.ITM_CD, bv_strItemCode)
            objData = New DataObjects(ItemSelectQueryByDPT_ID, hshparameters)
            objData.Fill(CType(dsTemp, DataSet), RepairEstimateData._ITEM)
            Return dsTemp.Tables(RepairEstimateData._ITEM)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region

#Region "GetSubItem() TABLE NAME:SubItem"

    Public Function GetSubItem(ByVal bv_intDepotId As Int32) As DataTable
        Try
            Dim dt As New DataTable
            objData = New DataObjects(SubItemSelectQueryByDPT_ID, RepairEstimateData.DPT_ID, bv_intDepotId)
            objData.Fill(CType(ds, DataSet), RepairEstimateData._REPAIRWORDER_DETAIL)
            Return ds.Tables(RepairEstimateData._REPAIRWORDER_DETAIL)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region

#Region "GetRepairEstimateById() TABLE NAME:REPAIR_ESTIMATE"

    Public Function GetRepairEstimateById(ByVal bv_RepairEstimateId As Int64) As DataTable
        Try
            objData = New DataObjects(RepairEstimateSelectQueryById, RepairEstimateData.RPR_ESTMT_ID, bv_RepairEstimateId)
            objData.Fill(CType(ds, DataSet), RepairEstimateData._V_REPAIR_ESTIMATE)
            Return ds.Tables(RepairEstimateData._V_REPAIR_ESTIMATE)
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "GetRepairEstimateCustomerDetailsByCustomerId() TABLE NAME:REPAIR_ESTIMATE"

    Public Function GetRepairEstimateCustomerDetailsByCustomerId(ByVal bv_i32DepotId As Int32, ByVal bv_i64CustomerId As Int64) As RepairEstimateDataSet
        Try
            ' Dim dt As New DataTable
            Dim hshparameters As New Hashtable
            hshparameters.Add(RepairEstimateData.DPT_ID, bv_i32DepotId)
            hshparameters.Add(RepairEstimateData.CSTMR_ID, bv_i64CustomerId)
            objData = New DataObjects(V_Repair_Estimate_ReportSelectQuery, hshparameters)
            objData.Fill(CType(ds, DataSet), RepairEstimateData._V_REPAIR_ESTIMATE_REPORT)
            Return ds
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "GetLineDeatilbyTariffCodeId() TABLE NAME:TARIFF_CODE"

    Public Function GetLineDeatilbyTariffCodeId1(ByVal bv_intDepotId As Int32, _
                                                ByVal bv_strTariffCodeid As String, _
                                                ByVal bv_strTariffGroupId As String) As RepairEstimateDataSet
        Try
            Dim hshparameters As New Hashtable
            hshparameters.Add(RepairEstimateData.DPT_ID, bv_intDepotId)
            hshparameters.Add(RepairEstimateData.TRFF_CD_ID, bv_strTariffCodeid)
            hshparameters.Add(RepairEstimateData.TRFF_GRP_ID, bv_strTariffGroupId)
            objData = New DataObjects(RepairEstimateDetailSelectQueryByTariffId, hshparameters)
            objData.Fill(CType(ds, DataSet), RepairEstimateData._V_TARIFF_CODE)
            Return ds
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "GetLineDeatilbyTariffCodeId"
    Public Function GetLineDeatilbyTariffCodeId(ByVal bv_intDepotId As Int32, _
                                                ByVal bv_strTariffCodeid As String, _
                                                ByVal bv_strTariffGroupId As String) As RepairEstimateDataSet
        Try
            Dim strGroup As String = String.Concat(" AND TRFF_CD_ID IN (SELECT TRFF_CD_ID FROM TARIFF_GROUP_DETAIL WHERE  ", RepairEstimateData.TRFF_GRP_ID, " IN (", bv_strTariffGroupId, ") AND  ACTV_BT=1)")
            Dim strTariff As String = String.Concat(" AND ", RepairEstimateData.TRFF_CD_ID, " IN ('", bv_strTariffCodeid, "')")
            Dim strWhere As String = String.Concat(" WHERE ACTV_BT=1 AND ", RepairEstimateData.DPT_ID, " = ", bv_intDepotId)

            If bv_strTariffGroupId <> "" AndAlso bv_strTariffCodeid <> "" Then
                strWhere = String.Concat(strWhere, strTariff, strGroup)
            ElseIf bv_strTariffGroupId <> "" AndAlso bv_strTariffCodeid = "" Then
                strWhere = String.Concat(strWhere, strGroup)
            Else
                strWhere = String.Concat(strWhere, strTariff)
            End If

            objData = New DataObjects(String.Concat(RepairEstimateDetailSelectQueryByTariffId, strWhere, ""))
            objData.Fill(CType(ds, DataSet), RepairEstimateData._V_TARIFF_CODE)
            Return ds
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region

#Region "CheckLineDetailRecordByDetailId() TABLE NAME:REPAIR_LINE_DETAIL"

    Public Function CheckLineDetailRecordByDetailId(ByVal bv_i64RepairEstimateDetailid As Int64, ByRef br_objTrans As Transactions) As String
        Try
            Dim hshparameters As New Hashtable
            hshparameters.Add(RepairEstimateData.RPR_ESTMT_DTL_ID, bv_i64RepairEstimateDetailid)
            objData = New DataObjects(Repair_Estimate_DetailCheckQuery, hshparameters)
            Return objData.ExecuteScalar(br_objTrans)
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "GetActivityStatusByEqpmntNo() TABLE NAME:ACTIVITY_STATUS"

    Public Function GetActivityStatusByEqpmntNo(ByVal bv_intDepotId As Int32, _
                                                ByVal bv_strEquipmentNo As String, _
                                                ByVal bv_strGiTransaction As String) As RepairEstimateDataSet
        Try
            Dim dt As New DataTable
            Dim hshparameters As New Hashtable
            hshparameters.Add(RepairEstimateData.DPT_ID, bv_intDepotId)
            hshparameters.Add(RepairEstimateData.EQPMNT_NO, bv_strEquipmentNo)
            hshparameters.Add(RepairEstimateData.GI_TRNSCTN_NO, bv_strGiTransaction)
            objData = New DataObjects(ActivityStatusSelectQueryByActivityName, hshparameters)
            objData.Fill(CType(ds, DataSet), RepairEstimateData._V_ACTIVITY_STATUS)
            Return ds
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "GetTracking() TABLE NAME:Tracking"

    Public Function GetTracking(ByVal bv_strEquipmentNo As String, _
                                ByVal bv_strActivityName As String, _
                                ByVal bv_strGateinTransaction As String, _
                                ByVal bv_i32DepotId As Integer, _
                                ByRef br_objTransaction As Transactions) As DataTable
        Try
            Dim hshparameters As New Hashtable
            Dim dsTemp As New RepairEstimateDataSet
            hshparameters.Add(RepairEstimateData.EQPMNT_NO, bv_strEquipmentNo)
            hshparameters.Add(RepairEstimateData.GI_TRNSCTN_NO, bv_strGateinTransaction)
            hshparameters.Add(RepairEstimateData.ACTVTY_NAM, bv_strActivityName)
            hshparameters.Add(RepairEstimateData.DPT_ID, bv_i32DepotId)
            objData = New DataObjects(TrackingSelectCountQuery, hshparameters)
            objData.Fill(CType(ds, RepairEstimateDataSet), RepairEstimateData._TRACKING, br_objTransaction)
            Return ds.Tables(RepairEstimateData._TRACKING)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region

#Region "GetCurrencyExchangeRateByDptId() TABLE NAME:CUSTOMER"

    Public Function GetCurrencyExchangeRateByDptId(ByVal bv_i32DepotId As Int32, ByVal bv_i64CustomerId As Int64) As RepairEstimateDataSet
        Try
            ' Dim dt As New DataTable
            Dim hshparameters As New Hashtable
            hshparameters.Add(RepairEstimateData.DPT_ID, bv_i32DepotId)
            hshparameters.Add(RepairEstimateData.CSTMR_ID, bv_i64CustomerId)
            objData = New DataObjects(CustomerCurrencyExchangeSelectQuery, hshparameters)
            objData.Fill(CType(ds, DataSet), RepairEstimateData._V_REPAIR_ESTIMATE_REPORT)
            Return ds
        Catch ex As Exception
            Throw ex
        End Try
    End Function

    Public Function GetAgentCurrencyExchangeRateByDptId(ByVal bv_i32DepotId As Int32, ByVal bv_i64AgentId As Int64) As DataTable
        Try
            Dim dt As New DataTable
            Dim hshparameters As New Hashtable
            hshparameters.Add(RepairEstimateData.DPT_ID, bv_i32DepotId)
            hshparameters.Add(RepairEstimateData.AGNT_ID, bv_i64AgentId)
            objData = New DataObjects(GetAgentCurrencyExchangeRateByDptId_SelectQry, hshparameters)
            objData.Fill(dt)
            Return dt
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "UpdateEquipmentInformation() TABLE NAME: EQUIPMENT_INFORMATION"

    Public Function UpdateEquipmentInformation(ByVal bv_strEquipmentNo As String, _
                                               ByVal bv_datLastTestDate As DateTime, _
                                               ByVal bv_datNextTestDate As DateTime, _
                                               ByVal bv_i64LastTestTypeId As Int64, _
                                               ByVal bv_i64NextTestTypeId As Int64, _
                                               ByVal bv_strValidityYears As String, _
                                               ByVal bv_strLastSurveyorName As String, _
                                               ByVal bv_i32DepotId As Int32, _
                                               ByRef br_objtrans As Transactions) As Boolean
        Try
            Dim dr As DataRow
            objData = New DataObjects()
            dr = ds.Tables(RepairEstimateData._EQUIPMENT_INFORMATION).NewRow()
            With dr
                .Item(RepairEstimateData.EQPMNT_NO) = bv_strEquipmentNo
                If bv_datLastTestDate <> Nothing AndAlso bv_datLastTestDate <> sqlDateDbnull AndAlso bv_datLastTestDate <> sqlDbnull Then
                    .Item(RepairEstimateData.LST_TST_DT) = bv_datLastTestDate
                Else
                    .Item(RepairEstimateData.LST_TST_DT) = DBNull.Value
                End If
                If bv_datNextTestDate <> Nothing AndAlso bv_datLastTestDate <> sqlDateDbnull AndAlso bv_datNextTestDate <> sqlDbnull Then
                    .Item(RepairEstimateData.NXT_TST_DT) = bv_datNextTestDate
                Else
                    .Item(RepairEstimateData.NXT_TST_DT) = DBNull.Value
                End If

                If bv_i64LastTestTypeId <> Nothing Then
                    .Item(RepairEstimateData.LST_TST_TYP_ID) = bv_i64LastTestTypeId
                Else
                    .Item(RepairEstimateData.LST_TST_TYP_ID) = DBNull.Value
                End If
                If bv_i64NextTestTypeId <> Nothing Then
                    .Item(RepairEstimateData.NXT_TST_TYP_ID) = bv_i64NextTestTypeId
                Else
                    .Item(RepairEstimateData.NXT_TST_TYP_ID) = DBNull.Value
                End If
                If bv_strValidityYears <> Nothing Then
                    .Item(RepairEstimateData.VLDTY_PRD_TST_YRS) = bv_strValidityYears
                Else
                    .Item(RepairEstimateData.VLDTY_PRD_TST_YRS) = DBNull.Value
                End If
                If bv_strLastSurveyorName <> Nothing Then
                    .Item(RepairEstimateData.LST_SRVYR_NM) = bv_strLastSurveyorName
                Else
                    .Item(RepairEstimateData.LST_SRVYR_NM) = DBNull.Value
                End If
                .Item(RepairEstimateData.DPT_ID) = bv_i32DepotId
            End With
            UpdateEquipmentInformation = objData.UpdateRow(dr, Equipment_InformationUpdateQuery, br_objtrans)
            dr = Nothing
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region

#Region "GetRepairEstimateNoByRepairEstimateId() TABLE NAME:REPAIR_ESTIMATE"

    Public Function GetAttachmentByRepairEstimateId(ByVal bv_i32DepotID As Int32, ByVal bv_strActivity As String, ByVal bv_i64RepairEstimateId As Int64) As RepairEstimateDataSet
        Try
            Dim hshparameters As New Hashtable
            hshparameters.Add(RepairEstimateData.DPT_ID, bv_i32DepotID)
            hshparameters.Add(RepairEstimateData.RPR_ESTMT_ID, bv_i64RepairEstimateId)
            hshparameters.Add(RepairEstimateData.ACTVTY_NAM, bv_strActivity)
            objData = New DataObjects(AttachmentSelectQuery, hshparameters)
            objData.Fill(CType(ds, DataSet), RepairEstimateData._ATTACHMENT)
            Return ds
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "GetRevisionNoByRepairEstimateId() TABLE NAME:REPAIR_ESTIMATE"

    Public Function GetRevisionNoByRepairEstimateId(ByVal bv_i64RepairEstimateid As Int64) As Integer
        Try
            objData = New DataObjects(RepairEstimateRevisionNoSelectQuery, RepairEstimateData.RPR_ESTMT_ID, bv_i64RepairEstimateid)
            Return objData.ExecuteScalar()
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region

#Region "GetRevisionNoByRepairEstimateId() TABLE NAME:REPAIR_ESTIMATE"

    Public Function GetRevisionNoByEqpmntNo(ByVal bv_strEqpmnt_No As String, _
                                            ByVal bv_strGateinTransaction As String, _
                                            ByVal bv_strRepairEstimateNo As String, _
                                            ByVal bv_strPageName As String) As Integer
        Try
            Dim hshparameters As New Hashtable
            hshparameters.Add(RepairEstimateData.EQPMNT_NO, bv_strEqpmnt_No)
            hshparameters.Add(RepairEstimateData.GI_TRNSCTN_NO, bv_strGateinTransaction)
            hshparameters.Add(RepairEstimateData.RPR_ESTMT_NO, bv_strRepairEstimateNo)
            hshparameters.Add(RepairEstimateData.ACTVTY_NM, bv_strPageName)
            objData = New DataObjects(RepairEstimateRevisionNoSelectQueryByEqpmntNo, hshparameters)
            Return objData.ExecuteScalar()
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region

#Region "GetEstimationCostByEqpmntNo() TABLE NAME:REPAIR_ESTIMATE"

    Public Function GetEstimationCostByEqpmntNo(ByVal bv_strEqpmnt_No As String, _
                                                ByVal bv_strGateinTransaction As String, _
                                                ByVal bv_strRepairEstimateNo As String, _
                                                ByVal bv_strPageName As String, _
                                                ByVal bv_i32DepotId As Int32) As Decimal
        Try
            Dim hshparameters As New Hashtable
            hshparameters.Add(RepairEstimateData.EQPMNT_NO, bv_strEqpmnt_No)
            hshparameters.Add(RepairEstimateData.GI_TRNSCTN_NO, bv_strGateinTransaction)
            hshparameters.Add(RepairEstimateData.RPR_ESTMT_NO, bv_strRepairEstimateNo)
            hshparameters.Add(RepairEstimateData.ACTVTY_NM, bv_strPageName)
            hshparameters.Add(RepairEstimateData.DPT_ID, bv_i32DepotId)
            objData = New DataObjects(RepairEstimateEstimationCostQuery, hshparameters)
            Return objData.ExecuteScalar()
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "GetEstimateUserByEqpmntNo() TABLE NAME:REPAIR_ESTIMATE"

    Public Function GetEstimateUserByEqpmntNo(ByVal bv_strEqpmnt_No As String, _
                                              ByVal bv_strGateinTransaction As String, _
                                              ByVal bv_strEstimationNo As String, _
                                              ByVal bv_strPageName As String, _
                                              ByVal bv_i32DepotId As Int32) As String
        Try
            Dim hshparameters As New Hashtable
            hshparameters.Add(RepairEstimateData.EQPMNT_NO, bv_strEqpmnt_No)
            hshparameters.Add(RepairEstimateData.GI_TRNSCTN_NO, bv_strGateinTransaction)
            hshparameters.Add(RepairEstimateData.ACTVTY_NM, bv_strPageName)
            hshparameters.Add(RepairEstimateData.RPR_ESTMT_NO, bv_strEstimationNo)
            hshparameters.Add(RepairEstimateData.DPT_ID, bv_i32DepotId)
            objData = New DataObjects(RepairEstimateCreateUserByEqpmntNo, hshparameters)
            Return objData.ExecuteScalar()
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "GetTariffDetails() TABLE NAME:TARIFF_CODE"

    Public Function GetTariffDetails(ByVal bv_strItemId As String, _
                                     ByVal bv_strSubItemId As String, _
                                     ByVal bv_strDamageID As String, _
                                     ByVal bv_strRepairId As String, _
                                     ByVal bv_i32DepotId As Int32) As RepairEstimateDataSet
        Try
            Dim strWhere As String = String.Empty
            If Not IsNothing(bv_i32DepotId) Then
                strWhere = String.Concat(" WHERE ", RepairEstimateData.ACTV_BT, " = ", "1")
                strWhere = String.Concat(strWhere, " AND ", RepairEstimateData.DPT_ID, " IN (", bv_i32DepotId, ") ")
            End If
            If bv_strItemId <> "" Then
                strWhere = String.Concat(strWhere, " AND ", RepairEstimateData.ITM_ID, " IN (", bv_strItemId, ")")
            End If
            If bv_strSubItemId <> "" Then
                strWhere = String.Concat(strWhere, " AND ", RepairEstimateData.SB_ITM_ID, " IN (", bv_strSubItemId, ")")
            End If
            If bv_strDamageID <> "" Then
                strWhere = String.Concat(strWhere, " AND ", RepairEstimateData.DMG_ID, " IN (", bv_strDamageID, ")")
            End If
            If bv_strRepairId <> "" Then
                strWhere = String.Concat(strWhere, " AND ", RepairEstimateData.RPR_ID, " IN (", bv_strRepairId, ")")
            End If
            objData = New DataObjects(String.Concat(TariffCodeSelectQuery, strWhere))
            objData.Fill(CType(ds, DataSet), RepairEstimateData._V_TARIFF_CODE)
            Return ds
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "GetAttachmentByRepairEstimateNo() TABLE NAME:ATTACHMENT"

    Public Function GetAttachmentByRepairEstimateNo(ByVal bv_i32DepotID As Int32, _
                                                    ByVal bv_strRepairEstimateNo As String, _
                                                    ByVal bv_lngEstimateID As Long, _
                                                    ByVal bv_strOrderBy As String) As RepairEstimateDataSet
        Try

            Dim hshparameters As New Hashtable
            Dim strQuery As String = AttachmentSelectQueryByEstimateNo.Replace("@WHERE", bv_strOrderBy)
            hshparameters.Add(RepairEstimateData.DPT_ID, bv_i32DepotID)
            hshparameters.Add(RepairEstimateData.RPR_ESTMT_NO, bv_strRepairEstimateNo)
            hshparameters.Add(RepairEstimateData.RPR_ESTMT_ID, bv_lngEstimateID)
            objData = New DataObjects(strQuery, hshparameters)
            objData.Fill(CType(ds, DataSet), RepairEstimateData._V_ATTACHMENT)
            Return ds
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "GetAttachmentByActivityName() TABLE NAME:ATTACHMENT"

    Public Function GetAttachmentByActivityName(ByVal bv_i32DepotID As Int32, _
                                                ByVal bv_strRepairEstimateNo As String, _
                                                ByVal bv_strActivityName As String, _
                                                ByVal bv_strOrderBy As String) As RepairEstimateDataSet
        Try

            Dim hshparameters As New Hashtable
            Dim strActivity As String = AttachmentSelectQueryByActivityName.Replace("@ACTIVITYNAME", bv_strActivityName)
            Dim strQuery As String = strActivity.Replace("@WHERE", bv_strOrderBy)
            hshparameters.Add(RepairEstimateData.DPT_ID, bv_i32DepotID)
            hshparameters.Add(RepairEstimateData.RPR_ESTMT_NO, bv_strRepairEstimateNo)
            objData = New DataObjects(strQuery, hshparameters)
            objData.Fill(CType(ds, DataSet), RepairEstimateData._V_ATTACHMENT)
            Return ds
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "GetEquipmentStatusDetail() TABLE NAME:EQUIPMENT_STATUS"

    Public Function GetEquipmentStatusDetail(ByVal bv_strEquipmentStatusCode As String, _
                                             ByVal bv_i32DepotId As Int32, _
                                             ByRef objTrans As Transactions) As String
        Try
            Dim hshparameters As New Hashtable
            hshparameters.Add(RepairEstimateData.EQPMNT_STTS_CD, bv_strEquipmentStatusCode)
            hshparameters.Add(RepairEstimateData.DPT_ID, bv_i32DepotId)
            objData = New DataObjects(EquipmentStatusSelectQuery, hshparameters)
            Return objData.ExecuteScalar(objTrans)
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region
#Region "GetEquipmentStatusDetail() TABLE NAME:EQUIPMENT_STATUS"

    Public Function GetEquipmentStatusDetailFromStatus(ByVal bv_strEquipmentStatusCode As String, _
                                             ByVal bv_i32DepotId As Int32, _
                                             ByRef objTrans As Transactions) As String
        Try
            Dim hshparameters As New Hashtable
            hshparameters.Add(RepairEstimateData.STTS_CD, bv_strEquipmentStatusCode)
            hshparameters.Add(RepairEstimateData.DPT_ID, bv_i32DepotId)
            objData = New DataObjects(EquipmentStatusFromStatusSelectQuery, hshparameters)
            Return objData.ExecuteScalar(objTrans)
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region
    'For Check whether estimate is in table RET
#Region "GetRepairEstimateRETDetail() TABLE NAME:REPAIR_ESTIMATE_RET"

    Public Function GetRepairEstimateRET(ByVal bv_intEstimate As Int64, ByRef br_objtrans As Transactions) As Boolean
        Try

            objData = New DataObjects(EstimateRETselectQuery, RepairEstimateData.WM_SNO, bv_intEstimate)
            objData.Fill(CType(ds, DataSet), RepairEstimateData._REPAIR_ESTIMATE_RET, br_objtrans)
            If ds.Tables(RepairEstimateData._REPAIR_ESTIMATE_RET).Rows.Count > 0 Then
                Return False
            Else
                Return True
            End If


        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region


#Region "GetRepairEstimateRETDetail() TABLE NAME:REPAIR_ESTIMATE_RET"

    Public Function GetRepairEstimateRETDetail(ByVal bv_intEstimate As Int64, ByRef br_objtrans As Transactions) As Boolean
        Try

            objData = New DataObjects(EstimateRETDetailselectQuery, RepairEstimateData.WD_RPR_ESTMT_DTL_ID, bv_intEstimate)
            objData.Fill(CType(ds, DataSet), RepairEstimateData._REPAIR_ESTIMATE_DETAIL_RET, br_objtrans)
            If ds.Tables(RepairEstimateData._REPAIR_ESTIMATE_DETAIL_RET).Rows.Count > 0 Then
                Return False
            Else
                Return True
            End If


        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

    'for Getting Units, measure, weights
#Region "GetGateinDetails() TABLE NAME:GATEIN"

    Public Function GetGateinDetails(ByVal bv_i64RepairEstimationDetailId As String) As RepairEstimateDataSet

        Dim dr As DataRow
        objData = New DataObjects()
        Try
            objData = New DataObjects(GetGateinDetailByEquipment, RepairEstimateData.EQPMNT_NO, bv_i64RepairEstimationDetailId)
            objData.Fill(CType(ds, DataSet), RepairEstimateData._V_GATEIN_DETAIL)
            Return ds
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region

#Region "GetEquipmentDescription() "
    Public Function GetEquipmentDescription(ByVal bv_strEquipmentCode As String, ByRef br_objTrans As Transactions) As String
        Try
            Dim hshTable As New Hashtable()
            Dim dtRental As New DataTable

            '  Dim strTransx As String = CommonUIs.GetIdentityCode(GateOutData._GATEOUT, bv_lngGateoutId, bv_GOdate, br_objTrans)
            objData = New DataObjects(getEquipmentCodeDescriptionQuery, RepairEstimateData.EQPMNT_CD_CD, bv_strEquipmentCode)
            objData.Fill(CType(ds, DataSet), RepairEstimateData._EQUIPMENT_TYPE)
            ' Return ds
            Dim equipmentDescription As String = String.Empty

            If ds.Tables(RepairEstimateData._EQUIPMENT_TYPE).Rows.Count > 0 Then
                equipmentDescription = ds.Tables(RepairEstimateData._EQUIPMENT_TYPE).Rows(0).Item("EQPMNT_TYP_DSCRPTN_VC")
            End If

            Return equipmentDescription
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region

#Region "Repair Estimate Update"

    Public Function UpadateRepairEstimate_fromApproval(ByVal bv_strEqpmnt_No As String, _
                                         ByRef bv_strGI_Transaction As String, _
                                         ByVal bv_intRepair_Type_Id As Long, _
                                         ByRef br_objtrans As Transactions) As Long
        Try
            Dim dr As DataRow
            Dim intMax As Long
            Dim intEstimateNo As Int64 = 0
            objData = New DataObjects()
            dr = ds.Tables(RepairEstimateData._REPAIR_ESTIMATE).NewRow()
            With dr

                If bv_strEqpmnt_No <> Nothing Then
                    .Item(RepairEstimateData.EQPMNT_NO) = bv_strEqpmnt_No
                Else
                    .Item(RepairEstimateData.EQPMNT_NO) = DBNull.Value
                End If


                If bv_strGI_Transaction <> Nothing Then
                    .Item(RepairEstimateData.GI_TRNSCTN_NO) = bv_strGI_Transaction
                Else
                    .Item(RepairEstimateData.GI_TRNSCTN_NO) = DBNull.Value
                End If


                If bv_intRepair_Type_Id <> Nothing Then
                    .Item(RepairEstimateData.RPR_TYP_ID) = bv_intRepair_Type_Id
                Else
                    .Item(RepairEstimateData.RPR_TYP_ID) = DBNull.Value
                End If

            End With

            UpadateRepairEstimate_fromApproval = objData.UpdateRow(dr, UpadateRepairEstimate_fromApproval_UpdateQuery, br_objtrans)
            dr = Nothing

        Catch ex As Exception
            Throw ex
        End Try

    End Function


#End Region

    'Attachment
#Region "pub_GetAttchemntbyGateIN()"

    Public Function pub_GetAttchemntbyGateIN(ByVal bv_strGiTransaction As String, ByVal bv_strActivity As String) As RepairEstimateDataSet
        Try
            Dim hshTable As New Hashtable()
            Dim dtRental As New DataTable
            hshTable.Add(RepairEstimateData.GI_TRNSCTN_NO, bv_strGiTransaction)
            hshTable.Add(RepairEstimateData.ACTVTY_NAM, bv_strActivity)

            objData = New DataObjects(GetAttachmentByGateIN, hshTable)
            objData.Fill(CType(ds, DataSet), RepairEstimateData._REPAIR_ESTIMATE)
            Return ds

        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "GetTariffDetail()"
    Public Function GetTariffDetail(ByVal intAgentID As Integer, _
                                    ByVal intCustmrID As Integer, _
                                    ByVal intEquipTypeID As Integer, _
                                    ByVal intDepotId As Integer, _
                                    ByVal strBillTo As String) As DataTable
        Dim strWhere As String = ""
        Dim dsCustTariffCode As New DataTable
        If strBillTo.ToUpper = "AGENT" Then
            strWhere = " WHERE TRFF_CD_AGNT_ID = " + intAgentID.ToString + " AND TRFF_CD_EQP_TYP_ID = " + intEquipTypeID.ToString + " AND DPT_ID = " + intDepotId.ToString
            objData = New DataObjects(String.Concat(CustomerTariffCode_SelectQuery, strWhere))
            objData.Fill(dsCustTariffCode)
            If (dsCustTariffCode.Rows.Count > 0) Then
                Return dsCustTariffCode
            End If
        End If
        strWhere = " WHERE TRFF_CD_CSTMR_ID = " + intCustmrID.ToString + " AND TRFF_CD_EQP_TYP_ID = " + intEquipTypeID.ToString + " AND DPT_ID = " + intDepotId.ToString
        objData = New DataObjects(String.Concat(CustomerTariffCode_SelectQuery, strWhere))
        objData.Fill(dsCustTariffCode)
        If (dsCustTariffCode.Rows.Count > 0) Then
            Return dsCustTariffCode
        Else
            strWhere = " WHERE TRFF_CD_TYP = 141 AND TRFF_CD_EQP_TYP_ID = " + intEquipTypeID.ToString + " AND DPT_ID = " + intDepotId.ToString
            objData = New DataObjects(String.Concat(CustomerTariffCode_SelectQuery, strWhere))
            objData.Fill(dsCustTariffCode)
        End If
        Return dsCustTariffCode
    End Function
#End Region

    Function GetTariffDetail(intDepotId As Integer, intTariffId As Object) As RepairEstimateDataSet
        Dim hshparameters As New Hashtable
        hshparameters.Add(RepairEstimateData.DPT_ID, intDepotId)
        hshparameters.Add(RepairEstimateData.TRFF_CD_DTL_ID, intTariffId)
        objData = New DataObjects(CustomerTariffCode_SelectQueryByTariffId, hshparameters)
        objData.Fill(CType(ds, DataSet), RepairEstimateData._V_TARIFF_CODE_DETAIL)
        Return ds
    End Function

    Function GetAgentIdByCustomer(intDepotId As Integer, intCustId As Integer) As DataTable
        Dim agntDt As New DataTable
        Dim hshparameters As New Hashtable
        hshparameters.Add(RepairEstimateData.DPT_ID, intDepotId)
        hshparameters.Add(RepairEstimateData.CSTMR_ID, intCustId)
        objData = New DataObjects(Agent_SelectQueryByCustomerId, hshparameters)
        objData.Fill(agntDt)
        Return agntDt
    End Function

#Region "GetDepotDetailsbyDepotId() TABLE NAME:DEPOT"

    Public Function GetDepotDetailsbyDepotId(ByVal bv_i64Dpt_id As Int64) As DataTable
        Try
            objData = New DataObjects(GetDepotbyDepotId, RepairEstimateData.DPT_ID, CStr(bv_i64Dpt_id))
            objData.Fill(CType(ds, DataSet), RepairEstimateData._DEPOT)
            Return ds.Tables(RepairEstimateData._DEPOT)
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "GetCustomerDetailsByCustomerId() TABLE NAME:CUSTOMER"

    Public Function GetCustomerDetailsByCustomerId(ByVal bv_i64CSTMR_id As Int64) As DataTable
        Try
            objData = New DataObjects(GetCustomerDetailByCustomer_id, RepairEstimateData.CSTMR_ID, CStr(bv_i64CSTMR_id))
            objData.Fill(CType(ds, DataSet), RepairEstimateData._V_CUSTOMER)
            Return ds.Tables(RepairEstimateData._V_CUSTOMER)
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "GetAgentByCustomerId() TABLE NAME:AGENT"

    Public Function GetAgentByCustomerId(ByVal bv_i64CSTMR_id As Int64, ByVal bv_i64DPT_id As Int64) As DataTable
        Try
            Dim dtAgent As New DataTable
            Dim hshparameters As New Hashtable
            hshparameters.Add(RepairEstimateData.DPT_ID, bv_i64DPT_id)
            hshparameters.Add(RepairEstimateData.CSTMR_ID, bv_i64CSTMR_id)
            objData = New DataObjects(GETAgentSelectQueryByCustomerId, hshparameters)
            objData.Fill(CType(ds, DataSet), RepairEstimateData._V_AGENT)
            Return ds.Tables(RepairEstimateData._V_AGENT)
            'objData.Fill(dtAgent)
            'Return dtAgent
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

#Region "LaborRateperHourByCustomerID() TABLE NAME:CUSTOMER"

    Public Function LaborRateperHourByAgentID(ByVal bv_i32DepotID As Int32, ByVal bv_i64AgentID As Int64) As String
        Try
            Dim hshparameters As New Hashtable
            hshparameters.Add(RepairEstimateData.DPT_ID, bv_i32DepotID)
            hshparameters.Add(RepairEstimateData.AGNT_ID, bv_i64AgentID)
            objData = New DataObjects(AgentLaborRateSelectQuery, hshparameters)
            Return objData.ExecuteScalar()
        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

    Function GetCurrByAgntId(intAgentId As Integer, intDepotID As Integer) As DataTable
        Try
            Dim dtAgnt As New DataTable
            Dim hshparameters As New Hashtable
            hshparameters.Add(RepairEstimateData.DPT_ID, intDepotID)
            hshparameters.Add(RepairEstimateData.AGNT_ID, intAgentId)
            objData = New DataObjects(AgentCurrencySelectQuery, hshparameters)
            objData.Fill(dtAgnt)
            Return dtAgnt
        Catch ex As Exception
            Throw ex
        End Try
    End Function

    Function GetCurrByCstmrId(intCustId As Integer, intDepotID As Integer) As DataTable
        Try
            Dim dsCstmr As New DataTable
            Dim hshparameters As New Hashtable
            hshparameters.Add(RepairEstimateData.DPT_ID, intDepotID)
            hshparameters.Add(RepairEstimateData.CSTMR_ID, intCustId)
            objData = New DataObjects(CustomerCurrencySelectQuery, hshparameters)
            objData.Fill(dsCstmr)
            Return dsCstmr
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#Region "GetRepairEstimateByEquipmentNo"
    Function GetRepairEstimateByEquipmentNo(ByVal bv_EquipmentNo As String, ByVal bv_GI_Trnsxn_No As String, intDepotID As Integer)
        Try
            Dim dtEstimate As New DataTable
            Dim hshparameters As New Hashtable
            hshparameters.Add(RepairEstimateData.EQPMNT_NO, bv_EquipmentNo)
            hshparameters.Add(RepairEstimateData.GI_TRNSCTN_NO, bv_GI_Trnsxn_No)
            hshparameters.Add(RepairEstimateData.DPT_ID, intDepotID)
            objData = New DataObjects("SELECT * FROM REPAIR_ESTIMATE WHERE EQPMNT_NO=@EQPMNT_NO AND GI_TRNSCTN_NO=@GI_TRNSCTN_NO AND DPT_ID=@DPT_ID", hshparameters)
            objData.Fill(dtEstimate)
            Return dtEstimate
        Catch ex As Exception
            Throw ex
        End Try
    End Function

    Function GetRepairEstimateByEquipmentNoByActivityName(ByVal bv_EquipmentNo As String, ByVal bv_GI_Trnsxn_No As String, intDepotID As Integer, ByVal bv_strActivityName As String)
        Try
            Dim dtEstimate As New DataTable
            Dim hshparameters As New Hashtable
            hshparameters.Add(RepairEstimateData.EQPMNT_NO, bv_EquipmentNo)
            hshparameters.Add(RepairEstimateData.GI_TRNSCTN_NO, bv_GI_Trnsxn_No)
            hshparameters.Add(RepairEstimateData.DPT_ID, intDepotID)
            hshparameters.Add(RepairEstimateData.ACTVTY_NM, bv_strActivityName)
            objData = New DataObjects("SELECT * FROM REPAIR_ESTIMATE WHERE EQPMNT_NO=@EQPMNT_NO AND GI_TRNSCTN_NO=@GI_TRNSCTN_NO AND DPT_ID=@DPT_ID AND ACTVTY_NM=@ACTVTY_NM ORDER BY RPR_ESTMT_ID DESC", hshparameters)
            objData.Fill(dtEstimate)
            Return dtEstimate
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region

#Region "GetActivityStatusByEquipmentNo"
    Function GetActivityStatusByEquipmentNo(ByVal bv_EquipmentNo As String, ByVal bv_GI_Trnsxn_No As String, intDepotID As Integer)
        Try
            Dim dtEstimate As New DataTable
            Dim hshparameters As New Hashtable
            hshparameters.Add(RepairEstimateData.EQPMNT_NO, bv_EquipmentNo)
            hshparameters.Add(RepairEstimateData.GI_TRNSCTN_NO, bv_GI_Trnsxn_No)
            hshparameters.Add(RepairEstimateData.DPT_ID, intDepotID)
            objData = New DataObjects("SELECT *  FROM ACTIVITY_STATUS VAS WHERE EQPMNT_STTS_ID IN (SELECT PENDING_STATUS FROM WF_ACTIVITY WHERE WF_ACTIVITY_NAME ='Repair Estimate') AND EQPMNT_NO=@EQPMNT_NO AND GI_TRNSCTN_NO=@GI_TRNSCTN_NO AND DPT_ID=@DPT_ID", hshparameters)
            objData.Fill(dtEstimate)
            Return dtEstimate
        Catch ex As Exception
            Throw ex
        End Try
    End Function
#End Region

    Function GetAdditionalCleaningBit(bv_strEquipmentNo As String, bv_strGateinTransaction As String, bv_strDepotId As Integer) As DataTable
        Try
            Dim dtCleaning As New DataTable
            Dim hshparameters As New Hashtable
            hshparameters.Add(RepairEstimateData.EQPMNT_NO, bv_strEquipmentNo)
            hshparameters.Add(RepairEstimateData.GI_TRNSCTN_NO, bv_strGateinTransaction)
            hshparameters.Add(RepairEstimateData.DPT_ID, bv_strDepotId)
            objData = New DataObjects("SELECT *  FROM V_CLEANING VAS WHERE EQPMNT_NO=@EQPMNT_NO AND GI_TRNSCTN_NO=@GI_TRNSCTN_NO AND DPT_ID=@DPT_ID", hshparameters)
            objData.Fill(dtCleaning)
            Return dtCleaning
        Catch ex As Exception
            Throw ex
        End Try
    End Function

End Class

#End Region
