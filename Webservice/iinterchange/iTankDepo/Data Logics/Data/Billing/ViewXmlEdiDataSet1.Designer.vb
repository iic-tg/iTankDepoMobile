'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.17929
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("ViewXmlEdiDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class ViewXmlEdiDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableINVOICE_EDI_HISTORY As INVOICE_EDI_HISTORYDataTable
    
    Private tableINVOICE_EDI_HISTORY_DETAIL As INVOICE_EDI_HISTORY_DETAILDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("INVOICE_EDI_HISTORY")) Is Nothing) Then
                MyBase.Tables.Add(New INVOICE_EDI_HISTORYDataTable(ds.Tables("INVOICE_EDI_HISTORY")))
            End If
            If (Not (ds.Tables("INVOICE_EDI_HISTORY_DETAIL")) Is Nothing) Then
                MyBase.Tables.Add(New INVOICE_EDI_HISTORY_DETAILDataTable(ds.Tables("INVOICE_EDI_HISTORY_DETAIL")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property INVOICE_EDI_HISTORY() As INVOICE_EDI_HISTORYDataTable
        Get
            Return Me.tableINVOICE_EDI_HISTORY
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property INVOICE_EDI_HISTORY_DETAIL() As INVOICE_EDI_HISTORY_DETAILDataTable
        Get
            Return Me.tableINVOICE_EDI_HISTORY_DETAIL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As ViewXmlEdiDataSet = CType(MyBase.Clone,ViewXmlEdiDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("INVOICE_EDI_HISTORY")) Is Nothing) Then
                MyBase.Tables.Add(New INVOICE_EDI_HISTORYDataTable(ds.Tables("INVOICE_EDI_HISTORY")))
            End If
            If (Not (ds.Tables("INVOICE_EDI_HISTORY_DETAIL")) Is Nothing) Then
                MyBase.Tables.Add(New INVOICE_EDI_HISTORY_DETAILDataTable(ds.Tables("INVOICE_EDI_HISTORY_DETAIL")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableINVOICE_EDI_HISTORY = CType(MyBase.Tables("INVOICE_EDI_HISTORY"),INVOICE_EDI_HISTORYDataTable)
        If (initTable = true) Then
            If (Not (Me.tableINVOICE_EDI_HISTORY) Is Nothing) Then
                Me.tableINVOICE_EDI_HISTORY.InitVars
            End If
        End If
        Me.tableINVOICE_EDI_HISTORY_DETAIL = CType(MyBase.Tables("INVOICE_EDI_HISTORY_DETAIL"),INVOICE_EDI_HISTORY_DETAILDataTable)
        If (initTable = true) Then
            If (Not (Me.tableINVOICE_EDI_HISTORY_DETAIL) Is Nothing) Then
                Me.tableINVOICE_EDI_HISTORY_DETAIL.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "ViewXmlEdiDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/ViewXmlEdiDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableINVOICE_EDI_HISTORY = New INVOICE_EDI_HISTORYDataTable()
        MyBase.Tables.Add(Me.tableINVOICE_EDI_HISTORY)
        Me.tableINVOICE_EDI_HISTORY_DETAIL = New INVOICE_EDI_HISTORY_DETAILDataTable()
        MyBase.Tables.Add(Me.tableINVOICE_EDI_HISTORY_DETAIL)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeINVOICE_EDI_HISTORY() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeINVOICE_EDI_HISTORY_DETAIL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As ViewXmlEdiDataSet = New ViewXmlEdiDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub INVOICE_EDI_HISTORYRowChangeEventHandler(ByVal sender As Object, ByVal e As INVOICE_EDI_HISTORYRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub INVOICE_EDI_HISTORY_DETAILRowChangeEventHandler(ByVal sender As Object, ByVal e As INVOICE_EDI_HISTORY_DETAILRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class INVOICE_EDI_HISTORYDataTable
        Inherits Global.System.Data.TypedTableBase(Of INVOICE_EDI_HISTORYRow)
        
        Private columnINVC_EDI_HSTRY_ID As Global.System.Data.DataColumn
        
        Private columnCSTMR_ID As Global.System.Data.DataColumn
        
        Private columnCSTMR_CD As Global.System.Data.DataColumn
        
        Private columnACTVTY_NAM As Global.System.Data.DataColumn
        
        Private columnINVC_NO As Global.System.Data.DataColumn
        
        Private columnSNT_FL_NAM As Global.System.Data.DataColumn
        
        Private columnSNT_DT As Global.System.Data.DataColumn
        
        Private columnRCVD_FL_NAM As Global.System.Data.DataColumn
        
        Private columnGNRTD_DT As Global.System.Data.DataColumn
        
        Private columnSTTS As Global.System.Data.DataColumn
        
        Private columnRMRKS_VC As Global.System.Data.DataColumn
        
        Private columnRSND_BT As Global.System.Data.DataColumn
        
        Private columnGNRTD_BY As Global.System.Data.DataColumn
        
        Private columnDPT_ID As Global.System.Data.DataColumn
        
        Private columnERRR_DSCRPTN As Global.System.Data.DataColumn
        
        Private columnINVC_FL_NAM As Global.System.Data.DataColumn
        
        Private columnFL_SNT_DT As Global.System.Data.DataColumn
        
        Private columnRCVD_DT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "INVOICE_EDI_HISTORY"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INVC_EDI_HSTRY_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINVC_EDI_HSTRY_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CSTMR_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCSTMR_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CSTMR_CDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCSTMR_CD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACTVTY_NAMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTVTY_NAM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INVC_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINVC_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SNT_FL_NAMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSNT_FL_NAM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SNT_DTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSNT_DT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RCVD_FL_NAMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRCVD_FL_NAM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GNRTD_DTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGNRTD_DT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STTSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTTS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RMRKS_VCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRMRKS_VC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RSND_BTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRSND_BT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GNRTD_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGNRTD_BY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DPT_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPT_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ERRR_DSCRPTNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnERRR_DSCRPTN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INVC_FL_NAMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINVC_FL_NAM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FL_SNT_DTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFL_SNT_DT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RCVD_DTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRCVD_DT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As INVOICE_EDI_HISTORYRow
            Get
                Return CType(Me.Rows(index),INVOICE_EDI_HISTORYRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INVOICE_EDI_HISTORYRowChanging As INVOICE_EDI_HISTORYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INVOICE_EDI_HISTORYRowChanged As INVOICE_EDI_HISTORYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INVOICE_EDI_HISTORYRowDeleting As INVOICE_EDI_HISTORYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INVOICE_EDI_HISTORYRowDeleted As INVOICE_EDI_HISTORYRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddINVOICE_EDI_HISTORYRow(ByVal row As INVOICE_EDI_HISTORYRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddINVOICE_EDI_HISTORYRow( _
                    ByVal INVC_EDI_HSTRY_ID As Long,  _
                    ByVal CSTMR_ID As Long,  _
                    ByVal CSTMR_CD As String,  _
                    ByVal ACTVTY_NAM As String,  _
                    ByVal INVC_NO As String,  _
                    ByVal SNT_FL_NAM As String,  _
                    ByVal SNT_DT As Date,  _
                    ByVal RCVD_FL_NAM As String,  _
                    ByVal GNRTD_DT As Date,  _
                    ByVal STTS As String,  _
                    ByVal RMRKS_VC As String,  _
                    ByVal RSND_BT As Boolean,  _
                    ByVal GNRTD_BY As String,  _
                    ByVal DPT_ID As Integer,  _
                    ByVal ERRR_DSCRPTN As String,  _
                    ByVal INVC_FL_NAM As String,  _
                    ByVal FL_SNT_DT As String,  _
                    ByVal RCVD_DT As Date) As INVOICE_EDI_HISTORYRow
            Dim rowINVOICE_EDI_HISTORYRow As INVOICE_EDI_HISTORYRow = CType(Me.NewRow,INVOICE_EDI_HISTORYRow)
            Dim columnValuesArray() As Object = New Object() {INVC_EDI_HSTRY_ID, CSTMR_ID, CSTMR_CD, ACTVTY_NAM, INVC_NO, SNT_FL_NAM, SNT_DT, RCVD_FL_NAM, GNRTD_DT, STTS, RMRKS_VC, RSND_BT, GNRTD_BY, DPT_ID, ERRR_DSCRPTN, INVC_FL_NAM, FL_SNT_DT, RCVD_DT}
            rowINVOICE_EDI_HISTORYRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowINVOICE_EDI_HISTORYRow)
            Return rowINVOICE_EDI_HISTORYRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As INVOICE_EDI_HISTORYDataTable = CType(MyBase.Clone,INVOICE_EDI_HISTORYDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New INVOICE_EDI_HISTORYDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnINVC_EDI_HSTRY_ID = MyBase.Columns("INVC_EDI_HSTRY_ID")
            Me.columnCSTMR_ID = MyBase.Columns("CSTMR_ID")
            Me.columnCSTMR_CD = MyBase.Columns("CSTMR_CD")
            Me.columnACTVTY_NAM = MyBase.Columns("ACTVTY_NAM")
            Me.columnINVC_NO = MyBase.Columns("INVC_NO")
            Me.columnSNT_FL_NAM = MyBase.Columns("SNT_FL_NAM")
            Me.columnSNT_DT = MyBase.Columns("SNT_DT")
            Me.columnRCVD_FL_NAM = MyBase.Columns("RCVD_FL_NAM")
            Me.columnGNRTD_DT = MyBase.Columns("GNRTD_DT")
            Me.columnSTTS = MyBase.Columns("STTS")
            Me.columnRMRKS_VC = MyBase.Columns("RMRKS_VC")
            Me.columnRSND_BT = MyBase.Columns("RSND_BT")
            Me.columnGNRTD_BY = MyBase.Columns("GNRTD_BY")
            Me.columnDPT_ID = MyBase.Columns("DPT_ID")
            Me.columnERRR_DSCRPTN = MyBase.Columns("ERRR_DSCRPTN")
            Me.columnINVC_FL_NAM = MyBase.Columns("INVC_FL_NAM")
            Me.columnFL_SNT_DT = MyBase.Columns("FL_SNT_DT")
            Me.columnRCVD_DT = MyBase.Columns("RCVD_DT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnINVC_EDI_HSTRY_ID = New Global.System.Data.DataColumn("INVC_EDI_HSTRY_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINVC_EDI_HSTRY_ID)
            Me.columnCSTMR_ID = New Global.System.Data.DataColumn("CSTMR_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCSTMR_ID)
            Me.columnCSTMR_CD = New Global.System.Data.DataColumn("CSTMR_CD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCSTMR_CD)
            Me.columnACTVTY_NAM = New Global.System.Data.DataColumn("ACTVTY_NAM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTVTY_NAM)
            Me.columnINVC_NO = New Global.System.Data.DataColumn("INVC_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINVC_NO)
            Me.columnSNT_FL_NAM = New Global.System.Data.DataColumn("SNT_FL_NAM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSNT_FL_NAM)
            Me.columnSNT_DT = New Global.System.Data.DataColumn("SNT_DT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSNT_DT)
            Me.columnRCVD_FL_NAM = New Global.System.Data.DataColumn("RCVD_FL_NAM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRCVD_FL_NAM)
            Me.columnGNRTD_DT = New Global.System.Data.DataColumn("GNRTD_DT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGNRTD_DT)
            Me.columnSTTS = New Global.System.Data.DataColumn("STTS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTTS)
            Me.columnRMRKS_VC = New Global.System.Data.DataColumn("RMRKS_VC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRMRKS_VC)
            Me.columnRSND_BT = New Global.System.Data.DataColumn("RSND_BT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRSND_BT)
            Me.columnGNRTD_BY = New Global.System.Data.DataColumn("GNRTD_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGNRTD_BY)
            Me.columnDPT_ID = New Global.System.Data.DataColumn("DPT_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPT_ID)
            Me.columnERRR_DSCRPTN = New Global.System.Data.DataColumn("ERRR_DSCRPTN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnERRR_DSCRPTN)
            Me.columnINVC_FL_NAM = New Global.System.Data.DataColumn("INVC_FL_NAM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINVC_FL_NAM)
            Me.columnFL_SNT_DT = New Global.System.Data.DataColumn("FL_SNT_DT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFL_SNT_DT)
            Me.columnRCVD_DT = New Global.System.Data.DataColumn("RCVD_DT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRCVD_DT)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewINVOICE_EDI_HISTORYRow() As INVOICE_EDI_HISTORYRow
            Return CType(Me.NewRow,INVOICE_EDI_HISTORYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New INVOICE_EDI_HISTORYRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(INVOICE_EDI_HISTORYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.INVOICE_EDI_HISTORYRowChangedEvent) Is Nothing) Then
                RaiseEvent INVOICE_EDI_HISTORYRowChanged(Me, New INVOICE_EDI_HISTORYRowChangeEvent(CType(e.Row,INVOICE_EDI_HISTORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.INVOICE_EDI_HISTORYRowChangingEvent) Is Nothing) Then
                RaiseEvent INVOICE_EDI_HISTORYRowChanging(Me, New INVOICE_EDI_HISTORYRowChangeEvent(CType(e.Row,INVOICE_EDI_HISTORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.INVOICE_EDI_HISTORYRowDeletedEvent) Is Nothing) Then
                RaiseEvent INVOICE_EDI_HISTORYRowDeleted(Me, New INVOICE_EDI_HISTORYRowChangeEvent(CType(e.Row,INVOICE_EDI_HISTORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.INVOICE_EDI_HISTORYRowDeletingEvent) Is Nothing) Then
                RaiseEvent INVOICE_EDI_HISTORYRowDeleting(Me, New INVOICE_EDI_HISTORYRowChangeEvent(CType(e.Row,INVOICE_EDI_HISTORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveINVOICE_EDI_HISTORYRow(ByVal row As INVOICE_EDI_HISTORYRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ViewXmlEdiDataSet = New ViewXmlEdiDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "INVOICE_EDI_HISTORYDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class INVOICE_EDI_HISTORY_DETAILDataTable
        Inherits Global.System.Data.TypedTableBase(Of INVOICE_EDI_HISTORY_DETAILRow)
        
        Private columnINVC_EDI_HSTRY_DTL_ID As Global.System.Data.DataColumn
        
        Private columnINVC_EDI_HSTRY_ID As Global.System.Data.DataColumn
        
        Private columnEQPMNT_NO As Global.System.Data.DataColumn
        
        Private columnINVC_NO As Global.System.Data.DataColumn
        
        Private columnLN_RSPNS_VC As Global.System.Data.DataColumn
        
        Private columnSPPRT_URL As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "INVOICE_EDI_HISTORY_DETAIL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INVC_EDI_HSTRY_DTL_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINVC_EDI_HSTRY_DTL_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INVC_EDI_HSTRY_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINVC_EDI_HSTRY_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EQPMNT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEQPMNT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INVC_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINVC_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LN_RSPNS_VCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLN_RSPNS_VC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPPRT_URLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPPRT_URL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As INVOICE_EDI_HISTORY_DETAILRow
            Get
                Return CType(Me.Rows(index),INVOICE_EDI_HISTORY_DETAILRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INVOICE_EDI_HISTORY_DETAILRowChanging As INVOICE_EDI_HISTORY_DETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INVOICE_EDI_HISTORY_DETAILRowChanged As INVOICE_EDI_HISTORY_DETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INVOICE_EDI_HISTORY_DETAILRowDeleting As INVOICE_EDI_HISTORY_DETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INVOICE_EDI_HISTORY_DETAILRowDeleted As INVOICE_EDI_HISTORY_DETAILRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddINVOICE_EDI_HISTORY_DETAILRow(ByVal row As INVOICE_EDI_HISTORY_DETAILRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddINVOICE_EDI_HISTORY_DETAILRow(ByVal INVC_EDI_HSTRY_DTL_ID As Long, ByVal INVC_EDI_HSTRY_ID As Long, ByVal EQPMNT_NO As String, ByVal INVC_NO As String, ByVal LN_RSPNS_VC As String, ByVal SPPRT_URL As String) As INVOICE_EDI_HISTORY_DETAILRow
            Dim rowINVOICE_EDI_HISTORY_DETAILRow As INVOICE_EDI_HISTORY_DETAILRow = CType(Me.NewRow,INVOICE_EDI_HISTORY_DETAILRow)
            Dim columnValuesArray() As Object = New Object() {INVC_EDI_HSTRY_DTL_ID, INVC_EDI_HSTRY_ID, EQPMNT_NO, INVC_NO, LN_RSPNS_VC, SPPRT_URL}
            rowINVOICE_EDI_HISTORY_DETAILRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowINVOICE_EDI_HISTORY_DETAILRow)
            Return rowINVOICE_EDI_HISTORY_DETAILRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As INVOICE_EDI_HISTORY_DETAILDataTable = CType(MyBase.Clone,INVOICE_EDI_HISTORY_DETAILDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New INVOICE_EDI_HISTORY_DETAILDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnINVC_EDI_HSTRY_DTL_ID = MyBase.Columns("INVC_EDI_HSTRY_DTL_ID")
            Me.columnINVC_EDI_HSTRY_ID = MyBase.Columns("INVC_EDI_HSTRY_ID")
            Me.columnEQPMNT_NO = MyBase.Columns("EQPMNT_NO")
            Me.columnINVC_NO = MyBase.Columns("INVC_NO")
            Me.columnLN_RSPNS_VC = MyBase.Columns("LN_RSPNS_VC")
            Me.columnSPPRT_URL = MyBase.Columns("SPPRT_URL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnINVC_EDI_HSTRY_DTL_ID = New Global.System.Data.DataColumn("INVC_EDI_HSTRY_DTL_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINVC_EDI_HSTRY_DTL_ID)
            Me.columnINVC_EDI_HSTRY_ID = New Global.System.Data.DataColumn("INVC_EDI_HSTRY_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINVC_EDI_HSTRY_ID)
            Me.columnEQPMNT_NO = New Global.System.Data.DataColumn("EQPMNT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEQPMNT_NO)
            Me.columnINVC_NO = New Global.System.Data.DataColumn("INVC_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINVC_NO)
            Me.columnLN_RSPNS_VC = New Global.System.Data.DataColumn("LN_RSPNS_VC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLN_RSPNS_VC)
            Me.columnSPPRT_URL = New Global.System.Data.DataColumn("SPPRT_URL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPPRT_URL)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewINVOICE_EDI_HISTORY_DETAILRow() As INVOICE_EDI_HISTORY_DETAILRow
            Return CType(Me.NewRow,INVOICE_EDI_HISTORY_DETAILRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New INVOICE_EDI_HISTORY_DETAILRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(INVOICE_EDI_HISTORY_DETAILRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.INVOICE_EDI_HISTORY_DETAILRowChangedEvent) Is Nothing) Then
                RaiseEvent INVOICE_EDI_HISTORY_DETAILRowChanged(Me, New INVOICE_EDI_HISTORY_DETAILRowChangeEvent(CType(e.Row,INVOICE_EDI_HISTORY_DETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.INVOICE_EDI_HISTORY_DETAILRowChangingEvent) Is Nothing) Then
                RaiseEvent INVOICE_EDI_HISTORY_DETAILRowChanging(Me, New INVOICE_EDI_HISTORY_DETAILRowChangeEvent(CType(e.Row,INVOICE_EDI_HISTORY_DETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.INVOICE_EDI_HISTORY_DETAILRowDeletedEvent) Is Nothing) Then
                RaiseEvent INVOICE_EDI_HISTORY_DETAILRowDeleted(Me, New INVOICE_EDI_HISTORY_DETAILRowChangeEvent(CType(e.Row,INVOICE_EDI_HISTORY_DETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.INVOICE_EDI_HISTORY_DETAILRowDeletingEvent) Is Nothing) Then
                RaiseEvent INVOICE_EDI_HISTORY_DETAILRowDeleting(Me, New INVOICE_EDI_HISTORY_DETAILRowChangeEvent(CType(e.Row,INVOICE_EDI_HISTORY_DETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveINVOICE_EDI_HISTORY_DETAILRow(ByVal row As INVOICE_EDI_HISTORY_DETAILRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ViewXmlEdiDataSet = New ViewXmlEdiDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "INVOICE_EDI_HISTORY_DETAILDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class INVOICE_EDI_HISTORYRow
        Inherits Global.System.Data.DataRow
        
        Private tableINVOICE_EDI_HISTORY As INVOICE_EDI_HISTORYDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableINVOICE_EDI_HISTORY = CType(Me.Table,INVOICE_EDI_HISTORYDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INVC_EDI_HSTRY_ID() As Long
            Get
                Try 
                    Return CType(Me(Me.tableINVOICE_EDI_HISTORY.INVC_EDI_HSTRY_IDColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INVC_EDI_HSTRY_ID' in table 'INVOICE_EDI_HISTORY' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableINVOICE_EDI_HISTORY.INVC_EDI_HSTRY_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CSTMR_ID() As Long
            Get
                Try 
                    Return CType(Me(Me.tableINVOICE_EDI_HISTORY.CSTMR_IDColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CSTMR_ID' in table 'INVOICE_EDI_HISTORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVOICE_EDI_HISTORY.CSTMR_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CSTMR_CD() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVOICE_EDI_HISTORY.CSTMR_CDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CSTMR_CD' in table 'INVOICE_EDI_HISTORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVOICE_EDI_HISTORY.CSTMR_CDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACTVTY_NAM() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVOICE_EDI_HISTORY.ACTVTY_NAMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACTVTY_NAM' in table 'INVOICE_EDI_HISTORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVOICE_EDI_HISTORY.ACTVTY_NAMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INVC_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVOICE_EDI_HISTORY.INVC_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INVC_NO' in table 'INVOICE_EDI_HISTORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVOICE_EDI_HISTORY.INVC_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SNT_FL_NAM() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVOICE_EDI_HISTORY.SNT_FL_NAMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SNT_FL_NAM' in table 'INVOICE_EDI_HISTORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVOICE_EDI_HISTORY.SNT_FL_NAMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SNT_DT() As Date
            Get
                Try 
                    Return CType(Me(Me.tableINVOICE_EDI_HISTORY.SNT_DTColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SNT_DT' in table 'INVOICE_EDI_HISTORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVOICE_EDI_HISTORY.SNT_DTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RCVD_FL_NAM() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVOICE_EDI_HISTORY.RCVD_FL_NAMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RCVD_FL_NAM' in table 'INVOICE_EDI_HISTORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVOICE_EDI_HISTORY.RCVD_FL_NAMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GNRTD_DT() As Date
            Get
                Try 
                    Return CType(Me(Me.tableINVOICE_EDI_HISTORY.GNRTD_DTColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GNRTD_DT' in table 'INVOICE_EDI_HISTORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVOICE_EDI_HISTORY.GNRTD_DTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STTS() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVOICE_EDI_HISTORY.STTSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STTS' in table 'INVOICE_EDI_HISTORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVOICE_EDI_HISTORY.STTSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RMRKS_VC() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVOICE_EDI_HISTORY.RMRKS_VCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RMRKS_VC' in table 'INVOICE_EDI_HISTORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVOICE_EDI_HISTORY.RMRKS_VCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RSND_BT() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableINVOICE_EDI_HISTORY.RSND_BTColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RSND_BT' in table 'INVOICE_EDI_HISTORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVOICE_EDI_HISTORY.RSND_BTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GNRTD_BY() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVOICE_EDI_HISTORY.GNRTD_BYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GNRTD_BY' in table 'INVOICE_EDI_HISTORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVOICE_EDI_HISTORY.GNRTD_BYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DPT_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableINVOICE_EDI_HISTORY.DPT_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DPT_ID' in table 'INVOICE_EDI_HISTORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVOICE_EDI_HISTORY.DPT_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ERRR_DSCRPTN() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVOICE_EDI_HISTORY.ERRR_DSCRPTNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ERRR_DSCRPTN' in table 'INVOICE_EDI_HISTORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVOICE_EDI_HISTORY.ERRR_DSCRPTNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INVC_FL_NAM() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVOICE_EDI_HISTORY.INVC_FL_NAMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INVC_FL_NAM' in table 'INVOICE_EDI_HISTORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVOICE_EDI_HISTORY.INVC_FL_NAMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FL_SNT_DT() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVOICE_EDI_HISTORY.FL_SNT_DTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FL_SNT_DT' in table 'INVOICE_EDI_HISTORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVOICE_EDI_HISTORY.FL_SNT_DTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RCVD_DT() As Date
            Get
                Try 
                    Return CType(Me(Me.tableINVOICE_EDI_HISTORY.RCVD_DTColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RCVD_DT' in table 'INVOICE_EDI_HISTORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVOICE_EDI_HISTORY.RCVD_DTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINVC_EDI_HSTRY_IDNull() As Boolean
            Return Me.IsNull(Me.tableINVOICE_EDI_HISTORY.INVC_EDI_HSTRY_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINVC_EDI_HSTRY_IDNull()
            Me(Me.tableINVOICE_EDI_HISTORY.INVC_EDI_HSTRY_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCSTMR_IDNull() As Boolean
            Return Me.IsNull(Me.tableINVOICE_EDI_HISTORY.CSTMR_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCSTMR_IDNull()
            Me(Me.tableINVOICE_EDI_HISTORY.CSTMR_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCSTMR_CDNull() As Boolean
            Return Me.IsNull(Me.tableINVOICE_EDI_HISTORY.CSTMR_CDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCSTMR_CDNull()
            Me(Me.tableINVOICE_EDI_HISTORY.CSTMR_CDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACTVTY_NAMNull() As Boolean
            Return Me.IsNull(Me.tableINVOICE_EDI_HISTORY.ACTVTY_NAMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACTVTY_NAMNull()
            Me(Me.tableINVOICE_EDI_HISTORY.ACTVTY_NAMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINVC_NONull() As Boolean
            Return Me.IsNull(Me.tableINVOICE_EDI_HISTORY.INVC_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINVC_NONull()
            Me(Me.tableINVOICE_EDI_HISTORY.INVC_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSNT_FL_NAMNull() As Boolean
            Return Me.IsNull(Me.tableINVOICE_EDI_HISTORY.SNT_FL_NAMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSNT_FL_NAMNull()
            Me(Me.tableINVOICE_EDI_HISTORY.SNT_FL_NAMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSNT_DTNull() As Boolean
            Return Me.IsNull(Me.tableINVOICE_EDI_HISTORY.SNT_DTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSNT_DTNull()
            Me(Me.tableINVOICE_EDI_HISTORY.SNT_DTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRCVD_FL_NAMNull() As Boolean
            Return Me.IsNull(Me.tableINVOICE_EDI_HISTORY.RCVD_FL_NAMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRCVD_FL_NAMNull()
            Me(Me.tableINVOICE_EDI_HISTORY.RCVD_FL_NAMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGNRTD_DTNull() As Boolean
            Return Me.IsNull(Me.tableINVOICE_EDI_HISTORY.GNRTD_DTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGNRTD_DTNull()
            Me(Me.tableINVOICE_EDI_HISTORY.GNRTD_DTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTTSNull() As Boolean
            Return Me.IsNull(Me.tableINVOICE_EDI_HISTORY.STTSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTTSNull()
            Me(Me.tableINVOICE_EDI_HISTORY.STTSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRMRKS_VCNull() As Boolean
            Return Me.IsNull(Me.tableINVOICE_EDI_HISTORY.RMRKS_VCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRMRKS_VCNull()
            Me(Me.tableINVOICE_EDI_HISTORY.RMRKS_VCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRSND_BTNull() As Boolean
            Return Me.IsNull(Me.tableINVOICE_EDI_HISTORY.RSND_BTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRSND_BTNull()
            Me(Me.tableINVOICE_EDI_HISTORY.RSND_BTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGNRTD_BYNull() As Boolean
            Return Me.IsNull(Me.tableINVOICE_EDI_HISTORY.GNRTD_BYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGNRTD_BYNull()
            Me(Me.tableINVOICE_EDI_HISTORY.GNRTD_BYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDPT_IDNull() As Boolean
            Return Me.IsNull(Me.tableINVOICE_EDI_HISTORY.DPT_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDPT_IDNull()
            Me(Me.tableINVOICE_EDI_HISTORY.DPT_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsERRR_DSCRPTNNull() As Boolean
            Return Me.IsNull(Me.tableINVOICE_EDI_HISTORY.ERRR_DSCRPTNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetERRR_DSCRPTNNull()
            Me(Me.tableINVOICE_EDI_HISTORY.ERRR_DSCRPTNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINVC_FL_NAMNull() As Boolean
            Return Me.IsNull(Me.tableINVOICE_EDI_HISTORY.INVC_FL_NAMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINVC_FL_NAMNull()
            Me(Me.tableINVOICE_EDI_HISTORY.INVC_FL_NAMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFL_SNT_DTNull() As Boolean
            Return Me.IsNull(Me.tableINVOICE_EDI_HISTORY.FL_SNT_DTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFL_SNT_DTNull()
            Me(Me.tableINVOICE_EDI_HISTORY.FL_SNT_DTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRCVD_DTNull() As Boolean
            Return Me.IsNull(Me.tableINVOICE_EDI_HISTORY.RCVD_DTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRCVD_DTNull()
            Me(Me.tableINVOICE_EDI_HISTORY.RCVD_DTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class INVOICE_EDI_HISTORY_DETAILRow
        Inherits Global.System.Data.DataRow
        
        Private tableINVOICE_EDI_HISTORY_DETAIL As INVOICE_EDI_HISTORY_DETAILDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableINVOICE_EDI_HISTORY_DETAIL = CType(Me.Table,INVOICE_EDI_HISTORY_DETAILDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INVC_EDI_HSTRY_DTL_ID() As Long
            Get
                Try 
                    Return CType(Me(Me.tableINVOICE_EDI_HISTORY_DETAIL.INVC_EDI_HSTRY_DTL_IDColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INVC_EDI_HSTRY_DTL_ID' in table 'INVOICE_EDI_HISTORY_DETAIL"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVOICE_EDI_HISTORY_DETAIL.INVC_EDI_HSTRY_DTL_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INVC_EDI_HSTRY_ID() As Long
            Get
                Try 
                    Return CType(Me(Me.tableINVOICE_EDI_HISTORY_DETAIL.INVC_EDI_HSTRY_IDColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INVC_EDI_HSTRY_ID' in table 'INVOICE_EDI_HISTORY_DETAIL' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVOICE_EDI_HISTORY_DETAIL.INVC_EDI_HSTRY_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EQPMNT_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVOICE_EDI_HISTORY_DETAIL.EQPMNT_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EQPMNT_NO' in table 'INVOICE_EDI_HISTORY_DETAIL' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableINVOICE_EDI_HISTORY_DETAIL.EQPMNT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INVC_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVOICE_EDI_HISTORY_DETAIL.INVC_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INVC_NO' in table 'INVOICE_EDI_HISTORY_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVOICE_EDI_HISTORY_DETAIL.INVC_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LN_RSPNS_VC() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVOICE_EDI_HISTORY_DETAIL.LN_RSPNS_VCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LN_RSPNS_VC' in table 'INVOICE_EDI_HISTORY_DETAIL' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableINVOICE_EDI_HISTORY_DETAIL.LN_RSPNS_VCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPPRT_URL() As String
            Get
                Try 
                    Return CType(Me(Me.tableINVOICE_EDI_HISTORY_DETAIL.SPPRT_URLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPPRT_URL' in table 'INVOICE_EDI_HISTORY_DETAIL' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableINVOICE_EDI_HISTORY_DETAIL.SPPRT_URLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINVC_EDI_HSTRY_DTL_IDNull() As Boolean
            Return Me.IsNull(Me.tableINVOICE_EDI_HISTORY_DETAIL.INVC_EDI_HSTRY_DTL_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINVC_EDI_HSTRY_DTL_IDNull()
            Me(Me.tableINVOICE_EDI_HISTORY_DETAIL.INVC_EDI_HSTRY_DTL_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINVC_EDI_HSTRY_IDNull() As Boolean
            Return Me.IsNull(Me.tableINVOICE_EDI_HISTORY_DETAIL.INVC_EDI_HSTRY_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINVC_EDI_HSTRY_IDNull()
            Me(Me.tableINVOICE_EDI_HISTORY_DETAIL.INVC_EDI_HSTRY_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEQPMNT_NONull() As Boolean
            Return Me.IsNull(Me.tableINVOICE_EDI_HISTORY_DETAIL.EQPMNT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEQPMNT_NONull()
            Me(Me.tableINVOICE_EDI_HISTORY_DETAIL.EQPMNT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINVC_NONull() As Boolean
            Return Me.IsNull(Me.tableINVOICE_EDI_HISTORY_DETAIL.INVC_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINVC_NONull()
            Me(Me.tableINVOICE_EDI_HISTORY_DETAIL.INVC_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLN_RSPNS_VCNull() As Boolean
            Return Me.IsNull(Me.tableINVOICE_EDI_HISTORY_DETAIL.LN_RSPNS_VCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLN_RSPNS_VCNull()
            Me(Me.tableINVOICE_EDI_HISTORY_DETAIL.LN_RSPNS_VCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPPRT_URLNull() As Boolean
            Return Me.IsNull(Me.tableINVOICE_EDI_HISTORY_DETAIL.SPPRT_URLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPPRT_URLNull()
            Me(Me.tableINVOICE_EDI_HISTORY_DETAIL.SPPRT_URLColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class INVOICE_EDI_HISTORYRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As INVOICE_EDI_HISTORYRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As INVOICE_EDI_HISTORYRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As INVOICE_EDI_HISTORYRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class INVOICE_EDI_HISTORY_DETAILRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As INVOICE_EDI_HISTORY_DETAILRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As INVOICE_EDI_HISTORY_DETAILRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As INVOICE_EDI_HISTORY_DETAILRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
