'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34014
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(), _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
 Global.System.ComponentModel.ToolboxItem(True), _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"), _
 Global.System.Xml.Serialization.XmlRootAttribute("AddDynamicReportDataSet"), _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")> _
Partial Public Class AddDynamicReportDataSet
    Inherits Global.System.Data.DataSet

    Private tableACTIVITY As ACTIVITYDataTable

    Private tablePROCESS As PROCESSDataTable

    Private tableREPORT_PARAMETER As REPORT_PARAMETERDataTable

    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub New()
        MyBase.New()
        Me.BeginInit()
        Me.InitClass()
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, False)
        If (Me.IsBinarySerialized(info, context) = True) Then
            Me.InitVars(False)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)), String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("ACTIVITY")) Is Nothing) Then
                MyBase.Tables.Add(New ACTIVITYDataTable(ds.Tables("ACTIVITY")))
            End If
            If (Not (ds.Tables("PROCESS")) Is Nothing) Then
                MyBase.Tables.Add(New PROCESSDataTable(ds.Tables("PROCESS")))
            End If
            If (Not (ds.Tables("REPORT_PARAMETER")) Is Nothing) Then
                MyBase.Tables.Add(New REPORT_PARAMETERDataTable(ds.Tables("REPORT_PARAMETER")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property ACTIVITY() As ACTIVITYDataTable
        Get
            Return Me.tableACTIVITY
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property PROCESS() As PROCESSDataTable
        Get
            Return Me.tablePROCESS
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property REPORT_PARAMETER() As REPORT_PARAMETERDataTable
        Get
            Return Me.tableREPORT_PARAMETER
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.BrowsableAttribute(True), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)> _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set(value As Global.System.Data.SchemaSerializationMode)
            Me._schemaSerializationMode = value
        End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit()
        Me.InitClass()
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As AddDynamicReportDataSet = CType(MyBase.Clone, AddDynamicReportDataSet)
        cln.InitVars()
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset()
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("ACTIVITY")) Is Nothing) Then
                MyBase.Tables.Add(New ACTIVITYDataTable(ds.Tables("ACTIVITY")))
            End If
            If (Not (ds.Tables("PROCESS")) Is Nothing) Then
                MyBase.Tables.Add(New PROCESSDataTable(ds.Tables("PROCESS")))
            End If
            If (Not (ds.Tables("REPORT_PARAMETER")) Is Nothing) Then
                MyBase.Tables.Add(New REPORT_PARAMETERDataTable(ds.Tables("REPORT_PARAMETER")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXml(reader)
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars()
        Me.InitVars(True)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableACTIVITY = CType(MyBase.Tables("ACTIVITY"), ACTIVITYDataTable)
        If (initTable = True) Then
            If (Not (Me.tableACTIVITY) Is Nothing) Then
                Me.tableACTIVITY.InitVars()
            End If
        End If
        Me.tablePROCESS = CType(MyBase.Tables("PROCESS"), PROCESSDataTable)
        If (initTable = True) Then
            If (Not (Me.tablePROCESS) Is Nothing) Then
                Me.tablePROCESS.InitVars()
            End If
        End If
        Me.tableREPORT_PARAMETER = CType(MyBase.Tables("REPORT_PARAMETER"), REPORT_PARAMETERDataTable)
        If (initTable = True) Then
            If (Not (Me.tableREPORT_PARAMETER) Is Nothing) Then
                Me.tableREPORT_PARAMETER.InitVars()
            End If
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitClass()
        Me.DataSetName = "AddDynamicReportDataSet"
        Me.Prefix = ""
        Me.EnforceConstraints = False
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableACTIVITY = New ACTIVITYDataTable()
        MyBase.Tables.Add(Me.tableACTIVITY)
        Me.tablePROCESS = New PROCESSDataTable()
        MyBase.Tables.Add(Me.tablePROCESS)
        Me.tableREPORT_PARAMETER = New REPORT_PARAMETERDataTable()
        MyBase.Tables.Add(Me.tableREPORT_PARAMETER)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeACTIVITY() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializePROCESS() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeREPORT_PARAMETER() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As AddDynamicReportDataSet = New AddDynamicReportDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0

                        Do While ((s1.Position <> s1.Length) _
                                    AndAlso (s1.ReadByte = s2.ReadByte))


                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If

                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close()
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close()
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub ACTIVITYRowChangeEventHandler(ByVal sender As Object, ByVal e As ACTIVITYRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub PROCESSRowChangeEventHandler(ByVal sender As Object, ByVal e As PROCESSRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub REPORT_PARAMETERRowChangeEventHandler(ByVal sender As Object, ByVal e As REPORT_PARAMETERRowChangeEvent)

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class ACTIVITYDataTable
        Inherits Global.System.Data.TypedTableBase(Of ACTIVITYRow)

        Private columnACTVTY_ID As Global.System.Data.DataColumn

        Private columnACTVTY_NAM As Global.System.Data.DataColumn

        Private columnPRCSS_ID As Global.System.Data.DataColumn

        Private columnLST_QRY As Global.System.Data.DataColumn

        Private columnLST_URL As Global.System.Data.DataColumn

        Private columnLST_TTL As Global.System.Data.DataColumn

        Private columnLST_CLCNT As Global.System.Data.DataColumn

        Private columnMY_SBMTS_CLCNT As Global.System.Data.DataColumn

        Private columnMY_SBMTS_QRY As Global.System.Data.DataColumn

        Private columnPG_URL As Global.System.Data.DataColumn

        Private columnPG_TTL As Global.System.Data.DataColumn

        Private columnTBL_NAM As Global.System.Data.DataColumn

        Private columnORDR_NO As Global.System.Data.DataColumn

        Private columnMNU_TXT As Global.System.Data.DataColumn

        Private columnCRT_RGHT_BT As Global.System.Data.DataColumn

        Private columnEDT_RGHT_BT As Global.System.Data.DataColumn

        Private columnACTV_BT As Global.System.Data.DataColumn

        Private columnACTVTY_RL As Global.System.Data.DataColumn

        Private columnEXCPTN_BT As Global.System.Data.DataColumn

        Private columnMSTR_ID_CSV As Global.System.Data.DataColumn

        Private columnQCK_LNK_ID_CSV As Global.System.Data.DataColumn

        Private columnCNCL_RGHT_BT As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "ACTIVITY"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ACTVTY_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTVTY_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ACTVTY_NAMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTVTY_NAM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRCSS_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRCSS_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LST_QRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLST_QRY
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LST_URLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLST_URL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LST_TTLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLST_TTL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LST_CLCNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLST_CLCNT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MY_SBMTS_CLCNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMY_SBMTS_CLCNT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MY_SBMTS_QRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMY_SBMTS_QRY
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PG_URLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPG_URL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PG_TTLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPG_TTL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TBL_NAMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTBL_NAM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ORDR_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDR_NO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MNU_TXTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMNU_TXT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CRT_RGHT_BTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCRT_RGHT_BT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EDT_RGHT_BTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEDT_RGHT_BT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ACTV_BTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTV_BT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ACTVTY_RLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTVTY_RL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EXCPTN_BTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXCPTN_BT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MSTR_ID_CSVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMSTR_ID_CSV
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property QCK_LNK_ID_CSVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQCK_LNK_ID_CSV
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CNCL_RGHT_BTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCNCL_RGHT_BT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As ACTIVITYRow
            Get
                Return CType(Me.Rows(index), ACTIVITYRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ACTIVITYRowChanging As ACTIVITYRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ACTIVITYRowChanged As ACTIVITYRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ACTIVITYRowDeleting As ACTIVITYRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ACTIVITYRowDeleted As ACTIVITYRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddACTIVITYRow(ByVal row As ACTIVITYRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddACTIVITYRow( _
                    ByVal ACTVTY_ID As Integer, _
                    ByVal ACTVTY_NAM As String, _
                    ByVal PRCSS_ID As Integer, _
                    ByVal LST_QRY As String, _
                    ByVal LST_URL As String, _
                    ByVal LST_TTL As String, _
                    ByVal LST_CLCNT As Integer, _
                    ByVal MY_SBMTS_CLCNT As Integer, _
                    ByVal MY_SBMTS_QRY As String, _
                    ByVal PG_URL As String, _
                    ByVal PG_TTL As String, _
                    ByVal TBL_NAM As String, _
                    ByVal ORDR_NO As Integer, _
                    ByVal MNU_TXT As String, _
                    ByVal CRT_RGHT_BT As Boolean, _
                    ByVal EDT_RGHT_BT As Boolean, _
                    ByVal ACTV_BT As Boolean, _
                    ByVal ACTVTY_RL As String, _
                    ByVal EXCPTN_BT As Boolean, _
                    ByVal MSTR_ID_CSV As String, _
                    ByVal QCK_LNK_ID_CSV As String, _
                    ByVal CNCL_RGHT_BT As Boolean) As ACTIVITYRow
            Dim rowACTIVITYRow As ACTIVITYRow = CType(Me.NewRow, ACTIVITYRow)
            Dim columnValuesArray() As Object = New Object() {ACTVTY_ID, ACTVTY_NAM, PRCSS_ID, LST_QRY, LST_URL, LST_TTL, LST_CLCNT, MY_SBMTS_CLCNT, MY_SBMTS_QRY, PG_URL, PG_TTL, TBL_NAM, ORDR_NO, MNU_TXT, CRT_RGHT_BT, EDT_RGHT_BT, ACTV_BT, ACTVTY_RL, EXCPTN_BT, MSTR_ID_CSV, QCK_LNK_ID_CSV, CNCL_RGHT_BT}
            rowACTIVITYRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowACTIVITYRow)
            Return rowACTIVITYRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByACTVTY_ID(ByVal ACTVTY_ID As Integer) As ACTIVITYRow
            Return CType(Me.Rows.Find(New Object() {ACTVTY_ID}), ACTIVITYRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ACTIVITYDataTable = CType(MyBase.Clone, ACTIVITYDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ACTIVITYDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnACTVTY_ID = MyBase.Columns("ACTVTY_ID")
            Me.columnACTVTY_NAM = MyBase.Columns("ACTVTY_NAM")
            Me.columnPRCSS_ID = MyBase.Columns("PRCSS_ID")
            Me.columnLST_QRY = MyBase.Columns("LST_QRY")
            Me.columnLST_URL = MyBase.Columns("LST_URL")
            Me.columnLST_TTL = MyBase.Columns("LST_TTL")
            Me.columnLST_CLCNT = MyBase.Columns("LST_CLCNT")
            Me.columnMY_SBMTS_CLCNT = MyBase.Columns("MY_SBMTS_CLCNT")
            Me.columnMY_SBMTS_QRY = MyBase.Columns("MY_SBMTS_QRY")
            Me.columnPG_URL = MyBase.Columns("PG_URL")
            Me.columnPG_TTL = MyBase.Columns("PG_TTL")
            Me.columnTBL_NAM = MyBase.Columns("TBL_NAM")
            Me.columnORDR_NO = MyBase.Columns("ORDR_NO")
            Me.columnMNU_TXT = MyBase.Columns("MNU_TXT")
            Me.columnCRT_RGHT_BT = MyBase.Columns("CRT_RGHT_BT")
            Me.columnEDT_RGHT_BT = MyBase.Columns("EDT_RGHT_BT")
            Me.columnACTV_BT = MyBase.Columns("ACTV_BT")
            Me.columnACTVTY_RL = MyBase.Columns("ACTVTY_RL")
            Me.columnEXCPTN_BT = MyBase.Columns("EXCPTN_BT")
            Me.columnMSTR_ID_CSV = MyBase.Columns("MSTR_ID_CSV")
            Me.columnQCK_LNK_ID_CSV = MyBase.Columns("QCK_LNK_ID_CSV")
            Me.columnCNCL_RGHT_BT = MyBase.Columns("CNCL_RGHT_BT")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnACTVTY_ID = New Global.System.Data.DataColumn("ACTVTY_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTVTY_ID)
            Me.columnACTVTY_NAM = New Global.System.Data.DataColumn("ACTVTY_NAM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTVTY_NAM)
            Me.columnPRCSS_ID = New Global.System.Data.DataColumn("PRCSS_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRCSS_ID)
            Me.columnLST_QRY = New Global.System.Data.DataColumn("LST_QRY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLST_QRY)
            Me.columnLST_URL = New Global.System.Data.DataColumn("LST_URL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLST_URL)
            Me.columnLST_TTL = New Global.System.Data.DataColumn("LST_TTL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLST_TTL)
            Me.columnLST_CLCNT = New Global.System.Data.DataColumn("LST_CLCNT", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLST_CLCNT)
            Me.columnMY_SBMTS_CLCNT = New Global.System.Data.DataColumn("MY_SBMTS_CLCNT", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMY_SBMTS_CLCNT)
            Me.columnMY_SBMTS_QRY = New Global.System.Data.DataColumn("MY_SBMTS_QRY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMY_SBMTS_QRY)
            Me.columnPG_URL = New Global.System.Data.DataColumn("PG_URL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPG_URL)
            Me.columnPG_TTL = New Global.System.Data.DataColumn("PG_TTL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPG_TTL)
            Me.columnTBL_NAM = New Global.System.Data.DataColumn("TBL_NAM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTBL_NAM)
            Me.columnORDR_NO = New Global.System.Data.DataColumn("ORDR_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDR_NO)
            Me.columnMNU_TXT = New Global.System.Data.DataColumn("MNU_TXT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMNU_TXT)
            Me.columnCRT_RGHT_BT = New Global.System.Data.DataColumn("CRT_RGHT_BT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCRT_RGHT_BT)
            Me.columnEDT_RGHT_BT = New Global.System.Data.DataColumn("EDT_RGHT_BT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEDT_RGHT_BT)
            Me.columnACTV_BT = New Global.System.Data.DataColumn("ACTV_BT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTV_BT)
            Me.columnACTVTY_RL = New Global.System.Data.DataColumn("ACTVTY_RL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTVTY_RL)
            Me.columnEXCPTN_BT = New Global.System.Data.DataColumn("EXCPTN_BT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXCPTN_BT)
            Me.columnMSTR_ID_CSV = New Global.System.Data.DataColumn("MSTR_ID_CSV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMSTR_ID_CSV)
            Me.columnQCK_LNK_ID_CSV = New Global.System.Data.DataColumn("QCK_LNK_ID_CSV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQCK_LNK_ID_CSV)
            Me.columnCNCL_RGHT_BT = New Global.System.Data.DataColumn("CNCL_RGHT_BT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCNCL_RGHT_BT)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnACTVTY_ID}, True))
            Me.columnACTVTY_ID.AllowDBNull = False
            Me.columnACTVTY_ID.Unique = True
            Me.columnACTVTY_NAM.MaxLength = 50
            Me.columnLST_QRY.MaxLength = 3000
            Me.columnLST_URL.MaxLength = 300
            Me.columnLST_TTL.MaxLength = 50
            Me.columnMY_SBMTS_QRY.MaxLength = 3000
            Me.columnPG_URL.MaxLength = 255
            Me.columnPG_TTL.MaxLength = 50
            Me.columnTBL_NAM.MaxLength = 50
            Me.columnMNU_TXT.MaxLength = 400
            Me.columnACTVTY_RL.MaxLength = 50
            Me.columnMSTR_ID_CSV.MaxLength = 255
            Me.columnQCK_LNK_ID_CSV.MaxLength = 255
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewACTIVITYRow() As ACTIVITYRow
            Return CType(Me.NewRow, ACTIVITYRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ACTIVITYRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ACTIVITYRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ACTIVITYRowChangedEvent) Is Nothing) Then
                RaiseEvent ACTIVITYRowChanged(Me, New ACTIVITYRowChangeEvent(CType(e.Row, ACTIVITYRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ACTIVITYRowChangingEvent) Is Nothing) Then
                RaiseEvent ACTIVITYRowChanging(Me, New ACTIVITYRowChangeEvent(CType(e.Row, ACTIVITYRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ACTIVITYRowDeletedEvent) Is Nothing) Then
                RaiseEvent ACTIVITYRowDeleted(Me, New ACTIVITYRowChangeEvent(CType(e.Row, ACTIVITYRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ACTIVITYRowDeletingEvent) Is Nothing) Then
                RaiseEvent ACTIVITYRowDeleting(Me, New ACTIVITYRowChangeEvent(CType(e.Row, ACTIVITYRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveACTIVITYRow(ByVal row As ACTIVITYRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As AddDynamicReportDataSet = New AddDynamicReportDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ACTIVITYDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class PROCESSDataTable
        Inherits Global.System.Data.TypedTableBase(Of PROCESSRow)

        Private columnPRCSS_ID As Global.System.Data.DataColumn

        Private columnPRCSS_NAM As Global.System.Data.DataColumn

        Private columnPRNT_ID As Global.System.Data.DataColumn

        Private columnPRCSS_ORDR As Global.System.Data.DataColumn

        Private columnPRCSS_RL As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "PROCESS"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRCSS_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRCSS_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRCSS_NAMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRCSS_NAM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRNT_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRNT_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRCSS_ORDRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRCSS_ORDR
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRCSS_RLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRCSS_RL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As PROCESSRow
            Get
                Return CType(Me.Rows(index), PROCESSRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event PROCESSRowChanging As PROCESSRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event PROCESSRowChanged As PROCESSRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event PROCESSRowDeleting As PROCESSRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event PROCESSRowDeleted As PROCESSRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddPROCESSRow(ByVal row As PROCESSRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddPROCESSRow(ByVal PRCSS_ID As Integer, ByVal PRCSS_NAM As String, ByVal PRNT_ID As Integer, ByVal PRCSS_ORDR As Integer, ByVal PRCSS_RL As String) As PROCESSRow
            Dim rowPROCESSRow As PROCESSRow = CType(Me.NewRow, PROCESSRow)
            Dim columnValuesArray() As Object = New Object() {PRCSS_ID, PRCSS_NAM, PRNT_ID, PRCSS_ORDR, PRCSS_RL}
            rowPROCESSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPROCESSRow)
            Return rowPROCESSRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByPRCSS_ID(ByVal PRCSS_ID As Integer) As PROCESSRow
            Return CType(Me.Rows.Find(New Object() {PRCSS_ID}), PROCESSRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PROCESSDataTable = CType(MyBase.Clone, PROCESSDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PROCESSDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnPRCSS_ID = MyBase.Columns("PRCSS_ID")
            Me.columnPRCSS_NAM = MyBase.Columns("PRCSS_NAM")
            Me.columnPRNT_ID = MyBase.Columns("PRNT_ID")
            Me.columnPRCSS_ORDR = MyBase.Columns("PRCSS_ORDR")
            Me.columnPRCSS_RL = MyBase.Columns("PRCSS_RL")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnPRCSS_ID = New Global.System.Data.DataColumn("PRCSS_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRCSS_ID)
            Me.columnPRCSS_NAM = New Global.System.Data.DataColumn("PRCSS_NAM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRCSS_NAM)
            Me.columnPRNT_ID = New Global.System.Data.DataColumn("PRNT_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRNT_ID)
            Me.columnPRCSS_ORDR = New Global.System.Data.DataColumn("PRCSS_ORDR", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRCSS_ORDR)
            Me.columnPRCSS_RL = New Global.System.Data.DataColumn("PRCSS_RL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRCSS_RL)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPRCSS_ID}, True))
            Me.columnPRCSS_ID.AllowDBNull = False
            Me.columnPRCSS_ID.Unique = True
            Me.columnPRCSS_NAM.MaxLength = 50
            Me.columnPRCSS_RL.MaxLength = 50
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewPROCESSRow() As PROCESSRow
            Return CType(Me.NewRow, PROCESSRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PROCESSRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PROCESSRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PROCESSRowChangedEvent) Is Nothing) Then
                RaiseEvent PROCESSRowChanged(Me, New PROCESSRowChangeEvent(CType(e.Row, PROCESSRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PROCESSRowChangingEvent) Is Nothing) Then
                RaiseEvent PROCESSRowChanging(Me, New PROCESSRowChangeEvent(CType(e.Row, PROCESSRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PROCESSRowDeletedEvent) Is Nothing) Then
                RaiseEvent PROCESSRowDeleted(Me, New PROCESSRowChangeEvent(CType(e.Row, PROCESSRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PROCESSRowDeletingEvent) Is Nothing) Then
                RaiseEvent PROCESSRowDeleting(Me, New PROCESSRowChangeEvent(CType(e.Row, PROCESSRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemovePROCESSRow(ByVal row As PROCESSRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As AddDynamicReportDataSet = New AddDynamicReportDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PROCESSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class REPORT_PARAMETERDataTable
        Inherits Global.System.Data.TypedTableBase(Of REPORT_PARAMETERRow)

        Private columnPRMTR_ID As Global.System.Data.DataColumn

        Private columnRPRT_ID As Global.System.Data.DataColumn

        Private columnPRMTR_NAM As Global.System.Data.DataColumn

        Private columnPRMTR_DSPLY_NAM As Global.System.Data.DataColumn

        Private columnPRMTR_TYP As Global.System.Data.DataColumn

        Private columnPRMTR_QRY As Global.System.Data.DataColumn

        Private columnPRMTR_OPT As Global.System.Data.DataColumn

        Private columnPRMTR_RL As Global.System.Data.DataColumn

        Private columnREQ_DPT_ID As Global.System.Data.DataColumn

        Private columnPRMTR_ORDR_CLMN As Global.System.Data.DataColumn

        Private columnPRMTR_ORDR_TYP As Global.System.Data.DataColumn

        Private columnPRMTR_DRPDWN As Global.System.Data.DataColumn

        Private columnPRMTR_DPNDNT As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "REPORT_PARAMETER"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRMTR_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRMTR_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RPRT_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPRT_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRMTR_NAMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRMTR_NAM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRMTR_DSPLY_NAMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRMTR_DSPLY_NAM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRMTR_TYPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRMTR_TYP
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRMTR_QRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRMTR_QRY
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRMTR_OPTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRMTR_OPT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRMTR_RLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRMTR_RL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property REQ_DPT_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREQ_DPT_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRMTR_ORDR_CLMNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRMTR_ORDR_CLMN
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRMTR_ORDR_TYPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRMTR_ORDR_TYP
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRMTR_DRPDWNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRMTR_DRPDWN
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRMTR_DPNDNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRMTR_DPNDNT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As REPORT_PARAMETERRow
            Get
                Return CType(Me.Rows(index), REPORT_PARAMETERRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event REPORT_PARAMETERRowChanging As REPORT_PARAMETERRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event REPORT_PARAMETERRowChanged As REPORT_PARAMETERRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event REPORT_PARAMETERRowDeleting As REPORT_PARAMETERRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event REPORT_PARAMETERRowDeleted As REPORT_PARAMETERRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddREPORT_PARAMETERRow(ByVal row As REPORT_PARAMETERRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddREPORT_PARAMETERRow(ByVal PRMTR_ID As Integer, ByVal RPRT_ID As Integer, ByVal PRMTR_NAM As String, ByVal PRMTR_DSPLY_NAM As String, ByVal PRMTR_TYP As String, ByVal PRMTR_QRY As String, ByVal PRMTR_OPT As Boolean, ByVal PRMTR_RL As String, ByVal REQ_DPT_ID As Boolean, ByVal PRMTR_ORDR_CLMN As String, ByVal PRMTR_ORDR_TYP As String, ByVal PRMTR_DRPDWN As Boolean, ByVal PRMTR_DPNDNT As String) As REPORT_PARAMETERRow
            Dim rowREPORT_PARAMETERRow As REPORT_PARAMETERRow = CType(Me.NewRow, REPORT_PARAMETERRow)
            Dim columnValuesArray() As Object = New Object() {PRMTR_ID, RPRT_ID, PRMTR_NAM, PRMTR_DSPLY_NAM, PRMTR_TYP, PRMTR_QRY, PRMTR_OPT, PRMTR_RL, REQ_DPT_ID, PRMTR_ORDR_CLMN, PRMTR_ORDR_TYP, PRMTR_DRPDWN, PRMTR_DPNDNT}
            rowREPORT_PARAMETERRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowREPORT_PARAMETERRow)
            Return rowREPORT_PARAMETERRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REPORT_PARAMETERDataTable = CType(MyBase.Clone, REPORT_PARAMETERDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REPORT_PARAMETERDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnPRMTR_ID = MyBase.Columns("PRMTR_ID")
            Me.columnRPRT_ID = MyBase.Columns("RPRT_ID")
            Me.columnPRMTR_NAM = MyBase.Columns("PRMTR_NAM")
            Me.columnPRMTR_DSPLY_NAM = MyBase.Columns("PRMTR_DSPLY_NAM")
            Me.columnPRMTR_TYP = MyBase.Columns("PRMTR_TYP")
            Me.columnPRMTR_QRY = MyBase.Columns("PRMTR_QRY")
            Me.columnPRMTR_OPT = MyBase.Columns("PRMTR_OPT")
            Me.columnPRMTR_RL = MyBase.Columns("PRMTR_RL")
            Me.columnREQ_DPT_ID = MyBase.Columns("REQ_DPT_ID")
            Me.columnPRMTR_ORDR_CLMN = MyBase.Columns("PRMTR_ORDR_CLMN")
            Me.columnPRMTR_ORDR_TYP = MyBase.Columns("PRMTR_ORDR_TYP")
            Me.columnPRMTR_DRPDWN = MyBase.Columns("PRMTR_DRPDWN")
            Me.columnPRMTR_DPNDNT = MyBase.Columns("PRMTR_DPNDNT")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnPRMTR_ID = New Global.System.Data.DataColumn("PRMTR_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRMTR_ID)
            Me.columnRPRT_ID = New Global.System.Data.DataColumn("RPRT_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPRT_ID)
            Me.columnPRMTR_NAM = New Global.System.Data.DataColumn("PRMTR_NAM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRMTR_NAM)
            Me.columnPRMTR_DSPLY_NAM = New Global.System.Data.DataColumn("PRMTR_DSPLY_NAM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRMTR_DSPLY_NAM)
            Me.columnPRMTR_TYP = New Global.System.Data.DataColumn("PRMTR_TYP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRMTR_TYP)
            Me.columnPRMTR_QRY = New Global.System.Data.DataColumn("PRMTR_QRY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRMTR_QRY)
            Me.columnPRMTR_OPT = New Global.System.Data.DataColumn("PRMTR_OPT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRMTR_OPT)
            Me.columnPRMTR_RL = New Global.System.Data.DataColumn("PRMTR_RL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRMTR_RL)
            Me.columnREQ_DPT_ID = New Global.System.Data.DataColumn("REQ_DPT_ID", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREQ_DPT_ID)
            Me.columnPRMTR_ORDR_CLMN = New Global.System.Data.DataColumn("PRMTR_ORDR_CLMN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRMTR_ORDR_CLMN)
            Me.columnPRMTR_ORDR_TYP = New Global.System.Data.DataColumn("PRMTR_ORDR_TYP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRMTR_ORDR_TYP)
            Me.columnPRMTR_DRPDWN = New Global.System.Data.DataColumn("PRMTR_DRPDWN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRMTR_DRPDWN)
            Me.columnPRMTR_DPNDNT = New Global.System.Data.DataColumn("PRMTR_DPNDNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRMTR_DPNDNT)
            Me.columnPRMTR_NAM.MaxLength = 50
            Me.columnPRMTR_DSPLY_NAM.MaxLength = 50
            Me.columnPRMTR_TYP.MaxLength = 50
            Me.columnPRMTR_QRY.MaxLength = 255
            Me.columnPRMTR_OPT.DefaultValue = CType(True, Boolean)
            Me.columnPRMTR_RL.MaxLength = 100
            Me.columnPRMTR_ORDR_CLMN.MaxLength = 50
            Me.columnPRMTR_ORDR_TYP.MaxLength = 10
            Me.columnPRMTR_DRPDWN.DefaultValue = CType(False, Boolean)
            Me.columnPRMTR_DPNDNT.MaxLength = 50
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewREPORT_PARAMETERRow() As REPORT_PARAMETERRow
            Return CType(Me.NewRow, REPORT_PARAMETERRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REPORT_PARAMETERRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REPORT_PARAMETERRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REPORT_PARAMETERRowChangedEvent) Is Nothing) Then
                RaiseEvent REPORT_PARAMETERRowChanged(Me, New REPORT_PARAMETERRowChangeEvent(CType(e.Row, REPORT_PARAMETERRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REPORT_PARAMETERRowChangingEvent) Is Nothing) Then
                RaiseEvent REPORT_PARAMETERRowChanging(Me, New REPORT_PARAMETERRowChangeEvent(CType(e.Row, REPORT_PARAMETERRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REPORT_PARAMETERRowDeletedEvent) Is Nothing) Then
                RaiseEvent REPORT_PARAMETERRowDeleted(Me, New REPORT_PARAMETERRowChangeEvent(CType(e.Row, REPORT_PARAMETERRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REPORT_PARAMETERRowDeletingEvent) Is Nothing) Then
                RaiseEvent REPORT_PARAMETERRowDeleting(Me, New REPORT_PARAMETERRowChangeEvent(CType(e.Row, REPORT_PARAMETERRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveREPORT_PARAMETERRow(ByVal row As REPORT_PARAMETERRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As AddDynamicReportDataSet = New AddDynamicReportDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REPORT_PARAMETERDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ACTIVITYRow
        Inherits Global.System.Data.DataRow

        Private tableACTIVITY As ACTIVITYDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableACTIVITY = CType(Me.Table, ACTIVITYDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ACTVTY_ID() As Integer
            Get
                Return CType(Me(Me.tableACTIVITY.ACTVTY_IDColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableACTIVITY.ACTVTY_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ACTVTY_NAM() As String
            Get
                Try
                    Return CType(Me(Me.tableACTIVITY.ACTVTY_NAMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACTVTY_NAM' in table 'ACTIVITY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableACTIVITY.ACTVTY_NAMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRCSS_ID() As Integer
            Get
                Try
                    Return CType(Me(Me.tableACTIVITY.PRCSS_IDColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRCSS_ID' in table 'ACTIVITY' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableACTIVITY.PRCSS_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LST_QRY() As String
            Get
                Try
                    Return CType(Me(Me.tableACTIVITY.LST_QRYColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LST_QRY' in table 'ACTIVITY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableACTIVITY.LST_QRYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LST_URL() As String
            Get
                Try
                    Return CType(Me(Me.tableACTIVITY.LST_URLColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LST_URL' in table 'ACTIVITY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableACTIVITY.LST_URLColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LST_TTL() As String
            Get
                Try
                    Return CType(Me(Me.tableACTIVITY.LST_TTLColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LST_TTL' in table 'ACTIVITY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableACTIVITY.LST_TTLColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LST_CLCNT() As Integer
            Get
                Try
                    Return CType(Me(Me.tableACTIVITY.LST_CLCNTColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LST_CLCNT' in table 'ACTIVITY' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableACTIVITY.LST_CLCNTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MY_SBMTS_CLCNT() As Integer
            Get
                Try
                    Return CType(Me(Me.tableACTIVITY.MY_SBMTS_CLCNTColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MY_SBMTS_CLCNT' in table 'ACTIVITY' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableACTIVITY.MY_SBMTS_CLCNTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MY_SBMTS_QRY() As String
            Get
                Try
                    Return CType(Me(Me.tableACTIVITY.MY_SBMTS_QRYColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MY_SBMTS_QRY' in table 'ACTIVITY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableACTIVITY.MY_SBMTS_QRYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PG_URL() As String
            Get
                Try
                    Return CType(Me(Me.tableACTIVITY.PG_URLColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PG_URL' in table 'ACTIVITY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableACTIVITY.PG_URLColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PG_TTL() As String
            Get
                Try
                    Return CType(Me(Me.tableACTIVITY.PG_TTLColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PG_TTL' in table 'ACTIVITY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableACTIVITY.PG_TTLColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TBL_NAM() As String
            Get
                Try
                    Return CType(Me(Me.tableACTIVITY.TBL_NAMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TBL_NAM' in table 'ACTIVITY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableACTIVITY.TBL_NAMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ORDR_NO() As Integer
            Get
                Try
                    Return CType(Me(Me.tableACTIVITY.ORDR_NOColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDR_NO' in table 'ACTIVITY' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableACTIVITY.ORDR_NOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MNU_TXT() As String
            Get
                Try
                    Return CType(Me(Me.tableACTIVITY.MNU_TXTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MNU_TXT' in table 'ACTIVITY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableACTIVITY.MNU_TXTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CRT_RGHT_BT() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableACTIVITY.CRT_RGHT_BTColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CRT_RGHT_BT' in table 'ACTIVITY' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableACTIVITY.CRT_RGHT_BTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EDT_RGHT_BT() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableACTIVITY.EDT_RGHT_BTColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EDT_RGHT_BT' in table 'ACTIVITY' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableACTIVITY.EDT_RGHT_BTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ACTV_BT() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableACTIVITY.ACTV_BTColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACTV_BT' in table 'ACTIVITY' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableACTIVITY.ACTV_BTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ACTVTY_RL() As String
            Get
                Try
                    Return CType(Me(Me.tableACTIVITY.ACTVTY_RLColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACTVTY_RL' in table 'ACTIVITY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableACTIVITY.ACTVTY_RLColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EXCPTN_BT() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableACTIVITY.EXCPTN_BTColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXCPTN_BT' in table 'ACTIVITY' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableACTIVITY.EXCPTN_BTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MSTR_ID_CSV() As String
            Get
                Try
                    Return CType(Me(Me.tableACTIVITY.MSTR_ID_CSVColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MSTR_ID_CSV' in table 'ACTIVITY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableACTIVITY.MSTR_ID_CSVColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property QCK_LNK_ID_CSV() As String
            Get
                Try
                    Return CType(Me(Me.tableACTIVITY.QCK_LNK_ID_CSVColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QCK_LNK_ID_CSV' in table 'ACTIVITY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableACTIVITY.QCK_LNK_ID_CSVColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CNCL_RGHT_BT() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableACTIVITY.CNCL_RGHT_BTColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CNCL_RGHT_BT' in table 'ACTIVITY' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableACTIVITY.CNCL_RGHT_BTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsACTVTY_NAMNull() As Boolean
            Return Me.IsNull(Me.tableACTIVITY.ACTVTY_NAMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetACTVTY_NAMNull()
            Me(Me.tableACTIVITY.ACTVTY_NAMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRCSS_IDNull() As Boolean
            Return Me.IsNull(Me.tableACTIVITY.PRCSS_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRCSS_IDNull()
            Me(Me.tableACTIVITY.PRCSS_IDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLST_QRYNull() As Boolean
            Return Me.IsNull(Me.tableACTIVITY.LST_QRYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLST_QRYNull()
            Me(Me.tableACTIVITY.LST_QRYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLST_URLNull() As Boolean
            Return Me.IsNull(Me.tableACTIVITY.LST_URLColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLST_URLNull()
            Me(Me.tableACTIVITY.LST_URLColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLST_TTLNull() As Boolean
            Return Me.IsNull(Me.tableACTIVITY.LST_TTLColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLST_TTLNull()
            Me(Me.tableACTIVITY.LST_TTLColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLST_CLCNTNull() As Boolean
            Return Me.IsNull(Me.tableACTIVITY.LST_CLCNTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLST_CLCNTNull()
            Me(Me.tableACTIVITY.LST_CLCNTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMY_SBMTS_CLCNTNull() As Boolean
            Return Me.IsNull(Me.tableACTIVITY.MY_SBMTS_CLCNTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMY_SBMTS_CLCNTNull()
            Me(Me.tableACTIVITY.MY_SBMTS_CLCNTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMY_SBMTS_QRYNull() As Boolean
            Return Me.IsNull(Me.tableACTIVITY.MY_SBMTS_QRYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMY_SBMTS_QRYNull()
            Me(Me.tableACTIVITY.MY_SBMTS_QRYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPG_URLNull() As Boolean
            Return Me.IsNull(Me.tableACTIVITY.PG_URLColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPG_URLNull()
            Me(Me.tableACTIVITY.PG_URLColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPG_TTLNull() As Boolean
            Return Me.IsNull(Me.tableACTIVITY.PG_TTLColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPG_TTLNull()
            Me(Me.tableACTIVITY.PG_TTLColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTBL_NAMNull() As Boolean
            Return Me.IsNull(Me.tableACTIVITY.TBL_NAMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTBL_NAMNull()
            Me(Me.tableACTIVITY.TBL_NAMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsORDR_NONull() As Boolean
            Return Me.IsNull(Me.tableACTIVITY.ORDR_NOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetORDR_NONull()
            Me(Me.tableACTIVITY.ORDR_NOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMNU_TXTNull() As Boolean
            Return Me.IsNull(Me.tableACTIVITY.MNU_TXTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMNU_TXTNull()
            Me(Me.tableACTIVITY.MNU_TXTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCRT_RGHT_BTNull() As Boolean
            Return Me.IsNull(Me.tableACTIVITY.CRT_RGHT_BTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCRT_RGHT_BTNull()
            Me(Me.tableACTIVITY.CRT_RGHT_BTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEDT_RGHT_BTNull() As Boolean
            Return Me.IsNull(Me.tableACTIVITY.EDT_RGHT_BTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEDT_RGHT_BTNull()
            Me(Me.tableACTIVITY.EDT_RGHT_BTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsACTV_BTNull() As Boolean
            Return Me.IsNull(Me.tableACTIVITY.ACTV_BTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetACTV_BTNull()
            Me(Me.tableACTIVITY.ACTV_BTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsACTVTY_RLNull() As Boolean
            Return Me.IsNull(Me.tableACTIVITY.ACTVTY_RLColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetACTVTY_RLNull()
            Me(Me.tableACTIVITY.ACTVTY_RLColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEXCPTN_BTNull() As Boolean
            Return Me.IsNull(Me.tableACTIVITY.EXCPTN_BTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEXCPTN_BTNull()
            Me(Me.tableACTIVITY.EXCPTN_BTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMSTR_ID_CSVNull() As Boolean
            Return Me.IsNull(Me.tableACTIVITY.MSTR_ID_CSVColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMSTR_ID_CSVNull()
            Me(Me.tableACTIVITY.MSTR_ID_CSVColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsQCK_LNK_ID_CSVNull() As Boolean
            Return Me.IsNull(Me.tableACTIVITY.QCK_LNK_ID_CSVColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetQCK_LNK_ID_CSVNull()
            Me(Me.tableACTIVITY.QCK_LNK_ID_CSVColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCNCL_RGHT_BTNull() As Boolean
            Return Me.IsNull(Me.tableACTIVITY.CNCL_RGHT_BTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCNCL_RGHT_BTNull()
            Me(Me.tableACTIVITY.CNCL_RGHT_BTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PROCESSRow
        Inherits Global.System.Data.DataRow

        Private tablePROCESS As PROCESSDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePROCESS = CType(Me.Table, PROCESSDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRCSS_ID() As Integer
            Get
                Return CType(Me(Me.tablePROCESS.PRCSS_IDColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tablePROCESS.PRCSS_IDColumn) = Value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRCSS_NAM() As String
            Get
                Try
                    Return CType(Me(Me.tablePROCESS.PRCSS_NAMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRCSS_NAM' in table 'PROCESS' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePROCESS.PRCSS_NAMColumn) = Value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRNT_ID() As Integer
            Get
                Try
                    Return CType(Me(Me.tablePROCESS.PRNT_IDColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRNT_ID' in table 'PROCESS' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablePROCESS.PRNT_IDColumn) = Value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRCSS_ORDR() As Integer
            Get
                Try
                    Return CType(Me(Me.tablePROCESS.PRCSS_ORDRColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRCSS_ORDR' in table 'PROCESS' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablePROCESS.PRCSS_ORDRColumn) = Value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRCSS_RL() As String
            Get
                Try
                    Return CType(Me(Me.tablePROCESS.PRCSS_RLColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRCSS_RL' in table 'PROCESS' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePROCESS.PRCSS_RLColumn) = Value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRCSS_NAMNull() As Boolean
            Return Me.IsNull(Me.tablePROCESS.PRCSS_NAMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRCSS_NAMNull()
            Me(Me.tablePROCESS.PRCSS_NAMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRNT_IDNull() As Boolean
            Return Me.IsNull(Me.tablePROCESS.PRNT_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRNT_IDNull()
            Me(Me.tablePROCESS.PRNT_IDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRCSS_ORDRNull() As Boolean
            Return Me.IsNull(Me.tablePROCESS.PRCSS_ORDRColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRCSS_ORDRNull()
            Me(Me.tablePROCESS.PRCSS_ORDRColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRCSS_RLNull() As Boolean
            Return Me.IsNull(Me.tablePROCESS.PRCSS_RLColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRCSS_RLNull()
            Me(Me.tablePROCESS.PRCSS_RLColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class REPORT_PARAMETERRow
        Inherits Global.System.Data.DataRow

        Private tableREPORT_PARAMETER As REPORT_PARAMETERDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREPORT_PARAMETER = CType(Me.Table, REPORT_PARAMETERDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRMTR_ID() As Integer
            Get
                Try
                    Return CType(Me(Me.tableREPORT_PARAMETER.PRMTR_IDColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRMTR_ID' in table 'REPORT_PARAMETER' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableREPORT_PARAMETER.PRMTR_IDColumn) = Value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RPRT_ID() As Integer
            Get
                Try
                    Return CType(Me(Me.tableREPORT_PARAMETER.RPRT_IDColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPRT_ID' in table 'REPORT_PARAMETER' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableREPORT_PARAMETER.RPRT_IDColumn) = Value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRMTR_NAM() As String
            Get
                Try
                    Return CType(Me(Me.tableREPORT_PARAMETER.PRMTR_NAMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRMTR_NAM' in table 'REPORT_PARAMETER' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableREPORT_PARAMETER.PRMTR_NAMColumn) = Value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRMTR_DSPLY_NAM() As String
            Get
                Try
                    Return CType(Me(Me.tableREPORT_PARAMETER.PRMTR_DSPLY_NAMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRMTR_DSPLY_NAM' in table 'REPORT_PARAMETER' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableREPORT_PARAMETER.PRMTR_DSPLY_NAMColumn) = Value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRMTR_TYP() As String
            Get
                Try
                    Return CType(Me(Me.tableREPORT_PARAMETER.PRMTR_TYPColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRMTR_TYP' in table 'REPORT_PARAMETER' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableREPORT_PARAMETER.PRMTR_TYPColumn) = Value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRMTR_QRY() As String
            Get
                Try
                    Return CType(Me(Me.tableREPORT_PARAMETER.PRMTR_QRYColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRMTR_QRY' in table 'REPORT_PARAMETER' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableREPORT_PARAMETER.PRMTR_QRYColumn) = Value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRMTR_OPT() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableREPORT_PARAMETER.PRMTR_OPTColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRMTR_OPT' in table 'REPORT_PARAMETER' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableREPORT_PARAMETER.PRMTR_OPTColumn) = Value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRMTR_RL() As String
            Get
                Try
                    Return CType(Me(Me.tableREPORT_PARAMETER.PRMTR_RLColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRMTR_RL' in table 'REPORT_PARAMETER' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableREPORT_PARAMETER.PRMTR_RLColumn) = Value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property REQ_DPT_ID() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableREPORT_PARAMETER.REQ_DPT_IDColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REQ_DPT_ID' in table 'REPORT_PARAMETER' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableREPORT_PARAMETER.REQ_DPT_IDColumn) = Value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRMTR_ORDR_CLMN() As String
            Get
                Try
                    Return CType(Me(Me.tableREPORT_PARAMETER.PRMTR_ORDR_CLMNColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRMTR_ORDR_CLMN' in table 'REPORT_PARAMETER' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableREPORT_PARAMETER.PRMTR_ORDR_CLMNColumn) = Value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRMTR_ORDR_TYP() As String
            Get
                Try
                    Return CType(Me(Me.tableREPORT_PARAMETER.PRMTR_ORDR_TYPColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRMTR_ORDR_TYP' in table 'REPORT_PARAMETER' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableREPORT_PARAMETER.PRMTR_ORDR_TYPColumn) = Value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRMTR_DRPDWN() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableREPORT_PARAMETER.PRMTR_DRPDWNColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRMTR_DRPDWN' in table 'REPORT_PARAMETER' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableREPORT_PARAMETER.PRMTR_DRPDWNColumn) = Value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRMTR_DPNDNT() As String
            Get
                Try
                    Return CType(Me(Me.tableREPORT_PARAMETER.PRMTR_DPNDNTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRMTR_DPNDNT' in table 'REPORT_PARAMETER' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableREPORT_PARAMETER.PRMTR_DPNDNTColumn) = Value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRMTR_IDNull() As Boolean
            Return Me.IsNull(Me.tableREPORT_PARAMETER.PRMTR_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRMTR_IDNull()
            Me(Me.tableREPORT_PARAMETER.PRMTR_IDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRPRT_IDNull() As Boolean
            Return Me.IsNull(Me.tableREPORT_PARAMETER.RPRT_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRPRT_IDNull()
            Me(Me.tableREPORT_PARAMETER.RPRT_IDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRMTR_NAMNull() As Boolean
            Return Me.IsNull(Me.tableREPORT_PARAMETER.PRMTR_NAMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRMTR_NAMNull()
            Me(Me.tableREPORT_PARAMETER.PRMTR_NAMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRMTR_DSPLY_NAMNull() As Boolean
            Return Me.IsNull(Me.tableREPORT_PARAMETER.PRMTR_DSPLY_NAMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRMTR_DSPLY_NAMNull()
            Me(Me.tableREPORT_PARAMETER.PRMTR_DSPLY_NAMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRMTR_TYPNull() As Boolean
            Return Me.IsNull(Me.tableREPORT_PARAMETER.PRMTR_TYPColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRMTR_TYPNull()
            Me(Me.tableREPORT_PARAMETER.PRMTR_TYPColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRMTR_QRYNull() As Boolean
            Return Me.IsNull(Me.tableREPORT_PARAMETER.PRMTR_QRYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRMTR_QRYNull()
            Me(Me.tableREPORT_PARAMETER.PRMTR_QRYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRMTR_OPTNull() As Boolean
            Return Me.IsNull(Me.tableREPORT_PARAMETER.PRMTR_OPTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRMTR_OPTNull()
            Me(Me.tableREPORT_PARAMETER.PRMTR_OPTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRMTR_RLNull() As Boolean
            Return Me.IsNull(Me.tableREPORT_PARAMETER.PRMTR_RLColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRMTR_RLNull()
            Me(Me.tableREPORT_PARAMETER.PRMTR_RLColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsREQ_DPT_IDNull() As Boolean
            Return Me.IsNull(Me.tableREPORT_PARAMETER.REQ_DPT_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetREQ_DPT_IDNull()
            Me(Me.tableREPORT_PARAMETER.REQ_DPT_IDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRMTR_ORDR_CLMNNull() As Boolean
            Return Me.IsNull(Me.tableREPORT_PARAMETER.PRMTR_ORDR_CLMNColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRMTR_ORDR_CLMNNull()
            Me(Me.tableREPORT_PARAMETER.PRMTR_ORDR_CLMNColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRMTR_ORDR_TYPNull() As Boolean
            Return Me.IsNull(Me.tableREPORT_PARAMETER.PRMTR_ORDR_TYPColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRMTR_ORDR_TYPNull()
            Me(Me.tableREPORT_PARAMETER.PRMTR_ORDR_TYPColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRMTR_DRPDWNNull() As Boolean
            Return Me.IsNull(Me.tableREPORT_PARAMETER.PRMTR_DRPDWNColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRMTR_DRPDWNNull()
            Me(Me.tableREPORT_PARAMETER.PRMTR_DRPDWNColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRMTR_DPNDNTNull() As Boolean
            Return Me.IsNull(Me.tableREPORT_PARAMETER.PRMTR_DPNDNTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRMTR_DPNDNTNull()
            Me(Me.tableREPORT_PARAMETER.PRMTR_DPNDNTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class ACTIVITYRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As ACTIVITYRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As ACTIVITYRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As ACTIVITYRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class PROCESSRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As PROCESSRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As PROCESSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As PROCESSRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class REPORT_PARAMETERRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As REPORT_PARAMETERRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As REPORT_PARAMETERRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As REPORT_PARAMETERRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
