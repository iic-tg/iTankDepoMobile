'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.17929
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("SupplierDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class SupplierDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableSUPPLIER As SUPPLIERDataTable
    
    Private tableSUPPLIER_CONTRACT_DETAIL As SUPPLIER_CONTRACT_DETAILDataTable
    
    Private tableV_SUPPLIER_EQUIPMENT_DETAIL As V_SUPPLIER_EQUIPMENT_DETAILDataTable
    
    Private tableSUPPLIER_EQUIPMENT_DETAIL As SUPPLIER_EQUIPMENT_DETAILDataTable
    
    Private tableEQUIPMENT_INFORMATION As EQUIPMENT_INFORMATIONDataTable
    
    Private tableSUPPLIER_CNTRACT_DTL As SUPPLIER_CNTRACT_DTLDataTable

    Private tableV_RENTAL_ENTRY As V_RENTAL_ENTRYDataTable

    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub New()
        MyBase.New()
        Me.BeginInit()
        Me.InitClass()
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, False)
        If (Me.IsBinarySerialized(info, context) = True) Then
            Me.InitVars(False)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)), String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("SUPPLIER")) Is Nothing) Then
                MyBase.Tables.Add(New SUPPLIERDataTable(ds.Tables("SUPPLIER")))
            End If
            If (Not (ds.Tables("SUPPLIER_CONTRACT_DETAIL")) Is Nothing) Then
                MyBase.Tables.Add(New SUPPLIER_CONTRACT_DETAILDataTable(ds.Tables("SUPPLIER_CONTRACT_DETAIL")))
            End If
            If (Not (ds.Tables("V_SUPPLIER_EQUIPMENT_DETAIL")) Is Nothing) Then
                MyBase.Tables.Add(New V_SUPPLIER_EQUIPMENT_DETAILDataTable(ds.Tables("V_SUPPLIER_EQUIPMENT_DETAIL")))
            End If
            If (Not (ds.Tables("SUPPLIER_EQUIPMENT_DETAIL")) Is Nothing) Then
                MyBase.Tables.Add(New SUPPLIER_EQUIPMENT_DETAILDataTable(ds.Tables("SUPPLIER_EQUIPMENT_DETAIL")))
            End If
            If (Not (ds.Tables("EQUIPMENT_INFORMATION")) Is Nothing) Then
                MyBase.Tables.Add(New EQUIPMENT_INFORMATIONDataTable(ds.Tables("EQUIPMENT_INFORMATION")))
            End If
            If (Not (ds.Tables("SUPPLIER_CNTRACT_DTL")) Is Nothing) Then
                MyBase.Tables.Add(New SUPPLIER_CNTRACT_DTLDataTable(ds.Tables("SUPPLIER_CNTRACT_DTL")))
            End If
            If (Not (ds.Tables("V_RENTAL_ENTRY")) Is Nothing) Then
                MyBase.Tables.Add(New V_RENTAL_ENTRYDataTable(ds.Tables("V_RENTAL_ENTRY")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property SUPPLIER() As SUPPLIERDataTable
        Get
            Return Me.tableSUPPLIER
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property SUPPLIER_CONTRACT_DETAIL() As SUPPLIER_CONTRACT_DETAILDataTable
        Get
            Return Me.tableSUPPLIER_CONTRACT_DETAIL
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property V_SUPPLIER_EQUIPMENT_DETAIL() As V_SUPPLIER_EQUIPMENT_DETAILDataTable
        Get
            Return Me.tableV_SUPPLIER_EQUIPMENT_DETAIL
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property SUPPLIER_EQUIPMENT_DETAIL() As SUPPLIER_EQUIPMENT_DETAILDataTable
        Get
            Return Me.tableSUPPLIER_EQUIPMENT_DETAIL
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property EQUIPMENT_INFORMATION() As EQUIPMENT_INFORMATIONDataTable
        Get
            Return Me.tableEQUIPMENT_INFORMATION
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property SUPPLIER_CNTRACT_DTL() As SUPPLIER_CNTRACT_DTLDataTable
        Get
            Return Me.tableSUPPLIER_CNTRACT_DTL
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property V_RENTAL_ENTRY() As V_RENTAL_ENTRYDataTable
        Get
            Return Me.tableV_RENTAL_ENTRY
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.BrowsableAttribute(True), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)> _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set(value As Global.System.Data.SchemaSerializationMode)
            Me._schemaSerializationMode = value
        End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit()
        Me.InitClass()
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As SupplierDataSet = CType(MyBase.Clone, SupplierDataSet)
        cln.InitVars()
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset()
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("SUPPLIER")) Is Nothing) Then
                MyBase.Tables.Add(New SUPPLIERDataTable(ds.Tables("SUPPLIER")))
            End If
            If (Not (ds.Tables("SUPPLIER_CONTRACT_DETAIL")) Is Nothing) Then
                MyBase.Tables.Add(New SUPPLIER_CONTRACT_DETAILDataTable(ds.Tables("SUPPLIER_CONTRACT_DETAIL")))
            End If
            If (Not (ds.Tables("V_SUPPLIER_EQUIPMENT_DETAIL")) Is Nothing) Then
                MyBase.Tables.Add(New V_SUPPLIER_EQUIPMENT_DETAILDataTable(ds.Tables("V_SUPPLIER_EQUIPMENT_DETAIL")))
            End If
            If (Not (ds.Tables("SUPPLIER_EQUIPMENT_DETAIL")) Is Nothing) Then
                MyBase.Tables.Add(New SUPPLIER_EQUIPMENT_DETAILDataTable(ds.Tables("SUPPLIER_EQUIPMENT_DETAIL")))
            End If
            If (Not (ds.Tables("EQUIPMENT_INFORMATION")) Is Nothing) Then
                MyBase.Tables.Add(New EQUIPMENT_INFORMATIONDataTable(ds.Tables("EQUIPMENT_INFORMATION")))
            End If
            If (Not (ds.Tables("SUPPLIER_CNTRACT_DTL")) Is Nothing) Then
                MyBase.Tables.Add(New SUPPLIER_CNTRACT_DTLDataTable(ds.Tables("SUPPLIER_CNTRACT_DTL")))
            End If
            If (Not (ds.Tables("V_RENTAL_ENTRY")) Is Nothing) Then
                MyBase.Tables.Add(New V_RENTAL_ENTRYDataTable(ds.Tables("V_RENTAL_ENTRY")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXml(reader)
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars()
        Me.InitVars(True)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableSUPPLIER = CType(MyBase.Tables("SUPPLIER"), SUPPLIERDataTable)
        If (initTable = True) Then
            If (Not (Me.tableSUPPLIER) Is Nothing) Then
                Me.tableSUPPLIER.InitVars()
            End If
        End If
        Me.tableSUPPLIER_CONTRACT_DETAIL = CType(MyBase.Tables("SUPPLIER_CONTRACT_DETAIL"), SUPPLIER_CONTRACT_DETAILDataTable)
        If (initTable = True) Then
            If (Not (Me.tableSUPPLIER_CONTRACT_DETAIL) Is Nothing) Then
                Me.tableSUPPLIER_CONTRACT_DETAIL.InitVars()
            End If
        End If
        Me.tableV_SUPPLIER_EQUIPMENT_DETAIL = CType(MyBase.Tables("V_SUPPLIER_EQUIPMENT_DETAIL"), V_SUPPLIER_EQUIPMENT_DETAILDataTable)
        If (initTable = True) Then
            If (Not (Me.tableV_SUPPLIER_EQUIPMENT_DETAIL) Is Nothing) Then
                Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.InitVars()
            End If
        End If
        Me.tableSUPPLIER_EQUIPMENT_DETAIL = CType(MyBase.Tables("SUPPLIER_EQUIPMENT_DETAIL"), SUPPLIER_EQUIPMENT_DETAILDataTable)
        If (initTable = True) Then
            If (Not (Me.tableSUPPLIER_EQUIPMENT_DETAIL) Is Nothing) Then
                Me.tableSUPPLIER_EQUIPMENT_DETAIL.InitVars()
            End If
        End If
        Me.tableEQUIPMENT_INFORMATION = CType(MyBase.Tables("EQUIPMENT_INFORMATION"), EQUIPMENT_INFORMATIONDataTable)
        If (initTable = True) Then
            If (Not (Me.tableEQUIPMENT_INFORMATION) Is Nothing) Then
                Me.tableEQUIPMENT_INFORMATION.InitVars()
            End If
        End If
        Me.tableSUPPLIER_CNTRACT_DTL = CType(MyBase.Tables("SUPPLIER_CNTRACT_DTL"), SUPPLIER_CNTRACT_DTLDataTable)
        If (initTable = True) Then
            If (Not (Me.tableSUPPLIER_CNTRACT_DTL) Is Nothing) Then
                Me.tableSUPPLIER_CNTRACT_DTL.InitVars()
            End If
        End If
        Me.tableV_RENTAL_ENTRY = CType(MyBase.Tables("V_RENTAL_ENTRY"), V_RENTAL_ENTRYDataTable)
        If (initTable = True) Then
            If (Not (Me.tableV_RENTAL_ENTRY) Is Nothing) Then
                Me.tableV_RENTAL_ENTRY.InitVars()
            End If
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitClass()
        Me.DataSetName = "SupplierDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/SupplierDataSet.xsd"
        Me.EnforceConstraints = False
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableSUPPLIER = New SUPPLIERDataTable()
        MyBase.Tables.Add(Me.tableSUPPLIER)
        Me.tableSUPPLIER_CONTRACT_DETAIL = New SUPPLIER_CONTRACT_DETAILDataTable()
        MyBase.Tables.Add(Me.tableSUPPLIER_CONTRACT_DETAIL)
        Me.tableV_SUPPLIER_EQUIPMENT_DETAIL = New V_SUPPLIER_EQUIPMENT_DETAILDataTable()
        MyBase.Tables.Add(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL)
        Me.tableSUPPLIER_EQUIPMENT_DETAIL = New SUPPLIER_EQUIPMENT_DETAILDataTable()
        MyBase.Tables.Add(Me.tableSUPPLIER_EQUIPMENT_DETAIL)
        Me.tableEQUIPMENT_INFORMATION = New EQUIPMENT_INFORMATIONDataTable()
        MyBase.Tables.Add(Me.tableEQUIPMENT_INFORMATION)
        Me.tableSUPPLIER_CNTRACT_DTL = New SUPPLIER_CNTRACT_DTLDataTable()
        MyBase.Tables.Add(Me.tableSUPPLIER_CNTRACT_DTL)
        Me.tableV_RENTAL_ENTRY = New V_RENTAL_ENTRYDataTable()
        MyBase.Tables.Add(Me.tableV_RENTAL_ENTRY)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeSUPPLIER() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeSUPPLIER_CONTRACT_DETAIL() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeV_SUPPLIER_EQUIPMENT_DETAIL() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeSUPPLIER_EQUIPMENT_DETAIL() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeEQUIPMENT_INFORMATION() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeSUPPLIER_CNTRACT_DTL() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeV_RENTAL_ENTRY() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As SupplierDataSet = New SupplierDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0

                        Do While ((s1.Position <> s1.Length) _
                                    AndAlso (s1.ReadByte = s2.ReadByte))


                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If

                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close()
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close()
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub SUPPLIERRowChangeEventHandler(ByVal sender As Object, ByVal e As SUPPLIERRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub SUPPLIER_CONTRACT_DETAILRowChangeEventHandler(ByVal sender As Object, ByVal e As SUPPLIER_CONTRACT_DETAILRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub V_SUPPLIER_EQUIPMENT_DETAILRowChangeEventHandler(ByVal sender As Object, ByVal e As V_SUPPLIER_EQUIPMENT_DETAILRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub SUPPLIER_EQUIPMENT_DETAILRowChangeEventHandler(ByVal sender As Object, ByVal e As SUPPLIER_EQUIPMENT_DETAILRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub EQUIPMENT_INFORMATIONRowChangeEventHandler(ByVal sender As Object, ByVal e As EQUIPMENT_INFORMATIONRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub SUPPLIER_CNTRACT_DTLRowChangeEventHandler(ByVal sender As Object, ByVal e As SUPPLIER_CNTRACT_DTLRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub V_RENTAL_ENTRYRowChangeEventHandler(ByVal sender As Object, ByVal e As V_RENTAL_ENTRYRowChangeEvent)

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class SUPPLIERDataTable
        Inherits Global.System.Data.TypedTableBase(Of SUPPLIERRow)

        Private columnSPPLR_ID As Global.System.Data.DataColumn

        Private columnSPPLR_CD As Global.System.Data.DataColumn

        Private columnSPPLR_DSCRPTN_VC As Global.System.Data.DataColumn

        Private columnACTV_BT As Global.System.Data.DataColumn

        Private columnCRTD_BY As Global.System.Data.DataColumn

        Private columnCRTD_DT As Global.System.Data.DataColumn

        Private columnMDFD_BY As Global.System.Data.DataColumn

        Private columnMDFD_DT As Global.System.Data.DataColumn

        Private columnDPT_ID As Global.System.Data.DataColumn

        Private columnEDIT As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "SUPPLIER"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SPPLR_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPPLR_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SPPLR_CDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPPLR_CD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SPPLR_DSCRPTN_VCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPPLR_DSCRPTN_VC
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ACTV_BTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTV_BT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CRTD_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCRTD_BY
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CRTD_DTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCRTD_DT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MDFD_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMDFD_BY
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MDFD_DTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMDFD_DT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DPT_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPT_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EDITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEDIT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As SUPPLIERRow
            Get
                Return CType(Me.Rows(index), SUPPLIERRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event SUPPLIERRowChanging As SUPPLIERRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event SUPPLIERRowChanged As SUPPLIERRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event SUPPLIERRowDeleting As SUPPLIERRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event SUPPLIERRowDeleted As SUPPLIERRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddSUPPLIERRow(ByVal row As SUPPLIERRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddSUPPLIERRow(ByVal SPPLR_ID As Long, ByVal SPPLR_CD As String, ByVal SPPLR_DSCRPTN_VC As String, ByVal ACTV_BT As Boolean, ByVal CRTD_BY As String, ByVal CRTD_DT As Date, ByVal MDFD_BY As String, ByVal MDFD_DT As Date, ByVal DPT_ID As Integer, ByVal EDIT As String) As SUPPLIERRow
            Dim rowSUPPLIERRow As SUPPLIERRow = CType(Me.NewRow, SUPPLIERRow)
            Dim columnValuesArray() As Object = New Object() {SPPLR_ID, SPPLR_CD, SPPLR_DSCRPTN_VC, ACTV_BT, CRTD_BY, CRTD_DT, MDFD_BY, MDFD_DT, DPT_ID, EDIT}
            rowSUPPLIERRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSUPPLIERRow)
            Return rowSUPPLIERRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindBySPPLR_ID(ByVal SPPLR_ID As Long) As SUPPLIERRow
            Return CType(Me.Rows.Find(New Object() {SPPLR_ID}), SUPPLIERRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SUPPLIERDataTable = CType(MyBase.Clone, SUPPLIERDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SUPPLIERDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnSPPLR_ID = MyBase.Columns("SPPLR_ID")
            Me.columnSPPLR_CD = MyBase.Columns("SPPLR_CD")
            Me.columnSPPLR_DSCRPTN_VC = MyBase.Columns("SPPLR_DSCRPTN_VC")
            Me.columnACTV_BT = MyBase.Columns("ACTV_BT")
            Me.columnCRTD_BY = MyBase.Columns("CRTD_BY")
            Me.columnCRTD_DT = MyBase.Columns("CRTD_DT")
            Me.columnMDFD_BY = MyBase.Columns("MDFD_BY")
            Me.columnMDFD_DT = MyBase.Columns("MDFD_DT")
            Me.columnDPT_ID = MyBase.Columns("DPT_ID")
            Me.columnEDIT = MyBase.Columns("EDIT")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnSPPLR_ID = New Global.System.Data.DataColumn("SPPLR_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPPLR_ID)
            Me.columnSPPLR_CD = New Global.System.Data.DataColumn("SPPLR_CD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPPLR_CD)
            Me.columnSPPLR_DSCRPTN_VC = New Global.System.Data.DataColumn("SPPLR_DSCRPTN_VC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPPLR_DSCRPTN_VC)
            Me.columnACTV_BT = New Global.System.Data.DataColumn("ACTV_BT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTV_BT)
            Me.columnCRTD_BY = New Global.System.Data.DataColumn("CRTD_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCRTD_BY)
            Me.columnCRTD_DT = New Global.System.Data.DataColumn("CRTD_DT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCRTD_DT)
            Me.columnMDFD_BY = New Global.System.Data.DataColumn("MDFD_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMDFD_BY)
            Me.columnMDFD_DT = New Global.System.Data.DataColumn("MDFD_DT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMDFD_DT)
            Me.columnDPT_ID = New Global.System.Data.DataColumn("DPT_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPT_ID)
            Me.columnEDIT = New Global.System.Data.DataColumn("EDIT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEDIT)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSPPLR_ID}, True))
            Me.columnSPPLR_ID.AllowDBNull = False
            Me.columnSPPLR_ID.Unique = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewSUPPLIERRow() As SUPPLIERRow
            Return CType(Me.NewRow, SUPPLIERRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SUPPLIERRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SUPPLIERRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SUPPLIERRowChangedEvent) Is Nothing) Then
                RaiseEvent SUPPLIERRowChanged(Me, New SUPPLIERRowChangeEvent(CType(e.Row, SUPPLIERRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SUPPLIERRowChangingEvent) Is Nothing) Then
                RaiseEvent SUPPLIERRowChanging(Me, New SUPPLIERRowChangeEvent(CType(e.Row, SUPPLIERRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SUPPLIERRowDeletedEvent) Is Nothing) Then
                RaiseEvent SUPPLIERRowDeleted(Me, New SUPPLIERRowChangeEvent(CType(e.Row, SUPPLIERRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SUPPLIERRowDeletingEvent) Is Nothing) Then
                RaiseEvent SUPPLIERRowDeleting(Me, New SUPPLIERRowChangeEvent(CType(e.Row, SUPPLIERRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveSUPPLIERRow(ByVal row As SUPPLIERRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SupplierDataSet = New SupplierDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SUPPLIERDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class SUPPLIER_CONTRACT_DETAILDataTable
        Inherits Global.System.Data.TypedTableBase(Of SUPPLIER_CONTRACT_DETAILRow)

        Private columnSPPLR_CNTRCT_DTL_ID As Global.System.Data.DataColumn

        Private columnSPPLR_ID As Global.System.Data.DataColumn

        Private columnCNTRCT_RFRNC_NO As Global.System.Data.DataColumn

        Private columnCNTRCT_STRT_DT As Global.System.Data.DataColumn

        Private columnCNTRCT_END_DT As Global.System.Data.DataColumn

        Private columnRNTL_PR_DY As Global.System.Data.DataColumn

        Private columnRMRKS_vc As Global.System.Data.DataColumn

        Private columnCHECKED As Global.System.Data.DataColumn

        Private columnEDIT As Global.System.Data.DataColumn

        Private columnSPPLR_CD As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "SUPPLIER_CONTRACT_DETAIL"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SPPLR_CNTRCT_DTL_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPPLR_CNTRCT_DTL_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SPPLR_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPPLR_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CNTRCT_RFRNC_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCNTRCT_RFRNC_NO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CNTRCT_STRT_DTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCNTRCT_STRT_DT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CNTRCT_END_DTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCNTRCT_END_DT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RNTL_PR_DYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRNTL_PR_DY
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RMRKS_vcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRMRKS_vc
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CHECKEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHECKED
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EDITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEDIT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SPPLR_CDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPPLR_CD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As SUPPLIER_CONTRACT_DETAILRow
            Get
                Return CType(Me.Rows(index), SUPPLIER_CONTRACT_DETAILRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event SUPPLIER_CONTRACT_DETAILRowChanging As SUPPLIER_CONTRACT_DETAILRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event SUPPLIER_CONTRACT_DETAILRowChanged As SUPPLIER_CONTRACT_DETAILRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event SUPPLIER_CONTRACT_DETAILRowDeleting As SUPPLIER_CONTRACT_DETAILRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event SUPPLIER_CONTRACT_DETAILRowDeleted As SUPPLIER_CONTRACT_DETAILRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddSUPPLIER_CONTRACT_DETAILRow(ByVal row As SUPPLIER_CONTRACT_DETAILRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddSUPPLIER_CONTRACT_DETAILRow(ByVal SPPLR_CNTRCT_DTL_ID As Long, ByVal SPPLR_ID As Long, ByVal CNTRCT_RFRNC_NO As String, ByVal CNTRCT_STRT_DT As Date, ByVal CNTRCT_END_DT As Date, ByVal RNTL_PR_DY As Decimal, ByVal RMRKS_vc As String, ByVal CHECKED As String, ByVal EDIT As String, ByVal SPPLR_CD As String) As SUPPLIER_CONTRACT_DETAILRow
            Dim rowSUPPLIER_CONTRACT_DETAILRow As SUPPLIER_CONTRACT_DETAILRow = CType(Me.NewRow, SUPPLIER_CONTRACT_DETAILRow)
            Dim columnValuesArray() As Object = New Object() {SPPLR_CNTRCT_DTL_ID, SPPLR_ID, CNTRCT_RFRNC_NO, CNTRCT_STRT_DT, CNTRCT_END_DT, RNTL_PR_DY, RMRKS_vc, CHECKED, EDIT, SPPLR_CD}
            rowSUPPLIER_CONTRACT_DETAILRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSUPPLIER_CONTRACT_DETAILRow)
            Return rowSUPPLIER_CONTRACT_DETAILRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindBySPPLR_CNTRCT_DTL_ID(ByVal SPPLR_CNTRCT_DTL_ID As Long) As SUPPLIER_CONTRACT_DETAILRow
            Return CType(Me.Rows.Find(New Object() {SPPLR_CNTRCT_DTL_ID}), SUPPLIER_CONTRACT_DETAILRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SUPPLIER_CONTRACT_DETAILDataTable = CType(MyBase.Clone, SUPPLIER_CONTRACT_DETAILDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SUPPLIER_CONTRACT_DETAILDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnSPPLR_CNTRCT_DTL_ID = MyBase.Columns("SPPLR_CNTRCT_DTL_ID")
            Me.columnSPPLR_ID = MyBase.Columns("SPPLR_ID")
            Me.columnCNTRCT_RFRNC_NO = MyBase.Columns("CNTRCT_RFRNC_NO")
            Me.columnCNTRCT_STRT_DT = MyBase.Columns("CNTRCT_STRT_DT")
            Me.columnCNTRCT_END_DT = MyBase.Columns("CNTRCT_END_DT")
            Me.columnRNTL_PR_DY = MyBase.Columns("RNTL_PR_DY")
            Me.columnRMRKS_vc = MyBase.Columns("RMRKS_VC")
            Me.columnCHECKED = MyBase.Columns("CHECKED")
            Me.columnEDIT = MyBase.Columns("EDIT")
            Me.columnSPPLR_CD = MyBase.Columns("SPPLR_CD")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnSPPLR_CNTRCT_DTL_ID = New Global.System.Data.DataColumn("SPPLR_CNTRCT_DTL_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPPLR_CNTRCT_DTL_ID)
            Me.columnSPPLR_ID = New Global.System.Data.DataColumn("SPPLR_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPPLR_ID)
            Me.columnCNTRCT_RFRNC_NO = New Global.System.Data.DataColumn("CNTRCT_RFRNC_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCNTRCT_RFRNC_NO)
            Me.columnCNTRCT_STRT_DT = New Global.System.Data.DataColumn("CNTRCT_STRT_DT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCNTRCT_STRT_DT)
            Me.columnCNTRCT_END_DT = New Global.System.Data.DataColumn("CNTRCT_END_DT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCNTRCT_END_DT)
            Me.columnRNTL_PR_DY = New Global.System.Data.DataColumn("RNTL_PR_DY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRNTL_PR_DY)
            Me.columnRMRKS_vc = New Global.System.Data.DataColumn("RMRKS_VC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnRMRKS_vc.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "RMRKS_vc")
            Me.columnRMRKS_vc.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "RMRKS_vcColumn")
            Me.columnRMRKS_vc.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnRMRKS_vc")
            Me.columnRMRKS_vc.ExtendedProperties.Add("Generator_UserColumnName", "RMRKS_VC")
            MyBase.Columns.Add(Me.columnRMRKS_vc)
            Me.columnCHECKED = New Global.System.Data.DataColumn("CHECKED", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHECKED)
            Me.columnEDIT = New Global.System.Data.DataColumn("EDIT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEDIT)
            Me.columnSPPLR_CD = New Global.System.Data.DataColumn("SPPLR_CD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPPLR_CD)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSPPLR_CNTRCT_DTL_ID}, True))
            Me.columnSPPLR_CNTRCT_DTL_ID.AllowDBNull = False
            Me.columnSPPLR_CNTRCT_DTL_ID.Unique = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewSUPPLIER_CONTRACT_DETAILRow() As SUPPLIER_CONTRACT_DETAILRow
            Return CType(Me.NewRow, SUPPLIER_CONTRACT_DETAILRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SUPPLIER_CONTRACT_DETAILRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SUPPLIER_CONTRACT_DETAILRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SUPPLIER_CONTRACT_DETAILRowChangedEvent) Is Nothing) Then
                RaiseEvent SUPPLIER_CONTRACT_DETAILRowChanged(Me, New SUPPLIER_CONTRACT_DETAILRowChangeEvent(CType(e.Row, SUPPLIER_CONTRACT_DETAILRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SUPPLIER_CONTRACT_DETAILRowChangingEvent) Is Nothing) Then
                RaiseEvent SUPPLIER_CONTRACT_DETAILRowChanging(Me, New SUPPLIER_CONTRACT_DETAILRowChangeEvent(CType(e.Row, SUPPLIER_CONTRACT_DETAILRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SUPPLIER_CONTRACT_DETAILRowDeletedEvent) Is Nothing) Then
                RaiseEvent SUPPLIER_CONTRACT_DETAILRowDeleted(Me, New SUPPLIER_CONTRACT_DETAILRowChangeEvent(CType(e.Row, SUPPLIER_CONTRACT_DETAILRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SUPPLIER_CONTRACT_DETAILRowDeletingEvent) Is Nothing) Then
                RaiseEvent SUPPLIER_CONTRACT_DETAILRowDeleting(Me, New SUPPLIER_CONTRACT_DETAILRowChangeEvent(CType(e.Row, SUPPLIER_CONTRACT_DETAILRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveSUPPLIER_CONTRACT_DETAILRow(ByVal row As SUPPLIER_CONTRACT_DETAILRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SupplierDataSet = New SupplierDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SUPPLIER_CONTRACT_DETAILDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class V_SUPPLIER_EQUIPMENT_DETAILDataTable
        Inherits Global.System.Data.TypedTableBase(Of V_SUPPLIER_EQUIPMENT_DETAILRow)

        Private columnSPPLR_EQPMNT_DTL_ID As Global.System.Data.DataColumn

        Private columnSPPLR_ID As Global.System.Data.DataColumn

        Private columnSPPLR_CNTRCT_DTL_ID As Global.System.Data.DataColumn

        Private columnEQPMNT_NO As Global.System.Data.DataColumn

        Private columnEQPMNT_TYP_ID As Global.System.Data.DataColumn

        Private columnEQPMNT_TYP_CD As Global.System.Data.DataColumn

        Private columnEQPMNT_CD_ID As Global.System.Data.DataColumn

        Private columnEQPMNT_CD_CD As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "V_SUPPLIER_EQUIPMENT_DETAIL"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SPPLR_EQPMNT_DTL_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPPLR_EQPMNT_DTL_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SPPLR_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPPLR_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SPPLR_CNTRCT_DTL_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPPLR_CNTRCT_DTL_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EQPMNT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEQPMNT_NO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EQPMNT_TYP_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEQPMNT_TYP_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EQPMNT_TYP_CDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEQPMNT_TYP_CD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EQPMNT_CD_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEQPMNT_CD_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EQPMNT_CD_CDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEQPMNT_CD_CD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As V_SUPPLIER_EQUIPMENT_DETAILRow
            Get
                Return CType(Me.Rows(index), V_SUPPLIER_EQUIPMENT_DETAILRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event V_SUPPLIER_EQUIPMENT_DETAILRowChanging As V_SUPPLIER_EQUIPMENT_DETAILRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event V_SUPPLIER_EQUIPMENT_DETAILRowChanged As V_SUPPLIER_EQUIPMENT_DETAILRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event V_SUPPLIER_EQUIPMENT_DETAILRowDeleting As V_SUPPLIER_EQUIPMENT_DETAILRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event V_SUPPLIER_EQUIPMENT_DETAILRowDeleted As V_SUPPLIER_EQUIPMENT_DETAILRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddV_SUPPLIER_EQUIPMENT_DETAILRow(ByVal row As V_SUPPLIER_EQUIPMENT_DETAILRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddV_SUPPLIER_EQUIPMENT_DETAILRow(ByVal SPPLR_EQPMNT_DTL_ID As Long, ByVal SPPLR_ID As Long, ByVal SPPLR_CNTRCT_DTL_ID As Long, ByVal EQPMNT_NO As String, ByVal EQPMNT_TYP_ID As Long, ByVal EQPMNT_TYP_CD As String, ByVal EQPMNT_CD_ID As Long, ByVal EQPMNT_CD_CD As String) As V_SUPPLIER_EQUIPMENT_DETAILRow
            Dim rowV_SUPPLIER_EQUIPMENT_DETAILRow As V_SUPPLIER_EQUIPMENT_DETAILRow = CType(Me.NewRow, V_SUPPLIER_EQUIPMENT_DETAILRow)
            Dim columnValuesArray() As Object = New Object() {SPPLR_EQPMNT_DTL_ID, SPPLR_ID, SPPLR_CNTRCT_DTL_ID, EQPMNT_NO, EQPMNT_TYP_ID, EQPMNT_TYP_CD, EQPMNT_CD_ID, EQPMNT_CD_CD}
            rowV_SUPPLIER_EQUIPMENT_DETAILRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowV_SUPPLIER_EQUIPMENT_DETAILRow)
            Return rowV_SUPPLIER_EQUIPMENT_DETAILRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindBySPPLR_EQPMNT_DTL_ID(ByVal SPPLR_EQPMNT_DTL_ID As Long) As V_SUPPLIER_EQUIPMENT_DETAILRow
            Return CType(Me.Rows.Find(New Object() {SPPLR_EQPMNT_DTL_ID}), V_SUPPLIER_EQUIPMENT_DETAILRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As V_SUPPLIER_EQUIPMENT_DETAILDataTable = CType(MyBase.Clone, V_SUPPLIER_EQUIPMENT_DETAILDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New V_SUPPLIER_EQUIPMENT_DETAILDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnSPPLR_EQPMNT_DTL_ID = MyBase.Columns("SPPLR_EQPMNT_DTL_ID")
            Me.columnSPPLR_ID = MyBase.Columns("SPPLR_ID")
            Me.columnSPPLR_CNTRCT_DTL_ID = MyBase.Columns("SPPLR_CNTRCT_DTL_ID")
            Me.columnEQPMNT_NO = MyBase.Columns("EQPMNT_NO")
            Me.columnEQPMNT_TYP_ID = MyBase.Columns("EQPMNT_TYP_ID")
            Me.columnEQPMNT_TYP_CD = MyBase.Columns("EQPMNT_TYP_CD")
            Me.columnEQPMNT_CD_ID = MyBase.Columns("EQPMNT_CD_ID")
            Me.columnEQPMNT_CD_CD = MyBase.Columns("EQPMNT_CD_CD")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnSPPLR_EQPMNT_DTL_ID = New Global.System.Data.DataColumn("SPPLR_EQPMNT_DTL_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPPLR_EQPMNT_DTL_ID)
            Me.columnSPPLR_ID = New Global.System.Data.DataColumn("SPPLR_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPPLR_ID)
            Me.columnSPPLR_CNTRCT_DTL_ID = New Global.System.Data.DataColumn("SPPLR_CNTRCT_DTL_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPPLR_CNTRCT_DTL_ID)
            Me.columnEQPMNT_NO = New Global.System.Data.DataColumn("EQPMNT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEQPMNT_NO)
            Me.columnEQPMNT_TYP_ID = New Global.System.Data.DataColumn("EQPMNT_TYP_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEQPMNT_TYP_ID)
            Me.columnEQPMNT_TYP_CD = New Global.System.Data.DataColumn("EQPMNT_TYP_CD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEQPMNT_TYP_CD)
            Me.columnEQPMNT_CD_ID = New Global.System.Data.DataColumn("EQPMNT_CD_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEQPMNT_CD_ID)
            Me.columnEQPMNT_CD_CD = New Global.System.Data.DataColumn("EQPMNT_CD_CD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEQPMNT_CD_CD)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSPPLR_EQPMNT_DTL_ID}, True))
            Me.columnSPPLR_EQPMNT_DTL_ID.AllowDBNull = False
            Me.columnSPPLR_EQPMNT_DTL_ID.Unique = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewV_SUPPLIER_EQUIPMENT_DETAILRow() As V_SUPPLIER_EQUIPMENT_DETAILRow
            Return CType(Me.NewRow, V_SUPPLIER_EQUIPMENT_DETAILRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New V_SUPPLIER_EQUIPMENT_DETAILRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(V_SUPPLIER_EQUIPMENT_DETAILRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.V_SUPPLIER_EQUIPMENT_DETAILRowChangedEvent) Is Nothing) Then
                RaiseEvent V_SUPPLIER_EQUIPMENT_DETAILRowChanged(Me, New V_SUPPLIER_EQUIPMENT_DETAILRowChangeEvent(CType(e.Row, V_SUPPLIER_EQUIPMENT_DETAILRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.V_SUPPLIER_EQUIPMENT_DETAILRowChangingEvent) Is Nothing) Then
                RaiseEvent V_SUPPLIER_EQUIPMENT_DETAILRowChanging(Me, New V_SUPPLIER_EQUIPMENT_DETAILRowChangeEvent(CType(e.Row, V_SUPPLIER_EQUIPMENT_DETAILRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.V_SUPPLIER_EQUIPMENT_DETAILRowDeletedEvent) Is Nothing) Then
                RaiseEvent V_SUPPLIER_EQUIPMENT_DETAILRowDeleted(Me, New V_SUPPLIER_EQUIPMENT_DETAILRowChangeEvent(CType(e.Row, V_SUPPLIER_EQUIPMENT_DETAILRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.V_SUPPLIER_EQUIPMENT_DETAILRowDeletingEvent) Is Nothing) Then
                RaiseEvent V_SUPPLIER_EQUIPMENT_DETAILRowDeleting(Me, New V_SUPPLIER_EQUIPMENT_DETAILRowChangeEvent(CType(e.Row, V_SUPPLIER_EQUIPMENT_DETAILRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveV_SUPPLIER_EQUIPMENT_DETAILRow(ByVal row As V_SUPPLIER_EQUIPMENT_DETAILRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SupplierDataSet = New SupplierDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "V_SUPPLIER_EQUIPMENT_DETAILDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class SUPPLIER_EQUIPMENT_DETAILDataTable
        Inherits Global.System.Data.TypedTableBase(Of SUPPLIER_EQUIPMENT_DETAILRow)

        Private columnSPPLR_EQPMNT_DTL_ID As Global.System.Data.DataColumn

        Private columnSPPLR_ID As Global.System.Data.DataColumn

        Private columnSPPLR_CNTRCT_DTL_ID As Global.System.Data.DataColumn

        Private columnEQPMNT_NO As Global.System.Data.DataColumn

        Private columnEQPMNT_TYP_ID As Global.System.Data.DataColumn

        Private columnEQPMNT_CD_ID As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "SUPPLIER_EQUIPMENT_DETAIL"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SPPLR_EQPMNT_DTL_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPPLR_EQPMNT_DTL_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SPPLR_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPPLR_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SPPLR_CNTRCT_DTL_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPPLR_CNTRCT_DTL_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EQPMNT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEQPMNT_NO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EQPMNT_TYP_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEQPMNT_TYP_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EQPMNT_CD_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEQPMNT_CD_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As SUPPLIER_EQUIPMENT_DETAILRow
            Get
                Return CType(Me.Rows(index), SUPPLIER_EQUIPMENT_DETAILRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event SUPPLIER_EQUIPMENT_DETAILRowChanging As SUPPLIER_EQUIPMENT_DETAILRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event SUPPLIER_EQUIPMENT_DETAILRowChanged As SUPPLIER_EQUIPMENT_DETAILRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event SUPPLIER_EQUIPMENT_DETAILRowDeleting As SUPPLIER_EQUIPMENT_DETAILRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event SUPPLIER_EQUIPMENT_DETAILRowDeleted As SUPPLIER_EQUIPMENT_DETAILRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddSUPPLIER_EQUIPMENT_DETAILRow(ByVal row As SUPPLIER_EQUIPMENT_DETAILRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddSUPPLIER_EQUIPMENT_DETAILRow(ByVal SPPLR_EQPMNT_DTL_ID As Long, ByVal SPPLR_ID As Long, ByVal SPPLR_CNTRCT_DTL_ID As Long, ByVal EQPMNT_NO As String, ByVal EQPMNT_TYP_ID As Long, ByVal EQPMNT_CD_ID As Long) As SUPPLIER_EQUIPMENT_DETAILRow
            Dim rowSUPPLIER_EQUIPMENT_DETAILRow As SUPPLIER_EQUIPMENT_DETAILRow = CType(Me.NewRow, SUPPLIER_EQUIPMENT_DETAILRow)
            Dim columnValuesArray() As Object = New Object() {SPPLR_EQPMNT_DTL_ID, SPPLR_ID, SPPLR_CNTRCT_DTL_ID, EQPMNT_NO, EQPMNT_TYP_ID, EQPMNT_CD_ID}
            rowSUPPLIER_EQUIPMENT_DETAILRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSUPPLIER_EQUIPMENT_DETAILRow)
            Return rowSUPPLIER_EQUIPMENT_DETAILRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindBySPPLR_EQPMNT_DTL_ID(ByVal SPPLR_EQPMNT_DTL_ID As Long) As SUPPLIER_EQUIPMENT_DETAILRow
            Return CType(Me.Rows.Find(New Object() {SPPLR_EQPMNT_DTL_ID}), SUPPLIER_EQUIPMENT_DETAILRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SUPPLIER_EQUIPMENT_DETAILDataTable = CType(MyBase.Clone, SUPPLIER_EQUIPMENT_DETAILDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SUPPLIER_EQUIPMENT_DETAILDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnSPPLR_EQPMNT_DTL_ID = MyBase.Columns("SPPLR_EQPMNT_DTL_ID")
            Me.columnSPPLR_ID = MyBase.Columns("SPPLR_ID")
            Me.columnSPPLR_CNTRCT_DTL_ID = MyBase.Columns("SPPLR_CNTRCT_DTL_ID")
            Me.columnEQPMNT_NO = MyBase.Columns("EQPMNT_NO")
            Me.columnEQPMNT_TYP_ID = MyBase.Columns("EQPMNT_TYP_ID")
            Me.columnEQPMNT_CD_ID = MyBase.Columns("EQPMNT_CD_ID")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnSPPLR_EQPMNT_DTL_ID = New Global.System.Data.DataColumn("SPPLR_EQPMNT_DTL_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPPLR_EQPMNT_DTL_ID)
            Me.columnSPPLR_ID = New Global.System.Data.DataColumn("SPPLR_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPPLR_ID)
            Me.columnSPPLR_CNTRCT_DTL_ID = New Global.System.Data.DataColumn("SPPLR_CNTRCT_DTL_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPPLR_CNTRCT_DTL_ID)
            Me.columnEQPMNT_NO = New Global.System.Data.DataColumn("EQPMNT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEQPMNT_NO)
            Me.columnEQPMNT_TYP_ID = New Global.System.Data.DataColumn("EQPMNT_TYP_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEQPMNT_TYP_ID)
            Me.columnEQPMNT_CD_ID = New Global.System.Data.DataColumn("EQPMNT_CD_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEQPMNT_CD_ID)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSPPLR_EQPMNT_DTL_ID}, True))
            Me.columnSPPLR_EQPMNT_DTL_ID.AllowDBNull = False
            Me.columnSPPLR_EQPMNT_DTL_ID.Unique = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewSUPPLIER_EQUIPMENT_DETAILRow() As SUPPLIER_EQUIPMENT_DETAILRow
            Return CType(Me.NewRow, SUPPLIER_EQUIPMENT_DETAILRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SUPPLIER_EQUIPMENT_DETAILRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SUPPLIER_EQUIPMENT_DETAILRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SUPPLIER_EQUIPMENT_DETAILRowChangedEvent) Is Nothing) Then
                RaiseEvent SUPPLIER_EQUIPMENT_DETAILRowChanged(Me, New SUPPLIER_EQUIPMENT_DETAILRowChangeEvent(CType(e.Row, SUPPLIER_EQUIPMENT_DETAILRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SUPPLIER_EQUIPMENT_DETAILRowChangingEvent) Is Nothing) Then
                RaiseEvent SUPPLIER_EQUIPMENT_DETAILRowChanging(Me, New SUPPLIER_EQUIPMENT_DETAILRowChangeEvent(CType(e.Row, SUPPLIER_EQUIPMENT_DETAILRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SUPPLIER_EQUIPMENT_DETAILRowDeletedEvent) Is Nothing) Then
                RaiseEvent SUPPLIER_EQUIPMENT_DETAILRowDeleted(Me, New SUPPLIER_EQUIPMENT_DETAILRowChangeEvent(CType(e.Row, SUPPLIER_EQUIPMENT_DETAILRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SUPPLIER_EQUIPMENT_DETAILRowDeletingEvent) Is Nothing) Then
                RaiseEvent SUPPLIER_EQUIPMENT_DETAILRowDeleting(Me, New SUPPLIER_EQUIPMENT_DETAILRowChangeEvent(CType(e.Row, SUPPLIER_EQUIPMENT_DETAILRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveSUPPLIER_EQUIPMENT_DETAILRow(ByVal row As SUPPLIER_EQUIPMENT_DETAILRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SupplierDataSet = New SupplierDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SUPPLIER_EQUIPMENT_DETAILDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class EQUIPMENT_INFORMATIONDataTable
        Inherits Global.System.Data.TypedTableBase(Of EQUIPMENT_INFORMATIONRow)

        Private columnEQPMNT_INFRMTN_ID As Global.System.Data.DataColumn

        Private columnEQPMNT_NO As Global.System.Data.DataColumn

        Private columnEQPMNT_TYP_ID As Global.System.Data.DataColumn

        Private columnMNFCTR_DT As Global.System.Data.DataColumn

        Private columnTR_WGHT_NC As Global.System.Data.DataColumn

        Private columnGRSS_WGHT_NC As Global.System.Data.DataColumn

        Private columnCPCTY_NC As Global.System.Data.DataColumn

        Private columnCRTD_BY As Global.System.Data.DataColumn

        Private columnCRTD_DT As Global.System.Data.DataColumn

        Private columnMDFD_BY As Global.System.Data.DataColumn

        Private columnMDFD_DT As Global.System.Data.DataColumn

        Private columnDPT_ID As Global.System.Data.DataColumn

        Private columnACTV_BT As Global.System.Data.DataColumn

        Private columnRNTL_BT As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "EQUIPMENT_INFORMATION"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EQPMNT_INFRMTN_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEQPMNT_INFRMTN_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EQPMNT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEQPMNT_NO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EQPMNT_TYP_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEQPMNT_TYP_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MNFCTR_DTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMNFCTR_DT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TR_WGHT_NCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTR_WGHT_NC
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property GRSS_WGHT_NCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRSS_WGHT_NC
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CPCTY_NCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCPCTY_NC
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CRTD_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCRTD_BY
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CRTD_DTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCRTD_DT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MDFD_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMDFD_BY
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MDFD_DTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMDFD_DT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DPT_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPT_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ACTV_BTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTV_BT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RNTL_BTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRNTL_BT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As EQUIPMENT_INFORMATIONRow
            Get
                Return CType(Me.Rows(index), EQUIPMENT_INFORMATIONRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event EQUIPMENT_INFORMATIONRowChanging As EQUIPMENT_INFORMATIONRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event EQUIPMENT_INFORMATIONRowChanged As EQUIPMENT_INFORMATIONRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event EQUIPMENT_INFORMATIONRowDeleting As EQUIPMENT_INFORMATIONRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event EQUIPMENT_INFORMATIONRowDeleted As EQUIPMENT_INFORMATIONRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddEQUIPMENT_INFORMATIONRow(ByVal row As EQUIPMENT_INFORMATIONRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddEQUIPMENT_INFORMATIONRow(ByVal EQPMNT_INFRMTN_ID As Long, ByVal EQPMNT_NO As String, ByVal EQPMNT_TYP_ID As Long, ByVal MNFCTR_DT As Date, ByVal TR_WGHT_NC As Decimal, ByVal GRSS_WGHT_NC As Decimal, ByVal CPCTY_NC As Decimal, ByVal CRTD_BY As String, ByVal CRTD_DT As Date, ByVal MDFD_BY As String, ByVal MDFD_DT As Date, ByVal DPT_ID As Integer, ByVal ACTV_BT As Boolean, ByVal RNTL_BT As String) As EQUIPMENT_INFORMATIONRow
            Dim rowEQUIPMENT_INFORMATIONRow As EQUIPMENT_INFORMATIONRow = CType(Me.NewRow, EQUIPMENT_INFORMATIONRow)
            Dim columnValuesArray() As Object = New Object() {EQPMNT_INFRMTN_ID, EQPMNT_NO, EQPMNT_TYP_ID, MNFCTR_DT, TR_WGHT_NC, GRSS_WGHT_NC, CPCTY_NC, CRTD_BY, CRTD_DT, MDFD_BY, MDFD_DT, DPT_ID, ACTV_BT, RNTL_BT}
            rowEQUIPMENT_INFORMATIONRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowEQUIPMENT_INFORMATIONRow)
            Return rowEQUIPMENT_INFORMATIONRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByEQPMNT_INFRMTN_ID(ByVal EQPMNT_INFRMTN_ID As Long) As EQUIPMENT_INFORMATIONRow
            Return CType(Me.Rows.Find(New Object() {EQPMNT_INFRMTN_ID}), EQUIPMENT_INFORMATIONRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As EQUIPMENT_INFORMATIONDataTable = CType(MyBase.Clone, EQUIPMENT_INFORMATIONDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New EQUIPMENT_INFORMATIONDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnEQPMNT_INFRMTN_ID = MyBase.Columns("EQPMNT_INFRMTN_ID")
            Me.columnEQPMNT_NO = MyBase.Columns("EQPMNT_NO")
            Me.columnEQPMNT_TYP_ID = MyBase.Columns("EQPMNT_TYP_ID")
            Me.columnMNFCTR_DT = MyBase.Columns("MNFCTR_DT")
            Me.columnTR_WGHT_NC = MyBase.Columns("TR_WGHT_NC")
            Me.columnGRSS_WGHT_NC = MyBase.Columns("GRSS_WGHT_NC")
            Me.columnCPCTY_NC = MyBase.Columns("CPCTY_NC")
            Me.columnCRTD_BY = MyBase.Columns("CRTD_BY")
            Me.columnCRTD_DT = MyBase.Columns("CRTD_DT")
            Me.columnMDFD_BY = MyBase.Columns("MDFD_BY")
            Me.columnMDFD_DT = MyBase.Columns("MDFD_DT")
            Me.columnDPT_ID = MyBase.Columns("DPT_ID")
            Me.columnACTV_BT = MyBase.Columns("ACTV_BT")
            Me.columnRNTL_BT = MyBase.Columns("RNTL_BT")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnEQPMNT_INFRMTN_ID = New Global.System.Data.DataColumn("EQPMNT_INFRMTN_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEQPMNT_INFRMTN_ID)
            Me.columnEQPMNT_NO = New Global.System.Data.DataColumn("EQPMNT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEQPMNT_NO)
            Me.columnEQPMNT_TYP_ID = New Global.System.Data.DataColumn("EQPMNT_TYP_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEQPMNT_TYP_ID)
            Me.columnMNFCTR_DT = New Global.System.Data.DataColumn("MNFCTR_DT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMNFCTR_DT)
            Me.columnTR_WGHT_NC = New Global.System.Data.DataColumn("TR_WGHT_NC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTR_WGHT_NC)
            Me.columnGRSS_WGHT_NC = New Global.System.Data.DataColumn("GRSS_WGHT_NC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRSS_WGHT_NC)
            Me.columnCPCTY_NC = New Global.System.Data.DataColumn("CPCTY_NC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCPCTY_NC)
            Me.columnCRTD_BY = New Global.System.Data.DataColumn("CRTD_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCRTD_BY)
            Me.columnCRTD_DT = New Global.System.Data.DataColumn("CRTD_DT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCRTD_DT)
            Me.columnMDFD_BY = New Global.System.Data.DataColumn("MDFD_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMDFD_BY)
            Me.columnMDFD_DT = New Global.System.Data.DataColumn("MDFD_DT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMDFD_DT)
            Me.columnDPT_ID = New Global.System.Data.DataColumn("DPT_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPT_ID)
            Me.columnACTV_BT = New Global.System.Data.DataColumn("ACTV_BT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTV_BT)
            Me.columnRNTL_BT = New Global.System.Data.DataColumn("RNTL_BT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRNTL_BT)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnEQPMNT_INFRMTN_ID}, True))
            Me.columnEQPMNT_INFRMTN_ID.AllowDBNull = False
            Me.columnEQPMNT_INFRMTN_ID.Unique = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewEQUIPMENT_INFORMATIONRow() As EQUIPMENT_INFORMATIONRow
            Return CType(Me.NewRow, EQUIPMENT_INFORMATIONRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New EQUIPMENT_INFORMATIONRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(EQUIPMENT_INFORMATIONRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.EQUIPMENT_INFORMATIONRowChangedEvent) Is Nothing) Then
                RaiseEvent EQUIPMENT_INFORMATIONRowChanged(Me, New EQUIPMENT_INFORMATIONRowChangeEvent(CType(e.Row, EQUIPMENT_INFORMATIONRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.EQUIPMENT_INFORMATIONRowChangingEvent) Is Nothing) Then
                RaiseEvent EQUIPMENT_INFORMATIONRowChanging(Me, New EQUIPMENT_INFORMATIONRowChangeEvent(CType(e.Row, EQUIPMENT_INFORMATIONRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.EQUIPMENT_INFORMATIONRowDeletedEvent) Is Nothing) Then
                RaiseEvent EQUIPMENT_INFORMATIONRowDeleted(Me, New EQUIPMENT_INFORMATIONRowChangeEvent(CType(e.Row, EQUIPMENT_INFORMATIONRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.EQUIPMENT_INFORMATIONRowDeletingEvent) Is Nothing) Then
                RaiseEvent EQUIPMENT_INFORMATIONRowDeleting(Me, New EQUIPMENT_INFORMATIONRowChangeEvent(CType(e.Row, EQUIPMENT_INFORMATIONRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveEQUIPMENT_INFORMATIONRow(ByVal row As EQUIPMENT_INFORMATIONRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SupplierDataSet = New SupplierDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "EQUIPMENT_INFORMATIONDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class SUPPLIER_CNTRACT_DTLDataTable
        Inherits Global.System.Data.TypedTableBase(Of SUPPLIER_CNTRACT_DTLRow)

        Private columnSPPLR_CNTRCT_DTL_ID As Global.System.Data.DataColumn

        Private columnCNTRCT_RFRNC_NO As Global.System.Data.DataColumn

        Private columnSPPLR_ID As Global.System.Data.DataColumn

        Private columnSPPLR_CD As Global.System.Data.DataColumn

        Private columnDPT_ID As Global.System.Data.DataColumn

        Private columnEQPMNT_NO As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "SUPPLIER_CNTRACT_DTL"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SPPLR_CNTRCT_DTL_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPPLR_CNTRCT_DTL_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CNTRCT_RFRNC_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCNTRCT_RFRNC_NO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SPPLR_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPPLR_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SPPLR_CDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPPLR_CD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DPT_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPT_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EQPMNT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEQPMNT_NO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As SUPPLIER_CNTRACT_DTLRow
            Get
                Return CType(Me.Rows(index), SUPPLIER_CNTRACT_DTLRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event SUPPLIER_CNTRACT_DTLRowChanging As SUPPLIER_CNTRACT_DTLRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event SUPPLIER_CNTRACT_DTLRowChanged As SUPPLIER_CNTRACT_DTLRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event SUPPLIER_CNTRACT_DTLRowDeleting As SUPPLIER_CNTRACT_DTLRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event SUPPLIER_CNTRACT_DTLRowDeleted As SUPPLIER_CNTRACT_DTLRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddSUPPLIER_CNTRACT_DTLRow(ByVal row As SUPPLIER_CNTRACT_DTLRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddSUPPLIER_CNTRACT_DTLRow(ByVal SPPLR_CNTRCT_DTL_ID As String, ByVal CNTRCT_RFRNC_NO As String, ByVal SPPLR_ID As String, ByVal SPPLR_CD As String, ByVal DPT_ID As String, ByVal EQPMNT_NO As String) As SUPPLIER_CNTRACT_DTLRow
            Dim rowSUPPLIER_CNTRACT_DTLRow As SUPPLIER_CNTRACT_DTLRow = CType(Me.NewRow, SUPPLIER_CNTRACT_DTLRow)
            Dim columnValuesArray() As Object = New Object() {SPPLR_CNTRCT_DTL_ID, CNTRCT_RFRNC_NO, SPPLR_ID, SPPLR_CD, DPT_ID, EQPMNT_NO}
            rowSUPPLIER_CNTRACT_DTLRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSUPPLIER_CNTRACT_DTLRow)
            Return rowSUPPLIER_CNTRACT_DTLRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SUPPLIER_CNTRACT_DTLDataTable = CType(MyBase.Clone, SUPPLIER_CNTRACT_DTLDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SUPPLIER_CNTRACT_DTLDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnSPPLR_CNTRCT_DTL_ID = MyBase.Columns("SPPLR_CNTRCT_DTL_ID")
            Me.columnCNTRCT_RFRNC_NO = MyBase.Columns("CNTRCT_RFRNC_NO")
            Me.columnSPPLR_ID = MyBase.Columns("SPPLR_ID")
            Me.columnSPPLR_CD = MyBase.Columns("SPPLR_CD")
            Me.columnDPT_ID = MyBase.Columns("DPT_ID")
            Me.columnEQPMNT_NO = MyBase.Columns("EQPMNT_NO")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnSPPLR_CNTRCT_DTL_ID = New Global.System.Data.DataColumn("SPPLR_CNTRCT_DTL_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPPLR_CNTRCT_DTL_ID)
            Me.columnCNTRCT_RFRNC_NO = New Global.System.Data.DataColumn("CNTRCT_RFRNC_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCNTRCT_RFRNC_NO)
            Me.columnSPPLR_ID = New Global.System.Data.DataColumn("SPPLR_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPPLR_ID)
            Me.columnSPPLR_CD = New Global.System.Data.DataColumn("SPPLR_CD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPPLR_CD)
            Me.columnDPT_ID = New Global.System.Data.DataColumn("DPT_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPT_ID)
            Me.columnEQPMNT_NO = New Global.System.Data.DataColumn("EQPMNT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEQPMNT_NO)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewSUPPLIER_CNTRACT_DTLRow() As SUPPLIER_CNTRACT_DTLRow
            Return CType(Me.NewRow, SUPPLIER_CNTRACT_DTLRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SUPPLIER_CNTRACT_DTLRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SUPPLIER_CNTRACT_DTLRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SUPPLIER_CNTRACT_DTLRowChangedEvent) Is Nothing) Then
                RaiseEvent SUPPLIER_CNTRACT_DTLRowChanged(Me, New SUPPLIER_CNTRACT_DTLRowChangeEvent(CType(e.Row, SUPPLIER_CNTRACT_DTLRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SUPPLIER_CNTRACT_DTLRowChangingEvent) Is Nothing) Then
                RaiseEvent SUPPLIER_CNTRACT_DTLRowChanging(Me, New SUPPLIER_CNTRACT_DTLRowChangeEvent(CType(e.Row, SUPPLIER_CNTRACT_DTLRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SUPPLIER_CNTRACT_DTLRowDeletedEvent) Is Nothing) Then
                RaiseEvent SUPPLIER_CNTRACT_DTLRowDeleted(Me, New SUPPLIER_CNTRACT_DTLRowChangeEvent(CType(e.Row, SUPPLIER_CNTRACT_DTLRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SUPPLIER_CNTRACT_DTLRowDeletingEvent) Is Nothing) Then
                RaiseEvent SUPPLIER_CNTRACT_DTLRowDeleting(Me, New SUPPLIER_CNTRACT_DTLRowChangeEvent(CType(e.Row, SUPPLIER_CNTRACT_DTLRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveSUPPLIER_CNTRACT_DTLRow(ByVal row As SUPPLIER_CNTRACT_DTLRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SupplierDataSet = New SupplierDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SUPPLIER_CNTRACT_DTLDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class V_RENTAL_ENTRYDataTable
        Inherits Global.System.Data.TypedTableBase(Of V_RENTAL_ENTRYRow)

        Private columnRNTL_ENTRY_ID As Global.System.Data.DataColumn

        Private columnEQPMNT_NO As Global.System.Data.DataColumn

        Private columnCSTMR_ID As Global.System.Data.DataColumn

        Private columnCSTMR_CD As Global.System.Data.DataColumn

        Private columnCSTMR_NAM As Global.System.Data.DataColumn

        Private columnCNTRCT_RFRNC_NO As Global.System.Data.DataColumn

        Private columnPO_RFRNC_NO As Global.System.Data.DataColumn

        Private columnRNTL_PR_DY As Global.System.Data.DataColumn

        Private columnON_HR_DT As Global.System.Data.DataColumn

        Private columnHNDLNG_OT_NC As Global.System.Data.DataColumn

        Private columnON_HR_SRVY_NC As Global.System.Data.DataColumn

        Private columnOFF_HR_DT As Global.System.Data.DataColumn

        Private columnHNDLNG_IN_NC As Global.System.Data.DataColumn

        Private columnOFF_HR_SRVY_NC As Global.System.Data.DataColumn

        Private columnOTHR_CHRG_NC As Global.System.Data.DataColumn

        Private columnRMRKS_VC As Global.System.Data.DataColumn

        Private columnDPT_ID As Global.System.Data.DataColumn

        Private columnCRTD_BY As Global.System.Data.DataColumn

        Private columnCRTD_DT As Global.System.Data.DataColumn

        Private columnMDFD_BY As Global.System.Data.DataColumn

        Private columnMDFD_DT As Global.System.Data.DataColumn

        Private columnEQPMNT_INFRMTN_ID As Global.System.Data.DataColumn

        Private columnCHECKED As Global.System.Data.DataColumn

        Private columnHYP_OTHERCHARGE As Global.System.Data.DataColumn

        Private columnRNTL_RFRNC_NO As Global.System.Data.DataColumn

        Private columnGI_TRNSCTN_NO As Global.System.Data.DataColumn

        Private columnTTL_OTHR_CHRG_NC As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "V_RENTAL_ENTRY"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RNTL_ENTRY_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRNTL_ENTRY_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EQPMNT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEQPMNT_NO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CSTMR_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCSTMR_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CSTMR_CDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCSTMR_CD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CSTMR_NAMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCSTMR_NAM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CNTRCT_RFRNC_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCNTRCT_RFRNC_NO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PO_RFRNC_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPO_RFRNC_NO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RNTL_PR_DYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRNTL_PR_DY
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ON_HR_DTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnON_HR_DT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property HNDLNG_OT_NCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHNDLNG_OT_NC
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ON_HR_SRVY_NCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnON_HR_SRVY_NC
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OFF_HR_DTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOFF_HR_DT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property HNDLNG_IN_NCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHNDLNG_IN_NC
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OFF_HR_SRVY_NCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOFF_HR_SRVY_NC
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OTHR_CHRG_NCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTHR_CHRG_NC
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RMRKS_VCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRMRKS_VC
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DPT_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPT_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CRTD_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCRTD_BY
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CRTD_DTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCRTD_DT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MDFD_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMDFD_BY
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MDFD_DTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMDFD_DT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EQPMNT_INFRMTN_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEQPMNT_INFRMTN_ID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CHECKEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHECKED
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property HYP_OTHERCHARGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHYP_OTHERCHARGE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RNTL_RFRNC_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRNTL_RFRNC_NO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property GI_TRNSCTN_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGI_TRNSCTN_NO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TTL_OTHR_CHRG_NCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTTL_OTHR_CHRG_NC
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As V_RENTAL_ENTRYRow
            Get
                Return CType(Me.Rows(index), V_RENTAL_ENTRYRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event V_RENTAL_ENTRYRowChanging As V_RENTAL_ENTRYRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event V_RENTAL_ENTRYRowChanged As V_RENTAL_ENTRYRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event V_RENTAL_ENTRYRowDeleting As V_RENTAL_ENTRYRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event V_RENTAL_ENTRYRowDeleted As V_RENTAL_ENTRYRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddV_RENTAL_ENTRYRow(ByVal row As V_RENTAL_ENTRYRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddV_RENTAL_ENTRYRow( _
                    ByVal RNTL_ENTRY_ID As Long, _
                    ByVal EQPMNT_NO As String, _
                    ByVal CSTMR_ID As Long, _
                    ByVal CSTMR_CD As String, _
                    ByVal CSTMR_NAM As String, _
                    ByVal CNTRCT_RFRNC_NO As String, _
                    ByVal PO_RFRNC_NO As String, _
                    ByVal RNTL_PR_DY As Decimal, _
                    ByVal ON_HR_DT As Date, _
                    ByVal HNDLNG_OT_NC As Decimal, _
                    ByVal ON_HR_SRVY_NC As Decimal, _
                    ByVal OFF_HR_DT As Date, _
                    ByVal HNDLNG_IN_NC As Decimal, _
                    ByVal OFF_HR_SRVY_NC As Decimal, _
                    ByVal OTHR_CHRG_NC As Decimal, _
                    ByVal RMRKS_VC As String, _
                    ByVal DPT_ID As Integer, _
                    ByVal CRTD_BY As String, _
                    ByVal CRTD_DT As Date, _
                    ByVal MDFD_BY As String, _
                    ByVal MDFD_DT As Date, _
                    ByVal EQPMNT_INFRMTN_ID As String, _
                    ByVal CHECKED As String, _
                    ByVal HYP_OTHERCHARGE As String, _
                    ByVal RNTL_RFRNC_NO As String, _
                    ByVal GI_TRNSCTN_NO As String, _
                    ByVal TTL_OTHR_CHRG_NC As Decimal) As V_RENTAL_ENTRYRow
            Dim rowV_RENTAL_ENTRYRow As V_RENTAL_ENTRYRow = CType(Me.NewRow, V_RENTAL_ENTRYRow)
            Dim columnValuesArray() As Object = New Object() {RNTL_ENTRY_ID, EQPMNT_NO, CSTMR_ID, CSTMR_CD, CSTMR_NAM, CNTRCT_RFRNC_NO, PO_RFRNC_NO, RNTL_PR_DY, ON_HR_DT, HNDLNG_OT_NC, ON_HR_SRVY_NC, OFF_HR_DT, HNDLNG_IN_NC, OFF_HR_SRVY_NC, OTHR_CHRG_NC, RMRKS_VC, DPT_ID, CRTD_BY, CRTD_DT, MDFD_BY, MDFD_DT, EQPMNT_INFRMTN_ID, CHECKED, HYP_OTHERCHARGE, RNTL_RFRNC_NO, GI_TRNSCTN_NO, TTL_OTHR_CHRG_NC}
            rowV_RENTAL_ENTRYRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowV_RENTAL_ENTRYRow)
            Return rowV_RENTAL_ENTRYRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByRNTL_ENTRY_ID(ByVal RNTL_ENTRY_ID As Long) As V_RENTAL_ENTRYRow
            Return CType(Me.Rows.Find(New Object() {RNTL_ENTRY_ID}), V_RENTAL_ENTRYRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As V_RENTAL_ENTRYDataTable = CType(MyBase.Clone, V_RENTAL_ENTRYDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New V_RENTAL_ENTRYDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnRNTL_ENTRY_ID = MyBase.Columns("RNTL_ENTRY_ID")
            Me.columnEQPMNT_NO = MyBase.Columns("EQPMNT_NO")
            Me.columnCSTMR_ID = MyBase.Columns("CSTMR_ID")
            Me.columnCSTMR_CD = MyBase.Columns("CSTMR_CD")
            Me.columnCSTMR_NAM = MyBase.Columns("CSTMR_NAM")
            Me.columnCNTRCT_RFRNC_NO = MyBase.Columns("CNTRCT_RFRNC_NO")
            Me.columnPO_RFRNC_NO = MyBase.Columns("PO_RFRNC_NO")
            Me.columnRNTL_PR_DY = MyBase.Columns("RNTL_PR_DY")
            Me.columnON_HR_DT = MyBase.Columns("ON_HR_DT")
            Me.columnHNDLNG_OT_NC = MyBase.Columns("HNDLNG_OT_NC")
            Me.columnON_HR_SRVY_NC = MyBase.Columns("ON_HR_SRVY_NC")
            Me.columnOFF_HR_DT = MyBase.Columns("OFF_HR_DT")
            Me.columnHNDLNG_IN_NC = MyBase.Columns("HNDLNG_IN_NC")
            Me.columnOFF_HR_SRVY_NC = MyBase.Columns("OFF_HR_SRVY_NC")
            Me.columnOTHR_CHRG_NC = MyBase.Columns("OTHR_CHRG_NC")
            Me.columnRMRKS_VC = MyBase.Columns("RMRKS_VC")
            Me.columnDPT_ID = MyBase.Columns("DPT_ID")
            Me.columnCRTD_BY = MyBase.Columns("CRTD_BY")
            Me.columnCRTD_DT = MyBase.Columns("CRTD_DT")
            Me.columnMDFD_BY = MyBase.Columns("MDFD_BY")
            Me.columnMDFD_DT = MyBase.Columns("MDFD_DT")
            Me.columnEQPMNT_INFRMTN_ID = MyBase.Columns("EQPMNT_INFRMTN_ID")
            Me.columnCHECKED = MyBase.Columns("CHECKED")
            Me.columnHYP_OTHERCHARGE = MyBase.Columns("HYP_OTHERCHARGE")
            Me.columnRNTL_RFRNC_NO = MyBase.Columns("RNTL_RFRNC_NO")
            Me.columnGI_TRNSCTN_NO = MyBase.Columns("GI_TRNSCTN_NO")
            Me.columnTTL_OTHR_CHRG_NC = MyBase.Columns("TTL_OTHR_CHRG_NC")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnRNTL_ENTRY_ID = New Global.System.Data.DataColumn("RNTL_ENTRY_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRNTL_ENTRY_ID)
            Me.columnEQPMNT_NO = New Global.System.Data.DataColumn("EQPMNT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEQPMNT_NO)
            Me.columnCSTMR_ID = New Global.System.Data.DataColumn("CSTMR_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCSTMR_ID)
            Me.columnCSTMR_CD = New Global.System.Data.DataColumn("CSTMR_CD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCSTMR_CD)
            Me.columnCSTMR_NAM = New Global.System.Data.DataColumn("CSTMR_NAM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCSTMR_NAM)
            Me.columnCNTRCT_RFRNC_NO = New Global.System.Data.DataColumn("CNTRCT_RFRNC_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCNTRCT_RFRNC_NO)
            Me.columnPO_RFRNC_NO = New Global.System.Data.DataColumn("PO_RFRNC_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPO_RFRNC_NO)
            Me.columnRNTL_PR_DY = New Global.System.Data.DataColumn("RNTL_PR_DY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRNTL_PR_DY)
            Me.columnON_HR_DT = New Global.System.Data.DataColumn("ON_HR_DT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnON_HR_DT)
            Me.columnHNDLNG_OT_NC = New Global.System.Data.DataColumn("HNDLNG_OT_NC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHNDLNG_OT_NC)
            Me.columnON_HR_SRVY_NC = New Global.System.Data.DataColumn("ON_HR_SRVY_NC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnON_HR_SRVY_NC)
            Me.columnOFF_HR_DT = New Global.System.Data.DataColumn("OFF_HR_DT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOFF_HR_DT)
            Me.columnHNDLNG_IN_NC = New Global.System.Data.DataColumn("HNDLNG_IN_NC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHNDLNG_IN_NC)
            Me.columnOFF_HR_SRVY_NC = New Global.System.Data.DataColumn("OFF_HR_SRVY_NC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOFF_HR_SRVY_NC)
            Me.columnOTHR_CHRG_NC = New Global.System.Data.DataColumn("OTHR_CHRG_NC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTHR_CHRG_NC)
            Me.columnRMRKS_VC = New Global.System.Data.DataColumn("RMRKS_VC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRMRKS_VC)
            Me.columnDPT_ID = New Global.System.Data.DataColumn("DPT_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPT_ID)
            Me.columnCRTD_BY = New Global.System.Data.DataColumn("CRTD_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCRTD_BY)
            Me.columnCRTD_DT = New Global.System.Data.DataColumn("CRTD_DT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCRTD_DT)
            Me.columnMDFD_BY = New Global.System.Data.DataColumn("MDFD_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMDFD_BY)
            Me.columnMDFD_DT = New Global.System.Data.DataColumn("MDFD_DT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMDFD_DT)
            Me.columnEQPMNT_INFRMTN_ID = New Global.System.Data.DataColumn("EQPMNT_INFRMTN_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEQPMNT_INFRMTN_ID)
            Me.columnCHECKED = New Global.System.Data.DataColumn("CHECKED", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHECKED)
            Me.columnHYP_OTHERCHARGE = New Global.System.Data.DataColumn("HYP_OTHERCHARGE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHYP_OTHERCHARGE)
            Me.columnRNTL_RFRNC_NO = New Global.System.Data.DataColumn("RNTL_RFRNC_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRNTL_RFRNC_NO)
            Me.columnGI_TRNSCTN_NO = New Global.System.Data.DataColumn("GI_TRNSCTN_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGI_TRNSCTN_NO)
            Me.columnTTL_OTHR_CHRG_NC = New Global.System.Data.DataColumn("TTL_OTHR_CHRG_NC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTTL_OTHR_CHRG_NC)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnRNTL_ENTRY_ID}, True))
            Me.columnRNTL_ENTRY_ID.AllowDBNull = False
            Me.columnRNTL_ENTRY_ID.Unique = True
            Me.columnEQPMNT_NO.Caption = "EQUPMNT_NO"
            Me.columnEQPMNT_NO.MaxLength = 11
            Me.columnCSTMR_CD.MaxLength = 9
            Me.columnCSTMR_NAM.MaxLength = 50
            Me.columnCNTRCT_RFRNC_NO.MaxLength = 20
            Me.columnPO_RFRNC_NO.MaxLength = 100
            Me.columnRMRKS_VC.MaxLength = 500
            Me.columnCRTD_BY.MaxLength = 50
            Me.columnMDFD_BY.MaxLength = 50
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewV_RENTAL_ENTRYRow() As V_RENTAL_ENTRYRow
            Return CType(Me.NewRow, V_RENTAL_ENTRYRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New V_RENTAL_ENTRYRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(V_RENTAL_ENTRYRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.V_RENTAL_ENTRYRowChangedEvent) Is Nothing) Then
                RaiseEvent V_RENTAL_ENTRYRowChanged(Me, New V_RENTAL_ENTRYRowChangeEvent(CType(e.Row, V_RENTAL_ENTRYRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.V_RENTAL_ENTRYRowChangingEvent) Is Nothing) Then
                RaiseEvent V_RENTAL_ENTRYRowChanging(Me, New V_RENTAL_ENTRYRowChangeEvent(CType(e.Row, V_RENTAL_ENTRYRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.V_RENTAL_ENTRYRowDeletedEvent) Is Nothing) Then
                RaiseEvent V_RENTAL_ENTRYRowDeleted(Me, New V_RENTAL_ENTRYRowChangeEvent(CType(e.Row, V_RENTAL_ENTRYRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.V_RENTAL_ENTRYRowDeletingEvent) Is Nothing) Then
                RaiseEvent V_RENTAL_ENTRYRowDeleting(Me, New V_RENTAL_ENTRYRowChangeEvent(CType(e.Row, V_RENTAL_ENTRYRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveV_RENTAL_ENTRYRow(ByVal row As V_RENTAL_ENTRYRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SupplierDataSet = New SupplierDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "V_RENTAL_ENTRYDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SUPPLIERRow
        Inherits Global.System.Data.DataRow

        Private tableSUPPLIER As SUPPLIERDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSUPPLIER = CType(Me.Table, SUPPLIERDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SPPLR_ID() As Long
            Get
                Return CType(Me(Me.tableSUPPLIER.SPPLR_IDColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableSUPPLIER.SPPLR_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SPPLR_CD() As String
            Get
                Try
                    Return CType(Me(Me.tableSUPPLIER.SPPLR_CDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPPLR_CD' in table 'SUPPLIER' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableSUPPLIER.SPPLR_CDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SPPLR_DSCRPTN_VC() As String
            Get
                Try
                    Return CType(Me(Me.tableSUPPLIER.SPPLR_DSCRPTN_VCColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPPLR_DSCRPTN_VC' in table 'SUPPLIER' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableSUPPLIER.SPPLR_DSCRPTN_VCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ACTV_BT() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableSUPPLIER.ACTV_BTColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACTV_BT' in table 'SUPPLIER' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableSUPPLIER.ACTV_BTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CRTD_BY() As String
            Get
                Try
                    Return CType(Me(Me.tableSUPPLIER.CRTD_BYColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CRTD_BY' in table 'SUPPLIER' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableSUPPLIER.CRTD_BYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CRTD_DT() As Date
            Get
                Try
                    Return CType(Me(Me.tableSUPPLIER.CRTD_DTColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CRTD_DT' in table 'SUPPLIER' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableSUPPLIER.CRTD_DTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MDFD_BY() As String
            Get
                Try
                    Return CType(Me(Me.tableSUPPLIER.MDFD_BYColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MDFD_BY' in table 'SUPPLIER' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableSUPPLIER.MDFD_BYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MDFD_DT() As Date
            Get
                Try
                    Return CType(Me(Me.tableSUPPLIER.MDFD_DTColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MDFD_DT' in table 'SUPPLIER' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableSUPPLIER.MDFD_DTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DPT_ID() As Integer
            Get
                Try
                    Return CType(Me(Me.tableSUPPLIER.DPT_IDColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DPT_ID' in table 'SUPPLIER' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableSUPPLIER.DPT_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EDIT() As String
            Get
                Try
                    Return CType(Me(Me.tableSUPPLIER.EDITColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EDIT' in table 'SUPPLIER' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableSUPPLIER.EDITColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSPPLR_CDNull() As Boolean
            Return Me.IsNull(Me.tableSUPPLIER.SPPLR_CDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSPPLR_CDNull()
            Me(Me.tableSUPPLIER.SPPLR_CDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSPPLR_DSCRPTN_VCNull() As Boolean
            Return Me.IsNull(Me.tableSUPPLIER.SPPLR_DSCRPTN_VCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSPPLR_DSCRPTN_VCNull()
            Me(Me.tableSUPPLIER.SPPLR_DSCRPTN_VCColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsACTV_BTNull() As Boolean
            Return Me.IsNull(Me.tableSUPPLIER.ACTV_BTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetACTV_BTNull()
            Me(Me.tableSUPPLIER.ACTV_BTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCRTD_BYNull() As Boolean
            Return Me.IsNull(Me.tableSUPPLIER.CRTD_BYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCRTD_BYNull()
            Me(Me.tableSUPPLIER.CRTD_BYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCRTD_DTNull() As Boolean
            Return Me.IsNull(Me.tableSUPPLIER.CRTD_DTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCRTD_DTNull()
            Me(Me.tableSUPPLIER.CRTD_DTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMDFD_BYNull() As Boolean
            Return Me.IsNull(Me.tableSUPPLIER.MDFD_BYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMDFD_BYNull()
            Me(Me.tableSUPPLIER.MDFD_BYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMDFD_DTNull() As Boolean
            Return Me.IsNull(Me.tableSUPPLIER.MDFD_DTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMDFD_DTNull()
            Me(Me.tableSUPPLIER.MDFD_DTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDPT_IDNull() As Boolean
            Return Me.IsNull(Me.tableSUPPLIER.DPT_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDPT_IDNull()
            Me(Me.tableSUPPLIER.DPT_IDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEDITNull() As Boolean
            Return Me.IsNull(Me.tableSUPPLIER.EDITColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEDITNull()
            Me(Me.tableSUPPLIER.EDITColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SUPPLIER_CONTRACT_DETAILRow
        Inherits Global.System.Data.DataRow

        Private tableSUPPLIER_CONTRACT_DETAIL As SUPPLIER_CONTRACT_DETAILDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSUPPLIER_CONTRACT_DETAIL = CType(Me.Table, SUPPLIER_CONTRACT_DETAILDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SPPLR_CNTRCT_DTL_ID() As Long
            Get
                Return CType(Me(Me.tableSUPPLIER_CONTRACT_DETAIL.SPPLR_CNTRCT_DTL_IDColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableSUPPLIER_CONTRACT_DETAIL.SPPLR_CNTRCT_DTL_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SPPLR_ID() As Long
            Get
                Try
                    Return CType(Me(Me.tableSUPPLIER_CONTRACT_DETAIL.SPPLR_IDColumn), Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPPLR_ID' in table 'SUPPLIER_CONTRACT_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set(value As Long)
                Me(Me.tableSUPPLIER_CONTRACT_DETAIL.SPPLR_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CNTRCT_RFRNC_NO() As String
            Get
                Try
                    Return CType(Me(Me.tableSUPPLIER_CONTRACT_DETAIL.CNTRCT_RFRNC_NOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CNTRCT_RFRNC_NO' in table 'SUPPLIER_CONTRACT_DETAIL' is DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableSUPPLIER_CONTRACT_DETAIL.CNTRCT_RFRNC_NOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CNTRCT_STRT_DT() As Date
            Get
                Try
                    Return CType(Me(Me.tableSUPPLIER_CONTRACT_DETAIL.CNTRCT_STRT_DTColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CNTRCT_STRT_DT' in table 'SUPPLIER_CONTRACT_DETAIL' is DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableSUPPLIER_CONTRACT_DETAIL.CNTRCT_STRT_DTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CNTRCT_END_DT() As Date
            Get
                Try
                    Return CType(Me(Me.tableSUPPLIER_CONTRACT_DETAIL.CNTRCT_END_DTColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CNTRCT_END_DT' in table 'SUPPLIER_CONTRACT_DETAIL' is DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableSUPPLIER_CONTRACT_DETAIL.CNTRCT_END_DTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RNTL_PR_DY() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableSUPPLIER_CONTRACT_DETAIL.RNTL_PR_DYColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RNTL_PR_DY' in table 'SUPPLIER_CONTRACT_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableSUPPLIER_CONTRACT_DETAIL.RNTL_PR_DYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RMRKS_vc() As String
            Get
                Try
                    Return CType(Me(Me.tableSUPPLIER_CONTRACT_DETAIL.RMRKS_vcColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RMRKS_VC' in table 'SUPPLIER_CONTRACT_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableSUPPLIER_CONTRACT_DETAIL.RMRKS_vcColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CHECKED() As String
            Get
                Try
                    Return CType(Me(Me.tableSUPPLIER_CONTRACT_DETAIL.CHECKEDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CHECKED' in table 'SUPPLIER_CONTRACT_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableSUPPLIER_CONTRACT_DETAIL.CHECKEDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EDIT() As String
            Get
                Try
                    Return CType(Me(Me.tableSUPPLIER_CONTRACT_DETAIL.EDITColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EDIT' in table 'SUPPLIER_CONTRACT_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableSUPPLIER_CONTRACT_DETAIL.EDITColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SPPLR_CD() As String
            Get
                Try
                    Return CType(Me(Me.tableSUPPLIER_CONTRACT_DETAIL.SPPLR_CDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPPLR_CD' in table 'SUPPLIER_CONTRACT_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableSUPPLIER_CONTRACT_DETAIL.SPPLR_CDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSPPLR_IDNull() As Boolean
            Return Me.IsNull(Me.tableSUPPLIER_CONTRACT_DETAIL.SPPLR_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSPPLR_IDNull()
            Me(Me.tableSUPPLIER_CONTRACT_DETAIL.SPPLR_IDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCNTRCT_RFRNC_NONull() As Boolean
            Return Me.IsNull(Me.tableSUPPLIER_CONTRACT_DETAIL.CNTRCT_RFRNC_NOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCNTRCT_RFRNC_NONull()
            Me(Me.tableSUPPLIER_CONTRACT_DETAIL.CNTRCT_RFRNC_NOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCNTRCT_STRT_DTNull() As Boolean
            Return Me.IsNull(Me.tableSUPPLIER_CONTRACT_DETAIL.CNTRCT_STRT_DTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCNTRCT_STRT_DTNull()
            Me(Me.tableSUPPLIER_CONTRACT_DETAIL.CNTRCT_STRT_DTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCNTRCT_END_DTNull() As Boolean
            Return Me.IsNull(Me.tableSUPPLIER_CONTRACT_DETAIL.CNTRCT_END_DTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCNTRCT_END_DTNull()
            Me(Me.tableSUPPLIER_CONTRACT_DETAIL.CNTRCT_END_DTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRNTL_PR_DYNull() As Boolean
            Return Me.IsNull(Me.tableSUPPLIER_CONTRACT_DETAIL.RNTL_PR_DYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRNTL_PR_DYNull()
            Me(Me.tableSUPPLIER_CONTRACT_DETAIL.RNTL_PR_DYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRMRKS_vcNull() As Boolean
            Return Me.IsNull(Me.tableSUPPLIER_CONTRACT_DETAIL.RMRKS_vcColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRMRKS_vcNull()
            Me(Me.tableSUPPLIER_CONTRACT_DETAIL.RMRKS_vcColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCHECKEDNull() As Boolean
            Return Me.IsNull(Me.tableSUPPLIER_CONTRACT_DETAIL.CHECKEDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCHECKEDNull()
            Me(Me.tableSUPPLIER_CONTRACT_DETAIL.CHECKEDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEDITNull() As Boolean
            Return Me.IsNull(Me.tableSUPPLIER_CONTRACT_DETAIL.EDITColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEDITNull()
            Me(Me.tableSUPPLIER_CONTRACT_DETAIL.EDITColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSPPLR_CDNull() As Boolean
            Return Me.IsNull(Me.tableSUPPLIER_CONTRACT_DETAIL.SPPLR_CDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSPPLR_CDNull()
            Me(Me.tableSUPPLIER_CONTRACT_DETAIL.SPPLR_CDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class V_SUPPLIER_EQUIPMENT_DETAILRow
        Inherits Global.System.Data.DataRow

        Private tableV_SUPPLIER_EQUIPMENT_DETAIL As V_SUPPLIER_EQUIPMENT_DETAILDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableV_SUPPLIER_EQUIPMENT_DETAIL = CType(Me.Table, V_SUPPLIER_EQUIPMENT_DETAILDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SPPLR_EQPMNT_DTL_ID() As Long
            Get
                Return CType(Me(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.SPPLR_EQPMNT_DTL_IDColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.SPPLR_EQPMNT_DTL_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SPPLR_ID() As Long
            Get
                Try
                    Return CType(Me(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.SPPLR_IDColumn), Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPPLR_ID' in table 'V_SUPPLIER_EQUIPMENT_DETAIL' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Long)
                Me(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.SPPLR_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SPPLR_CNTRCT_DTL_ID() As Long
            Get
                Try
                    Return CType(Me(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.SPPLR_CNTRCT_DTL_IDColumn), Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPPLR_CNTRCT_DTL_ID' in table 'V_SUPPLIER_EQUIPMENT_DETAIL'" & _
                            " is DBNull.", e)
                End Try
            End Get
            Set(value As Long)
                Me(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.SPPLR_CNTRCT_DTL_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EQPMNT_NO() As String
            Get
                Try
                    Return CType(Me(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.EQPMNT_NOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EQPMNT_NO' in table 'V_SUPPLIER_EQUIPMENT_DETAIL' is DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.EQPMNT_NOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EQPMNT_TYP_ID() As Long
            Get
                Try
                    Return CType(Me(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.EQPMNT_TYP_IDColumn), Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EQPMNT_TYP_ID' in table 'V_SUPPLIER_EQUIPMENT_DETAIL' is DB" & _
                            "Null.", e)
                End Try
            End Get
            Set(value As Long)
                Me(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.EQPMNT_TYP_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EQPMNT_TYP_CD() As String
            Get
                Try
                    Return CType(Me(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.EQPMNT_TYP_CDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EQPMNT_TYP_CD' in table 'V_SUPPLIER_EQUIPMENT_DETAIL' is DB" & _
                            "Null.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.EQPMNT_TYP_CDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EQPMNT_CD_ID() As Long
            Get
                Try
                    Return CType(Me(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.EQPMNT_CD_IDColumn), Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EQPMNT_CD_ID' in table 'V_SUPPLIER_EQUIPMENT_DETAIL' is DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(value As Long)
                Me(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.EQPMNT_CD_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EQPMNT_CD_CD() As String
            Get
                Try
                    Return CType(Me(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.EQPMNT_CD_CDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EQPMNT_CD_CD' in table 'V_SUPPLIER_EQUIPMENT_DETAIL' is DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.EQPMNT_CD_CDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSPPLR_IDNull() As Boolean
            Return Me.IsNull(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.SPPLR_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSPPLR_IDNull()
            Me(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.SPPLR_IDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSPPLR_CNTRCT_DTL_IDNull() As Boolean
            Return Me.IsNull(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.SPPLR_CNTRCT_DTL_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSPPLR_CNTRCT_DTL_IDNull()
            Me(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.SPPLR_CNTRCT_DTL_IDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEQPMNT_NONull() As Boolean
            Return Me.IsNull(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.EQPMNT_NOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEQPMNT_NONull()
            Me(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.EQPMNT_NOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEQPMNT_TYP_IDNull() As Boolean
            Return Me.IsNull(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.EQPMNT_TYP_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEQPMNT_TYP_IDNull()
            Me(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.EQPMNT_TYP_IDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEQPMNT_TYP_CDNull() As Boolean
            Return Me.IsNull(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.EQPMNT_TYP_CDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEQPMNT_TYP_CDNull()
            Me(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.EQPMNT_TYP_CDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEQPMNT_CD_IDNull() As Boolean
            Return Me.IsNull(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.EQPMNT_CD_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEQPMNT_CD_IDNull()
            Me(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.EQPMNT_CD_IDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEQPMNT_CD_CDNull() As Boolean
            Return Me.IsNull(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.EQPMNT_CD_CDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEQPMNT_CD_CDNull()
            Me(Me.tableV_SUPPLIER_EQUIPMENT_DETAIL.EQPMNT_CD_CDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SUPPLIER_EQUIPMENT_DETAILRow
        Inherits Global.System.Data.DataRow

        Private tableSUPPLIER_EQUIPMENT_DETAIL As SUPPLIER_EQUIPMENT_DETAILDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSUPPLIER_EQUIPMENT_DETAIL = CType(Me.Table, SUPPLIER_EQUIPMENT_DETAILDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SPPLR_EQPMNT_DTL_ID() As Long
            Get
                Return CType(Me(Me.tableSUPPLIER_EQUIPMENT_DETAIL.SPPLR_EQPMNT_DTL_IDColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableSUPPLIER_EQUIPMENT_DETAIL.SPPLR_EQPMNT_DTL_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SPPLR_ID() As Long
            Get
                Try
                    Return CType(Me(Me.tableSUPPLIER_EQUIPMENT_DETAIL.SPPLR_IDColumn), Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPPLR_ID' in table 'SUPPLIER_EQUIPMENT_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set(value As Long)
                Me(Me.tableSUPPLIER_EQUIPMENT_DETAIL.SPPLR_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SPPLR_CNTRCT_DTL_ID() As Long
            Get
                Try
                    Return CType(Me(Me.tableSUPPLIER_EQUIPMENT_DETAIL.SPPLR_CNTRCT_DTL_IDColumn), Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPPLR_CNTRCT_DTL_ID' in table 'SUPPLIER_EQUIPMENT_DETAIL' i" & _
                            "s DBNull.", e)
                End Try
            End Get
            Set(value As Long)
                Me(Me.tableSUPPLIER_EQUIPMENT_DETAIL.SPPLR_CNTRCT_DTL_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EQPMNT_NO() As String
            Get
                Try
                    Return CType(Me(Me.tableSUPPLIER_EQUIPMENT_DETAIL.EQPMNT_NOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EQPMNT_NO' in table 'SUPPLIER_EQUIPMENT_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableSUPPLIER_EQUIPMENT_DETAIL.EQPMNT_NOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EQPMNT_TYP_ID() As Long
            Get
                Try
                    Return CType(Me(Me.tableSUPPLIER_EQUIPMENT_DETAIL.EQPMNT_TYP_IDColumn), Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EQPMNT_TYP_ID' in table 'SUPPLIER_EQUIPMENT_DETAIL' is DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As Long)
                Me(Me.tableSUPPLIER_EQUIPMENT_DETAIL.EQPMNT_TYP_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EQPMNT_CD_ID() As Long
            Get
                Try
                    Return CType(Me(Me.tableSUPPLIER_EQUIPMENT_DETAIL.EQPMNT_CD_IDColumn), Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EQPMNT_CD_ID' in table 'SUPPLIER_EQUIPMENT_DETAIL' is DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As Long)
                Me(Me.tableSUPPLIER_EQUIPMENT_DETAIL.EQPMNT_CD_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSPPLR_IDNull() As Boolean
            Return Me.IsNull(Me.tableSUPPLIER_EQUIPMENT_DETAIL.SPPLR_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSPPLR_IDNull()
            Me(Me.tableSUPPLIER_EQUIPMENT_DETAIL.SPPLR_IDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSPPLR_CNTRCT_DTL_IDNull() As Boolean
            Return Me.IsNull(Me.tableSUPPLIER_EQUIPMENT_DETAIL.SPPLR_CNTRCT_DTL_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSPPLR_CNTRCT_DTL_IDNull()
            Me(Me.tableSUPPLIER_EQUIPMENT_DETAIL.SPPLR_CNTRCT_DTL_IDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEQPMNT_NONull() As Boolean
            Return Me.IsNull(Me.tableSUPPLIER_EQUIPMENT_DETAIL.EQPMNT_NOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEQPMNT_NONull()
            Me(Me.tableSUPPLIER_EQUIPMENT_DETAIL.EQPMNT_NOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEQPMNT_TYP_IDNull() As Boolean
            Return Me.IsNull(Me.tableSUPPLIER_EQUIPMENT_DETAIL.EQPMNT_TYP_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEQPMNT_TYP_IDNull()
            Me(Me.tableSUPPLIER_EQUIPMENT_DETAIL.EQPMNT_TYP_IDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEQPMNT_CD_IDNull() As Boolean
            Return Me.IsNull(Me.tableSUPPLIER_EQUIPMENT_DETAIL.EQPMNT_CD_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEQPMNT_CD_IDNull()
            Me(Me.tableSUPPLIER_EQUIPMENT_DETAIL.EQPMNT_CD_IDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class EQUIPMENT_INFORMATIONRow
        Inherits Global.System.Data.DataRow

        Private tableEQUIPMENT_INFORMATION As EQUIPMENT_INFORMATIONDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableEQUIPMENT_INFORMATION = CType(Me.Table, EQUIPMENT_INFORMATIONDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EQPMNT_INFRMTN_ID() As Long
            Get
                Return CType(Me(Me.tableEQUIPMENT_INFORMATION.EQPMNT_INFRMTN_IDColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableEQUIPMENT_INFORMATION.EQPMNT_INFRMTN_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EQPMNT_NO() As String
            Get
                Try
                    Return CType(Me(Me.tableEQUIPMENT_INFORMATION.EQPMNT_NOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EQPMNT_NO' in table 'EQUIPMENT_INFORMATION' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableEQUIPMENT_INFORMATION.EQPMNT_NOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EQPMNT_TYP_ID() As Long
            Get
                Try
                    Return CType(Me(Me.tableEQUIPMENT_INFORMATION.EQPMNT_TYP_IDColumn), Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EQPMNT_TYP_ID' in table 'EQUIPMENT_INFORMATION' is DBNull.", e)
                End Try
            End Get
            Set(value As Long)
                Me(Me.tableEQUIPMENT_INFORMATION.EQPMNT_TYP_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MNFCTR_DT() As Date
            Get
                Try
                    Return CType(Me(Me.tableEQUIPMENT_INFORMATION.MNFCTR_DTColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MNFCTR_DT' in table 'EQUIPMENT_INFORMATION' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableEQUIPMENT_INFORMATION.MNFCTR_DTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TR_WGHT_NC() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableEQUIPMENT_INFORMATION.TR_WGHT_NCColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TR_WGHT_NC' in table 'EQUIPMENT_INFORMATION' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableEQUIPMENT_INFORMATION.TR_WGHT_NCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property GRSS_WGHT_NC() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableEQUIPMENT_INFORMATION.GRSS_WGHT_NCColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GRSS_WGHT_NC' in table 'EQUIPMENT_INFORMATION' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableEQUIPMENT_INFORMATION.GRSS_WGHT_NCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CPCTY_NC() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableEQUIPMENT_INFORMATION.CPCTY_NCColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CPCTY_NC' in table 'EQUIPMENT_INFORMATION' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableEQUIPMENT_INFORMATION.CPCTY_NCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CRTD_BY() As String
            Get
                Try
                    Return CType(Me(Me.tableEQUIPMENT_INFORMATION.CRTD_BYColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CRTD_BY' in table 'EQUIPMENT_INFORMATION' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableEQUIPMENT_INFORMATION.CRTD_BYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CRTD_DT() As Date
            Get
                Try
                    Return CType(Me(Me.tableEQUIPMENT_INFORMATION.CRTD_DTColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CRTD_DT' in table 'EQUIPMENT_INFORMATION' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableEQUIPMENT_INFORMATION.CRTD_DTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MDFD_BY() As String
            Get
                Try
                    Return CType(Me(Me.tableEQUIPMENT_INFORMATION.MDFD_BYColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MDFD_BY' in table 'EQUIPMENT_INFORMATION' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableEQUIPMENT_INFORMATION.MDFD_BYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MDFD_DT() As Date
            Get
                Try
                    Return CType(Me(Me.tableEQUIPMENT_INFORMATION.MDFD_DTColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MDFD_DT' in table 'EQUIPMENT_INFORMATION' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableEQUIPMENT_INFORMATION.MDFD_DTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DPT_ID() As Integer
            Get
                Try
                    Return CType(Me(Me.tableEQUIPMENT_INFORMATION.DPT_IDColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DPT_ID' in table 'EQUIPMENT_INFORMATION' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableEQUIPMENT_INFORMATION.DPT_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ACTV_BT() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableEQUIPMENT_INFORMATION.ACTV_BTColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACTV_BT' in table 'EQUIPMENT_INFORMATION' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableEQUIPMENT_INFORMATION.ACTV_BTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RNTL_BT() As String
            Get
                Try
                    Return CType(Me(Me.tableEQUIPMENT_INFORMATION.RNTL_BTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RNTL_BT' in table 'EQUIPMENT_INFORMATION' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableEQUIPMENT_INFORMATION.RNTL_BTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEQPMNT_NONull() As Boolean
            Return Me.IsNull(Me.tableEQUIPMENT_INFORMATION.EQPMNT_NOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEQPMNT_NONull()
            Me(Me.tableEQUIPMENT_INFORMATION.EQPMNT_NOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEQPMNT_TYP_IDNull() As Boolean
            Return Me.IsNull(Me.tableEQUIPMENT_INFORMATION.EQPMNT_TYP_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEQPMNT_TYP_IDNull()
            Me(Me.tableEQUIPMENT_INFORMATION.EQPMNT_TYP_IDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMNFCTR_DTNull() As Boolean
            Return Me.IsNull(Me.tableEQUIPMENT_INFORMATION.MNFCTR_DTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMNFCTR_DTNull()
            Me(Me.tableEQUIPMENT_INFORMATION.MNFCTR_DTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTR_WGHT_NCNull() As Boolean
            Return Me.IsNull(Me.tableEQUIPMENT_INFORMATION.TR_WGHT_NCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTR_WGHT_NCNull()
            Me(Me.tableEQUIPMENT_INFORMATION.TR_WGHT_NCColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsGRSS_WGHT_NCNull() As Boolean
            Return Me.IsNull(Me.tableEQUIPMENT_INFORMATION.GRSS_WGHT_NCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetGRSS_WGHT_NCNull()
            Me(Me.tableEQUIPMENT_INFORMATION.GRSS_WGHT_NCColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCPCTY_NCNull() As Boolean
            Return Me.IsNull(Me.tableEQUIPMENT_INFORMATION.CPCTY_NCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCPCTY_NCNull()
            Me(Me.tableEQUIPMENT_INFORMATION.CPCTY_NCColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCRTD_BYNull() As Boolean
            Return Me.IsNull(Me.tableEQUIPMENT_INFORMATION.CRTD_BYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCRTD_BYNull()
            Me(Me.tableEQUIPMENT_INFORMATION.CRTD_BYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCRTD_DTNull() As Boolean
            Return Me.IsNull(Me.tableEQUIPMENT_INFORMATION.CRTD_DTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCRTD_DTNull()
            Me(Me.tableEQUIPMENT_INFORMATION.CRTD_DTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMDFD_BYNull() As Boolean
            Return Me.IsNull(Me.tableEQUIPMENT_INFORMATION.MDFD_BYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMDFD_BYNull()
            Me(Me.tableEQUIPMENT_INFORMATION.MDFD_BYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMDFD_DTNull() As Boolean
            Return Me.IsNull(Me.tableEQUIPMENT_INFORMATION.MDFD_DTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMDFD_DTNull()
            Me(Me.tableEQUIPMENT_INFORMATION.MDFD_DTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDPT_IDNull() As Boolean
            Return Me.IsNull(Me.tableEQUIPMENT_INFORMATION.DPT_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDPT_IDNull()
            Me(Me.tableEQUIPMENT_INFORMATION.DPT_IDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsACTV_BTNull() As Boolean
            Return Me.IsNull(Me.tableEQUIPMENT_INFORMATION.ACTV_BTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetACTV_BTNull()
            Me(Me.tableEQUIPMENT_INFORMATION.ACTV_BTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRNTL_BTNull() As Boolean
            Return Me.IsNull(Me.tableEQUIPMENT_INFORMATION.RNTL_BTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRNTL_BTNull()
            Me(Me.tableEQUIPMENT_INFORMATION.RNTL_BTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SUPPLIER_CNTRACT_DTLRow
        Inherits Global.System.Data.DataRow

        Private tableSUPPLIER_CNTRACT_DTL As SUPPLIER_CNTRACT_DTLDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSUPPLIER_CNTRACT_DTL = CType(Me.Table, SUPPLIER_CNTRACT_DTLDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SPPLR_CNTRCT_DTL_ID() As String
            Get
                Try
                    Return CType(Me(Me.tableSUPPLIER_CNTRACT_DTL.SPPLR_CNTRCT_DTL_IDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPPLR_CNTRCT_DTL_ID' in table 'SUPPLIER_CNTRACT_DTL' is DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableSUPPLIER_CNTRACT_DTL.SPPLR_CNTRCT_DTL_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CNTRCT_RFRNC_NO() As String
            Get
                Try
                    Return CType(Me(Me.tableSUPPLIER_CNTRACT_DTL.CNTRCT_RFRNC_NOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CNTRCT_RFRNC_NO' in table 'SUPPLIER_CNTRACT_DTL' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableSUPPLIER_CNTRACT_DTL.CNTRCT_RFRNC_NOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SPPLR_ID() As String
            Get
                Try
                    Return CType(Me(Me.tableSUPPLIER_CNTRACT_DTL.SPPLR_IDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPPLR_ID' in table 'SUPPLIER_CNTRACT_DTL' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableSUPPLIER_CNTRACT_DTL.SPPLR_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SPPLR_CD() As String
            Get
                Try
                    Return CType(Me(Me.tableSUPPLIER_CNTRACT_DTL.SPPLR_CDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPPLR_CD' in table 'SUPPLIER_CNTRACT_DTL' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableSUPPLIER_CNTRACT_DTL.SPPLR_CDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DPT_ID() As String
            Get
                Try
                    Return CType(Me(Me.tableSUPPLIER_CNTRACT_DTL.DPT_IDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DPT_ID' in table 'SUPPLIER_CNTRACT_DTL' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableSUPPLIER_CNTRACT_DTL.DPT_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EQPMNT_NO() As String
            Get
                Try
                    Return CType(Me(Me.tableSUPPLIER_CNTRACT_DTL.EQPMNT_NOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EQPMNT_NO' in table 'SUPPLIER_CNTRACT_DTL' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableSUPPLIER_CNTRACT_DTL.EQPMNT_NOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSPPLR_CNTRCT_DTL_IDNull() As Boolean
            Return Me.IsNull(Me.tableSUPPLIER_CNTRACT_DTL.SPPLR_CNTRCT_DTL_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSPPLR_CNTRCT_DTL_IDNull()
            Me(Me.tableSUPPLIER_CNTRACT_DTL.SPPLR_CNTRCT_DTL_IDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCNTRCT_RFRNC_NONull() As Boolean
            Return Me.IsNull(Me.tableSUPPLIER_CNTRACT_DTL.CNTRCT_RFRNC_NOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCNTRCT_RFRNC_NONull()
            Me(Me.tableSUPPLIER_CNTRACT_DTL.CNTRCT_RFRNC_NOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSPPLR_IDNull() As Boolean
            Return Me.IsNull(Me.tableSUPPLIER_CNTRACT_DTL.SPPLR_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSPPLR_IDNull()
            Me(Me.tableSUPPLIER_CNTRACT_DTL.SPPLR_IDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSPPLR_CDNull() As Boolean
            Return Me.IsNull(Me.tableSUPPLIER_CNTRACT_DTL.SPPLR_CDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSPPLR_CDNull()
            Me(Me.tableSUPPLIER_CNTRACT_DTL.SPPLR_CDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDPT_IDNull() As Boolean
            Return Me.IsNull(Me.tableSUPPLIER_CNTRACT_DTL.DPT_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDPT_IDNull()
            Me(Me.tableSUPPLIER_CNTRACT_DTL.DPT_IDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEQPMNT_NONull() As Boolean
            Return Me.IsNull(Me.tableSUPPLIER_CNTRACT_DTL.EQPMNT_NOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEQPMNT_NONull()
            Me(Me.tableSUPPLIER_CNTRACT_DTL.EQPMNT_NOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class V_RENTAL_ENTRYRow
        Inherits Global.System.Data.DataRow

        Private tableV_RENTAL_ENTRY As V_RENTAL_ENTRYDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableV_RENTAL_ENTRY = CType(Me.Table, V_RENTAL_ENTRYDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RNTL_ENTRY_ID() As Long
            Get
                Return CType(Me(Me.tableV_RENTAL_ENTRY.RNTL_ENTRY_IDColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableV_RENTAL_ENTRY.RNTL_ENTRY_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EQPMNT_NO() As String
            Get
                Try
                    Return CType(Me(Me.tableV_RENTAL_ENTRY.EQPMNT_NOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EQPMNT_NO' in table 'V_RENTAL_ENTRY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableV_RENTAL_ENTRY.EQPMNT_NOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CSTMR_ID() As Long
            Get
                Try
                    Return CType(Me(Me.tableV_RENTAL_ENTRY.CSTMR_IDColumn), Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CSTMR_ID' in table 'V_RENTAL_ENTRY' is DBNull.", e)
                End Try
            End Get
            Set(value As Long)
                Me(Me.tableV_RENTAL_ENTRY.CSTMR_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CSTMR_CD() As String
            Get
                Try
                    Return CType(Me(Me.tableV_RENTAL_ENTRY.CSTMR_CDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CSTMR_CD' in table 'V_RENTAL_ENTRY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableV_RENTAL_ENTRY.CSTMR_CDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CSTMR_NAM() As String
            Get
                Try
                    Return CType(Me(Me.tableV_RENTAL_ENTRY.CSTMR_NAMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CSTMR_NAM' in table 'V_RENTAL_ENTRY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableV_RENTAL_ENTRY.CSTMR_NAMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CNTRCT_RFRNC_NO() As String
            Get
                Try
                    Return CType(Me(Me.tableV_RENTAL_ENTRY.CNTRCT_RFRNC_NOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CNTRCT_RFRNC_NO' in table 'V_RENTAL_ENTRY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableV_RENTAL_ENTRY.CNTRCT_RFRNC_NOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PO_RFRNC_NO() As String
            Get
                Try
                    Return CType(Me(Me.tableV_RENTAL_ENTRY.PO_RFRNC_NOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PO_RFRNC_NO' in table 'V_RENTAL_ENTRY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableV_RENTAL_ENTRY.PO_RFRNC_NOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RNTL_PR_DY() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableV_RENTAL_ENTRY.RNTL_PR_DYColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RNTL_PR_DY' in table 'V_RENTAL_ENTRY' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableV_RENTAL_ENTRY.RNTL_PR_DYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ON_HR_DT() As Date
            Get
                Try
                    Return CType(Me(Me.tableV_RENTAL_ENTRY.ON_HR_DTColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ON_HR_DT' in table 'V_RENTAL_ENTRY' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableV_RENTAL_ENTRY.ON_HR_DTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property HNDLNG_OT_NC() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableV_RENTAL_ENTRY.HNDLNG_OT_NCColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HNDLNG_OT_NC' in table 'V_RENTAL_ENTRY' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableV_RENTAL_ENTRY.HNDLNG_OT_NCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ON_HR_SRVY_NC() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableV_RENTAL_ENTRY.ON_HR_SRVY_NCColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ON_HR_SRVY_NC' in table 'V_RENTAL_ENTRY' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableV_RENTAL_ENTRY.ON_HR_SRVY_NCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property OFF_HR_DT() As Date
            Get
                Try
                    Return CType(Me(Me.tableV_RENTAL_ENTRY.OFF_HR_DTColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OFF_HR_DT' in table 'V_RENTAL_ENTRY' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableV_RENTAL_ENTRY.OFF_HR_DTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property HNDLNG_IN_NC() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableV_RENTAL_ENTRY.HNDLNG_IN_NCColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HNDLNG_IN_NC' in table 'V_RENTAL_ENTRY' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableV_RENTAL_ENTRY.HNDLNG_IN_NCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property OFF_HR_SRVY_NC() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableV_RENTAL_ENTRY.OFF_HR_SRVY_NCColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OFF_HR_SRVY_NC' in table 'V_RENTAL_ENTRY' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableV_RENTAL_ENTRY.OFF_HR_SRVY_NCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property OTHR_CHRG_NC() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableV_RENTAL_ENTRY.OTHR_CHRG_NCColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTHR_CHRG_NC' in table 'V_RENTAL_ENTRY' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableV_RENTAL_ENTRY.OTHR_CHRG_NCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RMRKS_VC() As String
            Get
                Try
                    Return CType(Me(Me.tableV_RENTAL_ENTRY.RMRKS_VCColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RMRKS_VC' in table 'V_RENTAL_ENTRY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableV_RENTAL_ENTRY.RMRKS_VCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DPT_ID() As Integer
            Get
                Try
                    Return CType(Me(Me.tableV_RENTAL_ENTRY.DPT_IDColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DPT_ID' in table 'V_RENTAL_ENTRY' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableV_RENTAL_ENTRY.DPT_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CRTD_BY() As String
            Get
                Try
                    Return CType(Me(Me.tableV_RENTAL_ENTRY.CRTD_BYColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CRTD_BY' in table 'V_RENTAL_ENTRY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableV_RENTAL_ENTRY.CRTD_BYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CRTD_DT() As Date
            Get
                Try
                    Return CType(Me(Me.tableV_RENTAL_ENTRY.CRTD_DTColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CRTD_DT' in table 'V_RENTAL_ENTRY' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableV_RENTAL_ENTRY.CRTD_DTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MDFD_BY() As String
            Get
                Try
                    Return CType(Me(Me.tableV_RENTAL_ENTRY.MDFD_BYColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MDFD_BY' in table 'V_RENTAL_ENTRY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableV_RENTAL_ENTRY.MDFD_BYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MDFD_DT() As Date
            Get
                Try
                    Return CType(Me(Me.tableV_RENTAL_ENTRY.MDFD_DTColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MDFD_DT' in table 'V_RENTAL_ENTRY' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableV_RENTAL_ENTRY.MDFD_DTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EQPMNT_INFRMTN_ID() As String
            Get
                Try
                    Return CType(Me(Me.tableV_RENTAL_ENTRY.EQPMNT_INFRMTN_IDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EQPMNT_INFRMTN_ID' in table 'V_RENTAL_ENTRY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableV_RENTAL_ENTRY.EQPMNT_INFRMTN_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CHECKED() As String
            Get
                Try
                    Return CType(Me(Me.tableV_RENTAL_ENTRY.CHECKEDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CHECKED' in table 'V_RENTAL_ENTRY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableV_RENTAL_ENTRY.CHECKEDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property HYP_OTHERCHARGE() As String
            Get
                Try
                    Return CType(Me(Me.tableV_RENTAL_ENTRY.HYP_OTHERCHARGEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HYP_OTHERCHARGE' in table 'V_RENTAL_ENTRY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableV_RENTAL_ENTRY.HYP_OTHERCHARGEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RNTL_RFRNC_NO() As String
            Get
                Try
                    Return CType(Me(Me.tableV_RENTAL_ENTRY.RNTL_RFRNC_NOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RNTL_RFRNC_NO' in table 'V_RENTAL_ENTRY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableV_RENTAL_ENTRY.RNTL_RFRNC_NOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property GI_TRNSCTN_NO() As String
            Get
                Try
                    Return CType(Me(Me.tableV_RENTAL_ENTRY.GI_TRNSCTN_NOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GI_TRNSCTN_NO' in table 'V_RENTAL_ENTRY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableV_RENTAL_ENTRY.GI_TRNSCTN_NOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TTL_OTHR_CHRG_NC() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableV_RENTAL_ENTRY.TTL_OTHR_CHRG_NCColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TTL_OTHR_CHRG_NC' in table 'V_RENTAL_ENTRY' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableV_RENTAL_ENTRY.TTL_OTHR_CHRG_NCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEQPMNT_NONull() As Boolean
            Return Me.IsNull(Me.tableV_RENTAL_ENTRY.EQPMNT_NOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEQPMNT_NONull()
            Me(Me.tableV_RENTAL_ENTRY.EQPMNT_NOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCSTMR_IDNull() As Boolean
            Return Me.IsNull(Me.tableV_RENTAL_ENTRY.CSTMR_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCSTMR_IDNull()
            Me(Me.tableV_RENTAL_ENTRY.CSTMR_IDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCSTMR_CDNull() As Boolean
            Return Me.IsNull(Me.tableV_RENTAL_ENTRY.CSTMR_CDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCSTMR_CDNull()
            Me(Me.tableV_RENTAL_ENTRY.CSTMR_CDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCSTMR_NAMNull() As Boolean
            Return Me.IsNull(Me.tableV_RENTAL_ENTRY.CSTMR_NAMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCSTMR_NAMNull()
            Me(Me.tableV_RENTAL_ENTRY.CSTMR_NAMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCNTRCT_RFRNC_NONull() As Boolean
            Return Me.IsNull(Me.tableV_RENTAL_ENTRY.CNTRCT_RFRNC_NOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCNTRCT_RFRNC_NONull()
            Me(Me.tableV_RENTAL_ENTRY.CNTRCT_RFRNC_NOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPO_RFRNC_NONull() As Boolean
            Return Me.IsNull(Me.tableV_RENTAL_ENTRY.PO_RFRNC_NOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPO_RFRNC_NONull()
            Me(Me.tableV_RENTAL_ENTRY.PO_RFRNC_NOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRNTL_PR_DYNull() As Boolean
            Return Me.IsNull(Me.tableV_RENTAL_ENTRY.RNTL_PR_DYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRNTL_PR_DYNull()
            Me(Me.tableV_RENTAL_ENTRY.RNTL_PR_DYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsON_HR_DTNull() As Boolean
            Return Me.IsNull(Me.tableV_RENTAL_ENTRY.ON_HR_DTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetON_HR_DTNull()
            Me(Me.tableV_RENTAL_ENTRY.ON_HR_DTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsHNDLNG_OT_NCNull() As Boolean
            Return Me.IsNull(Me.tableV_RENTAL_ENTRY.HNDLNG_OT_NCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetHNDLNG_OT_NCNull()
            Me(Me.tableV_RENTAL_ENTRY.HNDLNG_OT_NCColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsON_HR_SRVY_NCNull() As Boolean
            Return Me.IsNull(Me.tableV_RENTAL_ENTRY.ON_HR_SRVY_NCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetON_HR_SRVY_NCNull()
            Me(Me.tableV_RENTAL_ENTRY.ON_HR_SRVY_NCColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsOFF_HR_DTNull() As Boolean
            Return Me.IsNull(Me.tableV_RENTAL_ENTRY.OFF_HR_DTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetOFF_HR_DTNull()
            Me(Me.tableV_RENTAL_ENTRY.OFF_HR_DTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsHNDLNG_IN_NCNull() As Boolean
            Return Me.IsNull(Me.tableV_RENTAL_ENTRY.HNDLNG_IN_NCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetHNDLNG_IN_NCNull()
            Me(Me.tableV_RENTAL_ENTRY.HNDLNG_IN_NCColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsOFF_HR_SRVY_NCNull() As Boolean
            Return Me.IsNull(Me.tableV_RENTAL_ENTRY.OFF_HR_SRVY_NCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetOFF_HR_SRVY_NCNull()
            Me(Me.tableV_RENTAL_ENTRY.OFF_HR_SRVY_NCColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsOTHR_CHRG_NCNull() As Boolean
            Return Me.IsNull(Me.tableV_RENTAL_ENTRY.OTHR_CHRG_NCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetOTHR_CHRG_NCNull()
            Me(Me.tableV_RENTAL_ENTRY.OTHR_CHRG_NCColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRMRKS_VCNull() As Boolean
            Return Me.IsNull(Me.tableV_RENTAL_ENTRY.RMRKS_VCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRMRKS_VCNull()
            Me(Me.tableV_RENTAL_ENTRY.RMRKS_VCColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDPT_IDNull() As Boolean
            Return Me.IsNull(Me.tableV_RENTAL_ENTRY.DPT_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDPT_IDNull()
            Me(Me.tableV_RENTAL_ENTRY.DPT_IDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCRTD_BYNull() As Boolean
            Return Me.IsNull(Me.tableV_RENTAL_ENTRY.CRTD_BYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCRTD_BYNull()
            Me(Me.tableV_RENTAL_ENTRY.CRTD_BYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCRTD_DTNull() As Boolean
            Return Me.IsNull(Me.tableV_RENTAL_ENTRY.CRTD_DTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCRTD_DTNull()
            Me(Me.tableV_RENTAL_ENTRY.CRTD_DTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMDFD_BYNull() As Boolean
            Return Me.IsNull(Me.tableV_RENTAL_ENTRY.MDFD_BYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMDFD_BYNull()
            Me(Me.tableV_RENTAL_ENTRY.MDFD_BYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMDFD_DTNull() As Boolean
            Return Me.IsNull(Me.tableV_RENTAL_ENTRY.MDFD_DTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMDFD_DTNull()
            Me(Me.tableV_RENTAL_ENTRY.MDFD_DTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEQPMNT_INFRMTN_IDNull() As Boolean
            Return Me.IsNull(Me.tableV_RENTAL_ENTRY.EQPMNT_INFRMTN_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEQPMNT_INFRMTN_IDNull()
            Me(Me.tableV_RENTAL_ENTRY.EQPMNT_INFRMTN_IDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCHECKEDNull() As Boolean
            Return Me.IsNull(Me.tableV_RENTAL_ENTRY.CHECKEDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCHECKEDNull()
            Me(Me.tableV_RENTAL_ENTRY.CHECKEDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsHYP_OTHERCHARGENull() As Boolean
            Return Me.IsNull(Me.tableV_RENTAL_ENTRY.HYP_OTHERCHARGEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetHYP_OTHERCHARGENull()
            Me(Me.tableV_RENTAL_ENTRY.HYP_OTHERCHARGEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRNTL_RFRNC_NONull() As Boolean
            Return Me.IsNull(Me.tableV_RENTAL_ENTRY.RNTL_RFRNC_NOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRNTL_RFRNC_NONull()
            Me(Me.tableV_RENTAL_ENTRY.RNTL_RFRNC_NOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsGI_TRNSCTN_NONull() As Boolean
            Return Me.IsNull(Me.tableV_RENTAL_ENTRY.GI_TRNSCTN_NOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetGI_TRNSCTN_NONull()
            Me(Me.tableV_RENTAL_ENTRY.GI_TRNSCTN_NOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTTL_OTHR_CHRG_NCNull() As Boolean
            Return Me.IsNull(Me.tableV_RENTAL_ENTRY.TTL_OTHR_CHRG_NCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTTL_OTHR_CHRG_NCNull()
            Me(Me.tableV_RENTAL_ENTRY.TTL_OTHR_CHRG_NCColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class SUPPLIERRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As SUPPLIERRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As SUPPLIERRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As SUPPLIERRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class SUPPLIER_CONTRACT_DETAILRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As SUPPLIER_CONTRACT_DETAILRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As SUPPLIER_CONTRACT_DETAILRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As SUPPLIER_CONTRACT_DETAILRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class V_SUPPLIER_EQUIPMENT_DETAILRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As V_SUPPLIER_EQUIPMENT_DETAILRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As V_SUPPLIER_EQUIPMENT_DETAILRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As V_SUPPLIER_EQUIPMENT_DETAILRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class SUPPLIER_EQUIPMENT_DETAILRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As SUPPLIER_EQUIPMENT_DETAILRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As SUPPLIER_EQUIPMENT_DETAILRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As SUPPLIER_EQUIPMENT_DETAILRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class EQUIPMENT_INFORMATIONRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As EQUIPMENT_INFORMATIONRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As EQUIPMENT_INFORMATIONRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As EQUIPMENT_INFORMATIONRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class SUPPLIER_CNTRACT_DTLRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As SUPPLIER_CNTRACT_DTLRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As SUPPLIER_CNTRACT_DTLRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As SUPPLIER_CNTRACT_DTLRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class V_RENTAL_ENTRYRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As V_RENTAL_ENTRYRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As V_RENTAL_ENTRYRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As V_RENTAL_ENTRYRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
